<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生信技术</title>
  <icon>https://www.gravatar.com/avatar/30f31e0664ab0e7e627ecebc10f27c7b</icon>
  <subtitle>Cease to struggle and you cease to live</subtitle>
  <link href="http://lxz9.com/atom.xml" rel="self"/>
  
  <link href="http://lxz9.com/"/>
  <updated>2022-03-31T08:53:28.000Z</updated>
  <id>http://lxz9.com/</id>
  
  <author>
    <name>李星泽</name>
    <email>lixingzee@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git 用法总结</title>
    <link href="http://lxz9.com/2022/03/30/git/"/>
    <id>http://lxz9.com/2022/03/30/git/</id>
    <published>2022-03-29T16:00:00.000Z</published>
    <updated>2022-03-31T08:53:28.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0ae63168d15ab6ca373a56d17f2af7f390b032b6f7ab695bc5c89b36ca6fc1ac"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="encryptAsDiary" scheme="http://lxz9.com/tags/encryptAsDiary/"/>
    
  </entry>
  
  <entry>
    <title>Python 类型提示和静态类型检查</title>
    <link href="http://lxz9.com/2022/03/26/TypeHints/"/>
    <id>http://lxz9.com/2022/03/26/TypeHints/</id>
    <published>2022-03-25T16:00:00.000Z</published>
    <updated>2022-03-28T13:05:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>在本文中，将了解 Python 类型检查 (<em>Type-Checking</em>) 。</p><p>在本教程中，将了解以下内容：</p><ul><li>类型注释和类型提示</li><li>将静态类型添加到代码中，包括你的代码和其他人的代码</li><li>运行静态类型检查器</li><li>在运行时强制类型</li></ul><div align="center" class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=255204618&amp;bvid=BV1JY411J7Ry&amp;cid=561330333&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="true">    </iframe></div><h2 id="类型系统">类型系统</h2><p>所有编程语言都包含某种类型系统，该系统形式化了它可以使用哪些类别的对象以及如何处理这些类别。</p><p>例如，一个类型系统可以定义一个数字类型，42作为一个数字类型对象的例子。</p><h3 id="动态类型-Dynamic-Typing">动态类型 (Dynamic Typing)</h3><p>Python 是一种动态类型语言。这意味着 Python 解释器仅在代码运行时进行类型检查，并且允许变量的类型在其生命周期内更改。以下虚拟示例演示 Python 具有动态类型：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> <span class="literal">False</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="number">1</span> + <span class="string">"two"</span>  <span class="comment"># This line never runs, so no TypeError is raised</span></span><br><span class="line"><span class="meta">... </span><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="number">1</span> + <span class="number">2</span></span><br><span class="line">...</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span> + <span class="string">"two"</span>  <span class="comment"># Now this is type checked, and a TypeError is raised</span></span><br><span class="line">TypeError: unsupported operand <span class="built_in">type</span>(s) <span class="keyword">for</span> +: <span class="string">'int'</span> <span class="keyword">and</span> <span class="string">'str'</span></span><br></pre></td></tr></tbody></table></figure><p>在第一个示例中，分支<code>1 + "two"</code>从不运行，因此从不检查类型。</p><p>第二个示例显示，当<code>1 + "two"</code>被评估时，它会引发一个 TypeError ，因为在Python中整数和字符串不能相加。</p><p>接下来，让我们看看变量是否可以改变类型：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>thing = <span class="string">"Hello"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(thing)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line">&gt;&gt;&gt; thing = 28.1</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(thing)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">float</span>'&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><code>type()</code>返回对象的类型。</p><p>这些例子证实了事物的类型是允许更改的，Python在类型更改时正确地推断出它的类型。</p><h3 id="静态类型-Static-Typing">静态类型 (Static Typing)</h3><p>与动态类型相反的是静态类型。静态类型检查在不运行程序的情况下执行。在大多数静态类型语言中，例如C和Java，这是在编译程序时完成的。</p><p>对于静态类型，通常不允许变量更改类型，尽管可能存在将变量强制转换为其他类型的机制。</p><p>让我们来看一个来自静态类型语言的快速示例。下面的 Java 片段：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String thing;</span><br><span class="line">thing = <span class="string">"Hello"</span>;</span><br></pre></td></tr></tbody></table></figure><p>第一行声明变量名<code>thing</code>在编译时绑定到字符串类型。这个名字永远不可能换成另一种类型。在第二行，事物被赋值。它永远不能被分配一个不是字符串对象的值。例如，如果后来说 <code>thing=28.1f</code>，编译器会因为不兼容的类型而引发错误。</p><p>Python将始终是<a href="https://www.python.org/dev/peps/pep-0484/#non-goals">一种动态类型的语言</a>。然而，<a href="https://www.python.org/dev/peps/pep-0484/">PEP 484</a>引入了类型提示，这使得也可以对Python代码进行静态类型检查。</p><p>与大多数其他静态类型语言中的类型工作方式不同，类型提示本身不会导致 Python 强制执行类型。正如名字所说，类型提示只是建议类型。还有其他一些工具，将在后面看到，它们使用类型提示执行静态类型检查。</p><h3 id="鸭子类型-duck-typing">鸭子类型 (duck typing)</h3><p>在谈论Python时经常使用的另一个术语是<a href="https://en.wikipedia.org/wiki/Duck_typing">鸭子类型</a>。</p><p>“当看到一只鸟走起来像鸭子、游泳起来像鸭子、叫起来也像鸭子，那么这只鸟就可以被称为鸭子。”</p><p>我们并不关心对象是什么类型，到底是不是鸭子，只关心行为。</p><p>鸭子类型是一个与动态类型相关的概念，其中对象的类型或类不如它定义的方法重要。使用鸭子类型根本不需要检查类型，而是检查给定方法或属性是否存在。</p><p>例如，可以在任何定义了 <code>.__len__()</code> 方法的 Python 对象上调用 <code>len()</code> ：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">TheHobbit</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__len__</span>(<span class="params">self</span>):</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">95022</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_hobbit = TheHobbit()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(the_hobbit)</span><br><span class="line"><span class="number">95022</span></span><br></pre></td></tr></tbody></table></figure><p>请注意，对 <code>len()</code> 的调用给出了 <code>.__len__()</code> 方法的返回值。 其实<code>len()</code>的实现本质上等价于以下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">len</span>(<span class="params">obj</span>):</span></span><br><span class="line">    <span class="keyword">return</span> obj.__len__()</span><br></pre></td></tr></tbody></table></figure><p>为了调用 len(obj)，对 obj 的唯一真正约束是它必须定义一个 <code>.__len__()</code> 方法。</p><p>否则，对象的类型可以与 str、list、dict 或 TheHobbit 等不同。</p><p>在使用结构子类型对 Python 代码进行静态类型检查时，一定程度上支持 Duck 类型。 稍后您将了解有关鸭子类型的更多信息。</p><h2 id="Hello-Types">Hello Types</h2><p>在本节中，将看到如何向函数添加类型提示。</p><p>下面的函数通过添加适当的大写字母和装饰线将文本字符串转换为标题：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">headline</span>(<span class="params">text, align=<span class="literal">True</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> align:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f"<span class="subst">{text.title()}</span>\n<span class="subst">{<span class="string">'-'</span> * <span class="built_in">len</span>(text)}</span>"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f" <span class="subst">{text.title()}</span> "</span>.center(<span class="number">50</span>, <span class="string">"o"</span>)</span><br></pre></td></tr></tbody></table></figure><p>默认情况下，该函数返回与下划线左对齐的标题。通过将 align 标志设置为 False，也可以让标题以围绕线 o 居中：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(headline(<span class="string">"python type checking"</span>))</span><br><span class="line">Python Type Checking</span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(headline(<span class="string">"python type checking"</span>, align=<span class="literal">False</span>))</span><br><span class="line">oooooooooooooo Python Type Checking oooooooooooooo</span><br></pre></td></tr></tbody></table></figure><p>要向函数添加有关类型的信息，只需注释其参数和返回值，如下所示：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">headline</span>(<span class="params">text: <span class="built_in">str</span>, align: <span class="built_in">bool</span> = <span class="literal">True</span></span>) -&gt; str:</span></span><br></pre></td></tr></tbody></table></figure><p><code>text: str</code> 语法表明 text 参数应该是 str 类型</p><p>可选参数 <code>align</code> 指定其类型为 <code>bool</code> 并给定默认值 <em>True</em></p><p>最后, <code>-&gt; str</code> 表示函数 <code>headline()</code> 返回值类型为 str</p><p>在代码风格方面，PEP 8建议如下：:</p><ul><li><p>对冒号使用常规规则，即冒号前没有空格，冒号后面有一个空格：<code>text: str</code>。</p></li><li><p>将参数注释与默认值组合时，在 = 符号周围使用空格：<code>align: bool = True</code></p></li><li><p>在 -&gt; 箭头周围使用空格：<code>def  headline（...） - &gt; str</code></p></li></ul><p>像这样添加类型提示不会产生运行时影响：它们只是提示，不会自行强制执行。</p><p>例如，如果我们对 align 参数使用了错误的类型（即使命名错误），代码仍然可以运行而没有任何问题或警告：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(headline(<span class="string">"python type checking"</span>, align=<span class="string">"left"</span>))</span><br><span class="line">Python Type Checking</span><br><span class="line">--------------------</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p><strong>NOTE：</strong><br> 这看似有效的原因是字符串“left”比较为真。使用 align=“center” 不会产生预期的效果，因为 “center” 也是真</p></blockquote><p>要捕获此类错误，可以使用静态类型检查器。也就是说，一种无需传统意义上实际运行即可检查代码类型的工具。</p><p>可能已经在编辑器中内置了这样的类型检查器。例如 PyCharm 立即给你一个警告：</p><p><img src="https://s1.ax1x.com/2022/03/25/qNCF56.png" alt=""></p><p>但是如果传入的参数类型不是指定的参数类型，程序不会出现错误，此时可以使用类型检查模块通过提示内容确定是否类型输入正确，如<a href="http://mypy-lang.org/">Mypy</a></p><p>可以通过 pip安装:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install mypy</span><br></pre></td></tr></tbody></table></figure><p>将以下代码放在名为headlines.py的文件中:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># headlines.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">headline</span>(<span class="params">text: <span class="built_in">str</span>, align: <span class="built_in">bool</span> = <span class="literal">True</span></span>) -&gt; str:</span></span><br><span class="line">    <span class="keyword">if</span> align:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f"<span class="subst">{text.title()}</span>\n<span class="subst">{<span class="string">'-'</span> * <span class="built_in">len</span>(text)}</span>"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f" <span class="subst">{text.title()}</span> "</span>.center(<span class="number">50</span>, <span class="string">"o"</span>)</span><br><span class="line"></span><br><span class="line">print(headline(<span class="string">"python type checking"</span>))</span><br><span class="line">print(headline(<span class="string">"use mypy"</span>, align=<span class="string">"center"</span>))</span><br></pre></td></tr></tbody></table></figure><p>然后通过Mypy运行上面的文件:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mypy headlines.py</span><br><span class="line">headlines.py:10: error: Argument <span class="string">"align"</span> to <span class="string">"headline"</span> has incompatible</span><br><span class="line">                        <span class="built_in">type</span> <span class="string">"str"</span>; expected <span class="string">"bool"</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>根据类型提示，Mypy能够告诉我们我们在第10行使用了错误的类型</p><p>要解决代码中的问题，应该更改传入的 align 参数的值。还可以将 align 标志重命名为不那么容易混淆的名称</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># headlines.py</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">headline</span>(<span class="params">text: <span class="built_in">str</span>, centered: <span class="built_in">bool</span> = <span class="literal">False</span></span>) -&gt; str:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> centered:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f"<span class="subst">{text.title()}</span>\n<span class="subst">{<span class="string">'-'</span> * <span class="built_in">len</span>(text)}</span>"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f" <span class="subst">{text.title()}</span> "</span>.center(<span class="number">50</span>, <span class="string">"o"</span>)</span><br><span class="line"></span><br><span class="line">print(headline(<span class="string">"python type checking"</span>))</span><br><span class="line">print(headline(<span class="string">"use mypy"</span>, centered=<span class="literal">True</span>))</span><br></pre></td></tr></tbody></table></figure><p>在这里，已将对齐更改为居中，并在调用 <code>header()</code> 时正确使用了<a href="https://realpython.com/python-boolean/">布尔值</a>作为居中。</p><p>代码现在通过 Mypy：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mypy headlines.py</span><br><span class="line">Success: no issues found <span class="keyword">in</span> 1 <span class="built_in">source</span> file</span><br></pre></td></tr></tbody></table></figure><p>当运行下面代码时，会看到预期的输出：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python headlines.py</span><br><span class="line">Python Type Checking</span><br><span class="line">--------------------</span><br><span class="line">oooooooooooooooooooo Use Mypy oooooooooooooooooooo</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>第一个标题与左侧对齐，而第二个标题居中。</p><h2 id="优缺点">优缺点</h2><p>在代码中添加类型的优势之一是类型提示有助于<strong>捕获某些错误</strong>。其他优点包括：</p><ul><li><p>类型提示有助于<strong>记录代码</strong>。</p></li><li><p>类型提示<strong>改进了 IDE 和 linter</strong>。它们使静态推理代码变得更加容易。这反过来又允许 IDE 提供更好的代码完成和类似的功能。如下图通过类型注解，PyCharm 知道 text 是一个字符串，并且可以基于此给出具体的建议：</p></li></ul><p><img src="https://s1.ax1x.com/2022/03/25/qNCAPK.png" alt=""></p><ul><li>类型提示可帮助<strong>构建和维护更简洁的架构</strong>。编写类型提示的行为迫使考虑程序中的类型。虽然Python的动态特性是其重要资产之一，但是有意识地依赖于鸭子类型，重载方法或多种返回类型是一件好事。</li></ul><p>当然，静态类型检查还会有一些缺点：</p><ul><li><p>类型提示<strong>需要开发人员时间和精力来添加</strong>。尽管花费更少的调试时间可能会有所回报，但将花费更多的时间输入代码。</p></li><li><p>类型提示<strong>在现代 Python 中效果最好</strong>。注释是在 Python 3.0 中引入的，并且可以在 Python 2.7中使用<a href="https://realpython.com/python-type-checking/#type-comments">类型注释</a>。尽管如此，<a href="https://realpython.com/python-type-checking/#variable-annotations">变量注释</a>和<a href="https://www.python.org/dev/peps/pep-0563/">类型提示的延迟评估等</a>改进意味着您将拥有更好的使用 Python 3.6 甚至<a href="https://realpython.com/python37-new-features/">Python 3.7</a>进行类型检查的体验。</p></li><li><p>类型提示<strong>会在启动时间上带来轻微的损失</strong>。如果您需要使用该<a href="https://realpython.com/python-type-checking/#sequences-and-mappings">typing模块</a>，则导入时间可能很长，尤其是在短脚本中。</p></li></ul><p>那么，应该在自己的代码中使用静态类型检查吗？嗯，这不是一个全有或全无的问题。幸运的是，Python 支持渐进类型的概念。这意味着可以逐渐将类型引入代码中。</p><p>静态类型检查器将忽略没有类型提示的代码。因此，可以开始向关键组件添加类型，并在它增加价值的情况下继续。</p><p><strong>关于是否向项目添加类型的一些经验法则：</strong></p><ul><li><p>如果您刚开始学习Python，可以安全地等待类型提示，直到您有更多经验。</p></li><li><p>类型提示在<a href="https://www.youtube.com/watch?v=Jd8ulMb6_ls">简短的一次性脚本</a>中几乎没有什么价值。</p></li><li><p>在其他人使用的库中，尤其是在PyPI上发布的库中，类型提示会增加很多价值。使用库的其他代码需要这些类型提示才能正确地进行类型检查。</p></li><li><p>在较大的项目中，类型提示可以帮助理解类型是如何在代码中流动的，强烈推荐。在与他人合作的项目中更是如此。</p></li></ul><p>查看上面的优缺点列表，会注意到<strong>添加类型不会影响您正在运行的程序或程序的用户</strong>。类型检查旨在让开发人员更<strong>方便</strong>。</p><h2 id="注释">注释</h2><p><a href="https://www.python.org/dev/peps/pep-0484/">PEP 484</a> 根据Jukka Lehtosalo博士项目Mypy所做的工作，定义了如何向Python代码添加类型提示。添加类型提示的主要方法是使用注释。随着类型检查变得越来越普遍，这也意味着注释应该主要保留给类型提示。</p><p>接下来的章节将解释注释如何在类型提示的上下文中工作。</p><h3 id="函数注释">函数注释</h3><p>对于函数，可以注释参数和返回值。这是按如下方式完成的：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">arg: arg_type, optarg: arg_type = default</span>) -&gt; return_type:</span></span><br><span class="line">    ...</span><br></pre></td></tr></tbody></table></figure><p>对于参数，语法是 <code>argument ：annotation</code>，而返回类型使用 <code>-&gt; annotation</code> 进行注释。请注意，注释必须是有效的 Python 表达式。</p><p>以下简单示例为计算圆的周长的函数添加注释：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">circumference</span>(<span class="params">radius: <span class="built_in">float</span></span>) -&gt; float:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * math.pi * radius</span><br></pre></td></tr></tbody></table></figure><p>运行代码时，还可以检查注释。它们存储在函数的特殊 <code>.__annotations__</code> 属性中：</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>circumference(<span class="number">1.23</span>)</span><br><span class="line"><span class="number">7.728317927830891</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>circumference.__annotations__</span><br><span class="line">{'radius': &lt;class 'float'&gt;, 'return': &lt;class 'float'&gt;}</span><br></pre></td></tr></tbody></table></figure><p>有时可能会对 Mypy 如何解释类型提示感到困惑。</p><p>对于这些情况，有特殊的 Mypy 表达式：<code>reveal_type()</code> 和<code>reveal_locals()</code></p><p>可以在运行 Mypy 之前将这些添加到代码中，Mypy 将报告它推断出的类型。 例如，<a href="http://xn--reveal-hp7is1dqa69v9yjwx4ar5bk01o.py">将以下代码保存到reveal.py</a>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># reveal.py</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">reveal_type(math.pi)</span><br><span class="line"></span><br><span class="line">radius = <span class="number">1</span></span><br><span class="line">circumference = <span class="number">2</span> * math.pi * radius</span><br><span class="line">reveal_locals()</span><br></pre></td></tr></tbody></table></figure><p>接下来，通过 Mypy 运行这段代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mypy reveal.py</span><br><span class="line">reveal.py:4: error: Revealed <span class="built_in">type</span> is <span class="string">'builtins.float'</span></span><br><span class="line"></span><br><span class="line">reveal.py:8: error: Revealed <span class="built_in">local</span> types are:</span><br><span class="line">reveal.py:8: error: circumference: builtins.float</span><br><span class="line">reveal.py:8: error: radius: builtins.int</span><br></pre></td></tr></tbody></table></figure><p>即使没有任何注释，Mypy 也正确推断了内置 math.pi 的类型，以及我们的局部变量半径和周长。</p><blockquote><p><strong>NOTE：<br></strong> reveal 表达式仅用作帮助添加类型和调试类型提示的工具。 <a href="http://xn--reveal-hh4kg0o5f030ioj7f.py">如果尝试将reveal.py</a> 文件作为Python 脚本运行，它将因NameError 而崩溃，因为reveal_type() 不是Python 解释器已知的函数。</p></blockquote><p>如果 Mypy 说 <em>“Name ‘reveal_locals‘ is not defined”</em> ，可能需要更新 Mypy 安装。</p><p>Reveal_locals() 表达式在 <a href="http://mypy-lang.blogspot.com/2018/06/mypy-0610-released.html">Mypy 0.610 及更高版本</a> 中可用。</p><h3 id="变量注释">变量注释</h3><p>在上一节的定义中 circumference() ，只注释了参数和返回值。没有在函数体内添加任何注释。通常，这已经足够了。</p><p>但是，有时类型检查器也需要帮助来确定变量的类型。变量注释在<a href="https://www.python.org/dev/peps/pep-0526/">PEP 526</a>中定义并在 Python 3.6 中引入。语法与函数参数注释的语法相同：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pi: <span class="built_in">float</span> = <span class="number">3.142</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">circumference</span>(<span class="params">radius: <span class="built_in">float</span></span>) -&gt; float:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * pi * radius</span><br></pre></td></tr></tbody></table></figure><p>该变量pi已使用float类型提示进行注释。</p><blockquote><p>静态类型检查器能够识别出3.142是一个浮点数，所以在这个例子中，pi 的注释是不必要的。<br>随着对 Python 类型系统的更多了解，将会看到更多相关的变量注释示例。</p></blockquote><p>变量的注释存储在模块级<code>__annotations__</code>字典中：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>circumference(<span class="number">1</span>)</span><br><span class="line"><span class="number">6.284</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__annotations__</span><br><span class="line">{<span class="string">'pi'</span>: &lt;<span class="class"><span class="keyword">class</span> '<span class="title">float</span>'&gt;}</span></span><br></pre></td></tr></tbody></table></figure><p>可以在不给变量赋值的情况下对变量进行注释。 这会将注释添加到 <code>__annotations__</code> 字典中，而变量保持未定义：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>nothing: <span class="built_in">str</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>nothing</span><br><span class="line">NameError: name <span class="string">'nothing'</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__annotations__</span><br><span class="line">{<span class="string">'nothing'</span>: &lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;}</span></span><br></pre></td></tr></tbody></table></figure><p>由于没有为 nothing 赋值，所以还没有定义名称 nothing。</p><h3 id="Type-Comments">Type Comments</h3><p>如前所述，注解是在 Python 3 中引入的，它们并没有被向后移植到 Python 2。这意味着如果正在编写需要支持旧版 Python 的代码，则不能使用注释。</p><p>相反，可以使用类型注释。 这些是特殊格式的注释，可用于添加与旧代码兼容的类型提示。 要向函数添加类型注释，可以执行以下操作：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">circumference</span>(<span class="params">radius</span>):</span></span><br><span class="line">    <span class="comment"># type: (float) -&gt; float</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * math.pi * radius</span><br></pre></td></tr></tbody></table></figure><p>类型注释只是注释，因此可以在任何版本的 Python 中使用。</p><p><code>__annotations__</code>类型注释由类型检查器直接处理，因此这些类型在字典中不可用：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>circumference.__annotations__</span><br><span class="line">{}</span><br></pre></td></tr></tbody></table></figure><p>类型注释必须以 <code>type: literal</code> 开头，并且与函数定义位于同一行或下一行。如果你想用多个参数注释一个函数，你可以编写每个类型，用逗号分隔：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">headline</span>(<span class="params">text, width=<span class="number">80</span>, fill_char=<span class="string">"-"</span></span>):</span></span><br><span class="line">    <span class="comment"># type: (str, int, str) -&gt; str</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f" <span class="subst">{text.title()}</span> "</span>.center(width, fill_char)</span><br><span class="line"></span><br><span class="line">print(headline(<span class="string">"type comments work"</span>, width=<span class="number">40</span>))</span><br></pre></td></tr></tbody></table></figure><p>还可以使用自己的注释将每个参数写在单独的行上：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># headlines.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">headline</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    text,           <span class="comment"># type: str</span></span></span></span><br><span class="line"><span class="function"><span class="params">    width=<span class="number">80</span>,       <span class="comment"># type: int</span></span></span></span><br><span class="line"><span class="function"><span class="params">    fill_char=<span class="string">"-"</span>,  <span class="comment"># type: str</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span>):</span>                  <span class="comment"># type: (...) -&gt; str</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f" <span class="subst">{text.title()}</span> "</span>.center(width, fill_char)</span><br><span class="line"></span><br><span class="line">print(headline(<span class="string">"type comments work"</span>, width=<span class="number">40</span>))</span><br></pre></td></tr></tbody></table></figure><p>通过 Python 和 Mypy 运行示例：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$  python headlines.py</span><br><span class="line">---------- Type Comments Work ----------</span><br><span class="line"></span><br><span class="line">$ mypy headlines.py</span><br><span class="line">Success: no issues found <span class="keyword">in</span> 1 <span class="built_in">source</span> file</span><br></pre></td></tr></tbody></table></figure><p>如果你有错误，例如你碰巧在第 10 行调用了 width=“full” 的 header()，Mypy 会告诉你：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mypy headline.py</span><br><span class="line">headline.py:10: error: Argument <span class="string">"width"</span> to <span class="string">"headline"</span> has incompatible</span><br><span class="line">                       <span class="built_in">type</span> <span class="string">"str"</span>; expected <span class="string">"int"</span></span><br></pre></td></tr></tbody></table></figure><p>还可以向变量添加类型注释。这与向参数添加类型注释的方式类似：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pi = 3.142  <span class="comment"># type: float</span></span><br><span class="line"><span class="comment">#在本例中，pi 将作为浮点变量进行类型检查。</span></span><br></pre></td></tr></tbody></table></figure><h1 id="结论">结论</h1><p>Python 中的类型提示是一个非常有用的功能。</p><p>类型提示不会让您编写任何不使用类型提示就无法编写的代码。<br>相反，使用类型提示可以更轻松地推理代码、发现细微的错误并维护干净的架构。</p><p>在本文中，了解了 Python 中的类型提示如何工作，以及渐进式类型如何使 Python 中的类型检查比许多其他语言更灵活。 已经看到了使用类型提示的一些优点和缺点，以及如何使用注释或类型注释将它们添加到代码中。 最后，看到了 Python 支持的许多不同类型，以及如何执行静态类型检查。</p><p>有很多资源可以了解更多关于 Python 中的静态类型检查的信息。 <a href="https://www.python.org/dev/peps/pep-0483/">PEP 483</a> 和 <a href="https://www.python.org/dev/peps/pep-0484/">PEP 484</a> 提供了很多关于如何在 Python 中实现类型检查的背景知识。 <a href="https://mypy.readthedocs.io/">Mypy 文档</a>有一个很好的<a href="https://mypy.readthedocs.io/en/stable/builtin_types.html">参考部分</a>，详细介绍了所有可用的不同类型。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;在本文中，将了解 Python 类型检查 (&lt;em&gt;Type-Checking&lt;/em&gt;) 。&lt;/p&gt;
&lt;p&gt;在本教程中，将了解以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类型注释和类型提示&lt;/li&gt;
&lt;li&gt;将静态类型添加到代码中，包括你</summary>
      
    
    
    
    
    <category term="Python" scheme="http://lxz9.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用 Mypy 进行 Python 静态类型检查</title>
    <link href="http://lxz9.com/2022/03/25/mypy/"/>
    <id>http://lxz9.com/2022/03/25/mypy/</id>
    <published>2022-03-24T16:00:00.000Z</published>
    <updated>2022-03-28T12:47:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>Python 是一种动态类型语言。它在运行时而不是编译时确定数据类型。Python 类型的一些示例包括整数、浮点数、字符串和布尔值。动态类型语言与静态类型语言（如 C++、Java 和 Fortran）形成对比，后者在编译时执行类型检查。</p><p>动态类型语言（如 Python）的一个优点是程序员不需要为每个声明的变量指定类型。相反，Python 解释器在运行时推断并分配一个类型。与使用静态类型语言（如 Java）相比，这导致更简洁的代码可以更快地编写。</p><p>这种简洁的风格也有其缺点。因为解释器更努力地填充 Python 留下的隐含内容，所以 Python 程序可能需要更长的时间来执行。你也可能偶尔会遇到错误，因为 Python 错误地解释了变量的类型。代码完成工具也可以更好地工作，并且对于静态类型的语言功能更全面。</p><p>最近对 Python 的增强使静态类型成为一种选择。替代语法现在让程序员可以选择以静态类型的方式编写他们的 Python 代码。Mypy是一个用于帮助您使用类型注释编写或重写 Python 代码的工具。这个工具为你的 Python 程序带来了静态类型的好处。</p><h2 id="什么是Mypy？">什么是Mypy？</h2><p>Mypy 是一个用于静态类型检查 Python 代码的工具。Python 的创始人 Guido van Rossum已经在 Mypy 上工作了几年。Mypy 对静态类型 Python 的验证可以使程序更加正确、可读、可重构和可测试。如果你想使用 Python，并且想要静态类型的优势，那么可以考虑使用 Mypy。存在Pyre 等 Mypy的替代品，但 Mypy 目前在 Python 社区中更受欢迎。</p><blockquote><p><strong>笔记</strong><br>静态类型语言以更难学习而著称。将现有 Python 代码转换为静态类型代码可能会令人生畏，因为可能需要更改许多代码行。本指南说明了如何调整现有 Python 项目以增量使用 Mypy 和静态类型。</p></blockquote><h2 id="如何安装和使用-Mypy">如何安装和使用 Mypy</h2><h3 id="如何安装-Mypy">如何安装 Mypy</h3><p>使用 Pip 和以下命令在您的系统上安装 Mypy：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install mypy</span><br></pre></td></tr></tbody></table></figure><h3 id="Mypy-基本用法">Mypy 基本用法</h3><p>成功安装 Mypy 后，将目录更改为包含现有 Python 源文件的目录，然后使用以下命令运行 Mypy：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mypy *.py</span><br></pre></td></tr></tbody></table></figure><p>如果没有发现错误，您应该会看到类似的输出。</p><p><code>Success: no issues found in N source files</code></p><p>如果您没有立即可用的 Python 源文件，请为此示例创建一个。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"print('Hello, world.')"</span> &gt; test1.py</span><br></pre></td></tr></tbody></table></figure><p>使用以下命令运行 Mypy：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mypy *.py</span><br></pre></td></tr></tbody></table></figure><p>返回以下输出：</p><p><code>Success: no issues found in 1 source file</code></p><p>默认配置不提供有关静态类型的任何有用信息。这是因为 Python 示例没有定义任何静态类型。</p><h3 id="使用-Mypy-识别错误">使用 Mypy 识别错误</h3><p>print Mypy 可以帮助在开发生命周期的早期识别错误，例如语句中缺少括号。与 Python 2 相比，Python 3 严格要求print语句周围有括号。如果您正在努力将 Python 2 程序更新到 Python 3，Mypy 可以帮助您识别常见的语法错误，例如缺少括号。</p><p>创建一个示例 Python 文件并运行 Mypy 以查看其错误处理的实际效果。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">"print 'Hello, world.'"</span> &gt; test2.py</span><br><span class="line">mypy *.py</span><br></pre></td></tr></tbody></table></figure><p>Mypy 返回以下错误：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: Missing parentheses <span class="keyword">in</span> call to <span class="string">'print'</span>. Did you mean <span class="built_in">print</span>(<span class="string">'Hello, world.'</span>)?</span><br><span class="line">Found 1 error <span class="keyword">in</span> 1 file (errors prevented further checking)</span><br></pre></td></tr></tbody></table></figure><p>Mypy 可以print在初始运行时识别每个需要括号的语句。</p><p>使用类型注解的静态类型<br>Mypy 允许您向函数添加类型注释，以帮助它检测与不正确的函数返回类型相关的错误。考虑以下示例：</p><blockquote><p>File: <a href="http://test3.py">test3.py</a></p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">legal_name</span>(<span class="params">first: <span class="built_in">str</span>, last:<span class="built_in">str</span></span>) -&gt; str:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'My legal name is:'</span> + first + <span class="string">' '</span>+ last</span><br><span class="line"></span><br><span class="line">legal_name(<span class="string">'Jane'</span>, <span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure><p>运行<code>mypy test3.py</code>时，会看到以下错误消息：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test3.py:4: error: Argument 2 to "legal_name" has incompatible type "int"; expected "str"</span><br><span class="line">Found 1 error in 1 file (checked 1 source file)</span><br></pre></td></tr></tbody></table></figure><p>第一行 <code>def legal_name(first: str, last:str) -&gt; str:</code> 指定函数 <code>legal_name()</code> 需要<code>string</code>类型的参数并返回<code>string</code>类型的值。 Mypy 能够检测到函数调用的第二个参数不满足类型注释要求。</p><p>如果没有类型注释，Mypy 不会检测到 <code>int</code> 类型参数的任何问题。</p><blockquote><p><strong>NOTE:</strong><br>使用 mypy 的 <code>--disallow-untyped-defs</code> 命令行选项，对所有函数定义强制执行静态类型。 如果 Python 项目不使用类型注释的第三方库，则此选项可能过于严格。</p></blockquote><p>Mypy可以识别Python程序中所有对象上的类型注释。对于本指南，重点是函数签名，而不是Python程序中的所有其他对象。在开始使用Mypy时，请关注Python代码的函数定义。</p><p>当使用类型注释重构Python代码时，首先要注释所有函数定义。接下来，可以考虑将类型注释添加到不仅包含在函数签名中的变量中。</p><p>一些开发人员认为Mypy的大部分好处来自于向函数声明添加类型注释。对其他变量进行更详尽的注释可能需要付出更多的努力。</p><h3 id="类型别名和定义">类型别名和定义</h3><p>类型注释的大部分功能来自特定于域的类型定义，即超出内置类型的类型定义。考虑以下示例：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">retrieve</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="string">"""Retrieve the content found at url."""</span></span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>简单的类型注释将上面的示例改进为以下内容：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">URL = <span class="built_in">str</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">retrieve</span>(<span class="params">url: URL</span>) -&gt; str:</span></span><br><span class="line">    <span class="string">"""Retrieve the content found at url."""</span></span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>URL是一个<a href="https://docs.python.org/3/library/typing.html#type-aliases">类型别名</a>，它比bare str更清楚地表达了变量URL的意图。检索定义不接受url参数的字符串。url参数的类型必须为url。正确的URL符合<a href="https://datatracker.ietf.org/doc/html/rfc1738">特定的文档化语法</a>。</p><p>类型别名的另一个好处是复杂类型的缩写。在下面的函数定义中可以看到这种优势的一个例子。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compose</span>(<span class="params">first: <span class="built_in">list</span>[<span class="built_in">dict</span>[<span class="built_in">str</span>, <span class="built_in">float</span>]], second: <span class="built_in">list</span>[<span class="built_in">dict</span>[<span class="built_in">str</span>, <span class="built_in">float</span>]]</span>) -&gt; list[dict[str, float]]</span></span><br><span class="line"><span class="function">    ...</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></tbody></table></figure><p>上面的函数定义可以写成如下图所示：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MyType = <span class="built_in">list</span>[<span class="built_in">dict</span>[<span class="built_in">str</span>, <span class="built_in">float</span>]]</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compose</span>(<span class="params">first: MyType, second: MyType</span>) -&gt; MyType:</span></span><br><span class="line">    ...</span><br></pre></td></tr></tbody></table></figure><p>与类型别名一样有价值，Python 有一个替代方法，即类型定义，它也很强大。下面的代码确保您的 url 参数使用正确的 URL 语法：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> NewType</span><br><span class="line">...</span><br><span class="line">URL = NewType(<span class="string">"URL"</span>, <span class="built_in">str</span>)</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">retrieve</span>(<span class="params">url: URL</span>) -&gt; str:</span></span><br><span class="line">    ...</span><br></pre></td></tr></tbody></table></figure><p>有了这个类型定义，Mypy 拒绝方法调用，例如retrieve(“not a true URL”)，而它接受retrieve(URL(“<a href="https://www.linode.com">https://www.linode.com</a>”))。 Python 程序员习惯于在运行时检查 URL 等特殊语法。 Mypy 带来了将这些表达为强大的编译时验证的机会。</p><p>除了本指南介绍的内容之外，还有更多用于类型定义的工具。 即使没有这些高级工具，您也可以使用如上所示的类型别名和类型定义来使您自己的源代码更具表现力。</p><p>有了这个类型定义，Mypy 拒绝方法调用，例如<code>retrieve("not a true URL")</code>，而它接受<code>retrieve(URL("https://www.linode.com"))</code>。</p><p>Python 程序员习惯于在运行时检查 URL 等特殊语法。 Mypy 带来了将这些表达为强大的编译时验证的机会。</p><p>除了介绍的内容之外，还有更多用于类型定义的工具。 即使没有这些高级工具，也可以使用如上所示的类型别名和类型定义来使您自己的源代码更具表现力。</p><h3 id="指令">指令</h3><p>Mypy 的指令会调整它返回的信息。 考虑以下示例：</p><ol><li>创建一个名为 <code>test2.py</code> 的文件，其内容如下：</li></ol><blockquote><p>File: <a href="http://test2.py">test2.py</a></p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span>(<span class="params">error: <span class="built_in">str</span></span>) -&gt; int:</span></span><br><span class="line">    <span class="string">"""While this does nothing particularly useful, the</span></span><br><span class="line"><span class="string">      syntax is typical of Python code often found "in the</span></span><br><span class="line"><span class="string">      wild"."""</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(error) &gt; <span class="number">4</span>:</span><br><span class="line">         <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(error) &gt; <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span> + error</span><br><span class="line">     <span class="keyword">return</span> <span class="number">99</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">f"The return value is <span class="subst">{f1(<span class="string">'abc'</span>)}</span>."</span>)</span><br><span class="line">print(<span class="string">f"The return value is <span class="subst">{f1(<span class="string">'abcef'</span>)}</span>."</span>)</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>在 <code>test2.py</code> 文件上运行 Mypy：</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mypy --disallow-untyped-defs test2.py</span><br></pre></td></tr></tbody></table></figure><p>Mypy 报告 <code>test2.py</code> 的函数定义为完全注释。 <code>f1()</code> 函数的每个 <code>if</code> 子句都返回预期的整数类型。 但是，Mypy 还是报错：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test2.py:8: error: Unsupported operand types for + ("int" and "str")</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>重新运行 Mypy 以显示错误代码：</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mypy --show-error-codes --disallow-untyped-defs test2.py</span><br></pre></td></tr></tbody></table></figure><p>错误信息变得更具描述性：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test2.py:8: error: Unsupported operand types for + ("int" and "str")  [operator]</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>将上例第 8 行的 return 语句更新为：</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + error:  <span class="comment"># type: ignore[operator]</span></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>重新运行Mypy时，它不会报告任何错误。<code>#type:ignore[operator]</code>指令将其标记为问题，并最终需要解决方案。</p><p>该指令是一条注释，它使程序的行为完全保持不变。现在，当重新运行Mypy时，会收到一条成功消息，可以继续处理代码的其他方面。这是一种你可以更普遍地使用的策略。</p><p>在对大量源代码注释类型时，建议只选择一个错误代码，清除一个错误类型的所有出现，同时使用指令暂时忽略其他问题，并进行迭代。</p><h3 id="Mypy配置">Mypy配置</h3><p>可以使用名为 <code>mypy.ini</code> 的配置文件来配置 Mypy。</p><p>在项目目录中创建一个名为 <code>mypy.ini</code> 的新文件。 将以下内容添加到文件中：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disallow_untyped_defs = <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>在该目录中启动的任何 <code>mypy</code> 命令的行为就像使用命令行参数 <code>--disallow-untyped-defs</code> 运行一样。</p><p>Mypy 的配置文件可以有不同的文件名。 从 Mypy 开始时，<code>mypy.ini</code> 是一个不错的选择，并且默认情况下 Mypy 可以识别。 还可以使用 <code>.toml</code> 文件来存储 Mypy 配置。</p><p>目标配置至少应包括以下配置：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">disallow_untyped_defs = <span class="literal">true</span></span><br><span class="line">no_implicit_optional = <span class="literal">true</span></span><br><span class="line">show_error_codes = <span class="literal">true</span></span><br><span class="line">strict_equality = <span class="literal">true</span></span><br><span class="line">warn_redundant_casts = <span class="literal">true</span></span><br><span class="line">warn_unused_ignores = <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>此配置可帮助采用增量方法来重构本指南中推荐的非类型化 Python 代码。</p><p>这种组合为项目带来了 Mypy 的大部分好处，而不涉及 Mypy 更困难的方面。</p><h2 id="结论">结论</h2><p><a href="https://mypy.readthedocs.io/en/stable/class_basics.html">Mypy 的默认值</a>值得学习。 例如，不注释方法定义的 <code>self</code> 参数是惯用的。 一个常见的构造函数是：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *args: <span class="built_in">str</span>, **kwargs: <span class="built_in">str</span></span>) -&gt; <span class="keyword">None</span></span></span><br></pre></td></tr></tbody></table></figure><p>即使设置了 <code>disallow_untyped_defs</code>，Mypy 也可以识别如何正确处理 <code>self</code> 而无需程序员的显式注释。</p><p>类型注释是Python编码的一个重大变化，它带来了显著的好处。使用本文中概述的技术将Python项目迁移到类型注释代码。</p><h3 id="参考">参考</h3><p><a href="https://mypy.readthedocs.io/en/stable/running_mypy.html">https://mypy.readthedocs.io/en/stable/running_mypy.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;Python 是一种动态类型语言。它在运行时而不是编译时确定数据类型。Python 类型的一些示例包括整数、浮点数、字符串和布尔值。动态类型语言与静态类型语言（如 C++、Java 和 Fortran）形成对比，后者在编译时执行类型检</summary>
      
    
    
    
    
    <category term="Python" scheme="http://lxz9.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用 Python Poetry 进行依赖管理</title>
    <link href="http://lxz9.com/2022/03/21/poetry/"/>
    <id>http://lxz9.com/2022/03/21/poetry/</id>
    <published>2022-03-20T16:00:00.000Z</published>
    <updated>2022-03-20T11:37:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介">简介</h1><p>当您的 Python 项目依赖于外部包时，您需要确保使用每个包的正确版本。更新后，软件包可能无法像更新前那样工作。</p><p><strong>Python Poetry</strong> 这样的依赖管理器可帮助在项目中指定、安装和解析外部包。这样，可以确保始终在每台机器上使用正确的依赖版本。</p><p><strong>在本文中，将介绍：</strong></p><ol><li>开始一个新的Poetry 项目</li><li>将Poetry 添加到现有项目</li><li>使用pyproject.toml文件</li><li>引脚依赖项</li><li>安装依赖项poetry.lock</li><li>执行基本的 Poetry CLI命令</li></ol><p>使用Poetry将帮助启动新项目、维护现有项目并掌握依赖管理。您将准备好使用pyproject.toml文件，这将是在 Python 项目中定义构建要求的标准。</p><p>虽然本教程侧重于依赖管理，但 Poetry 还可以帮助您<a href="https://python-poetry.org/docs/cli/#build">构建和打包</a>项目。如果您想分享您的作品，您甚至可以将您的 Poetry 项目发布到<a href="https://pypi.org/">Python Packaging Index (PyPI)</a>。</p><div align="center" class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=809974354&amp;bvid=BV1L34y1b7M2&amp;cid=554394302&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="true">    </iframe></div><h1 id="写在前面">写在前面</h1><p>在深入了解 Python Poetry 的本质之前，需要了解一些先决条件。</p><h2 id="相关术语">相关术语</h2><p>如果在其中一个Python脚本中使用了import 语句，则可以使用模块。</p><p>其中一些模块可能是自己写的Python文件。 其他可能是内置模块，如DateTime。 但是，有时 Python 提供的还不够。那时可能会转向外部的打包模块。</p><p>当Python代码依赖于外部模块时，可以说这些包是项目的依赖项。</p><p>可以在PyPI中找到不属于 Python 标准库的包。在了解其工作原理之前，需要在系统上安装 Poetry。</p><h2 id="Python-Poetry-安装">Python Poetry 安装</h2><p>要在命令行中使用 Poetry，应该在系统范围内安装它。如果只是想尝试一下，那么可以使用pip。</p><p>但是应该谨慎尝试这种方法，因为 Poetry 会安装它自己的依赖项，这可能会与在项目中使用的其他包发生冲突。</p><p><a href="https://python-poetry.org/docs/#installation">安装 Poetry</a>的推荐方法是使用官方install-poetry脚本。</p><p>可以手动下载并运行此<a href="https://github.com/python-poetry/poetry/blob/master/install-poetry.py">Python 文件</a>，也可以在下面选择操作系统对应的命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#osx / linux / bashonwindows 安装</span></span><br><span class="line">curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -</span><br><span class="line"></span><br><span class="line"><span class="comment">#windows powershell 安装</span></span><br><span class="line">(Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -</span><br></pre></td></tr></tbody></table></figure><p><code>poetry --version</code>在终端中运行以查看是否poetry有效。此命令将显示当前的poetry版本。</p><p>如果要更新 Poetry，则可以运行<code>poetry self update</code></p><h2 id="Python-Poetry入门">Python Poetry入门</h2><p>安装 Poetry 后，了解一下 Poetry 是如何工作的。</p><p>下面开始一个新的 Poetry 项目以及如何将 Poetry 添加到现有项目中。还将看到项目结构并检查pyproject.toml文件。</p><h3 id="创建一个新的Poetry项目">创建一个新的Poetry项目</h3><p>可以使用命令和项目名称作为参数来创建新的 Poetry 项目。</p><p>在示例中，将该项目称为rp-poetry. 创建项目，然后进入新创建的目录：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ poetry new rp-poetry</span><br><span class="line">$ <span class="built_in">cd</span> rp-poetry</span><br></pre></td></tr></tbody></table></figure><p>通过运行<code>poetry new rp-poetry</code>，创建了一个名为 rp-poetry/ 的新文件夹。</p><p>当查看文件夹内部时，会看到一个结构：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rp-poetry/</span><br><span class="line">│</span><br><span class="line">├── rp_poetry/</span><br><span class="line">│   └── __init__.py</span><br><span class="line">│</span><br><span class="line">├── tests/</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   └── test_rp_poetry.py</span><br><span class="line">│</span><br><span class="line">├── README.rst</span><br><span class="line">└── pyproject.toml</span><br></pre></td></tr></tbody></table></figure><p>Poetry 会自动规范化包名称。它将项目名称中的破折号 (-) 转换为rp_poetry/文件夹名称中的下划线 (_) 。否则，Python 中不允许使用该名称，因此无法将其作为模块导入。</p><p>要更好地控制创建包名称，您可以使用选项 <code>--name</code> 将其命名为与项目文件夹不同的名称：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry new rp-poetry --name realpoetry</span><br></pre></td></tr></tbody></table></figure><p>如果希望将源代码额外的存储在 src/ 父文件夹中，那么 Poetry 可以使用 <code>--src</code> ：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ poetry new --src rp-poetry</span><br><span class="line">$ <span class="built_in">cd</span> rp-poetry</span><br></pre></td></tr></tbody></table></figure><p>通过添加 --src 标志，您创建了一个名为 src/ 的文件夹，其中包含您的 rp_poetry/ 目录：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rp-poetry/</span><br><span class="line">│</span><br><span class="line">├── src/</span><br><span class="line">│   │</span><br><span class="line">│   └── rp_poetry/</span><br><span class="line">│       └── __init__.py</span><br><span class="line">│</span><br><span class="line">├── tests/</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   └── test_rp_poetry.py</span><br><span class="line">│</span><br><span class="line">├── README.rst</span><br><span class="line">└── pyproject.toml</span><br></pre></td></tr></tbody></table></figure><p>创建新的 Poetry 项目时，将立即收到基本的文件夹结构。</p><h3 id="检查项目结构">检查项目结构</h3><p>在 rp_poetry/ 这个目录中，你会找到一个<code>__init__.py</code>包含你的包版本的文件：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rp_poetry/__init__.py</span></span><br><span class="line"></span><br><span class="line">__version__ = <span class="string">"0.1.0"</span></span><br></pre></td></tr></tbody></table></figure><p>当跳到 tests/ 文件夹并打开 test_rp_poetry.py 时，你会注意到 rp_poetry 已经可以导入：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tests/test_rp_poetry.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rp_poetry <span class="keyword">import</span> __version__</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_version</span>():</span></span><br><span class="line">    <span class="keyword">assert</span> __version__ == <span class="string">"0.1.0"</span></span><br></pre></td></tr></tbody></table></figure><p>poetry还为项目添加了第一次测试。 test_version() 函数检查<code>rp_poetry/__init__.py</code>的<code>__version__</code>变量是否包含预期版本。</p><p>但是，<code>__init__.py</code>文件不是定义包版本的唯一位置。 另一个是 pyproject.toml 文件。</p><h3 id="使用-pyproject-toml-文件">使用 pyproject.toml 文件</h3><p>使用 Poetry 最重要的文件之一是 pyproject.toml 文件。这个文件不是poetry的发明。这是 PEP 518 中定义的配置文件标准：</p><blockquote><p>此PEP指定Python软件包如何指定要执行其所选构建系统的构建依赖项。 作为本说明书的一部分，为用于指定构建依赖项的软件包引入了新配置文件（预期相同的配置文件将用于将来配置详细信息）。</p></blockquote><p>最后，他们决定采用TOML格式，它代表<a href="https://toml.io/en/">Tom’s Obvious Minimal Language</a>。在他们看来，TOML 足够灵活，比其他选项（YAML、JSON、CFG 或 INI）具有更好的可读性和更低的复杂性。</p><p>要查看 TOML 可以打开pyproject.toml文件：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pyproject.toml</span></span><br><span class="line"></span><br><span class="line">[tool.poetry]</span><br><span class="line">name = <span class="string">"rp-poetry"</span></span><br><span class="line">version = <span class="string">"0.1.0"</span></span><br><span class="line">description = <span class="string">""</span></span><br><span class="line">authors = [<span class="string">"Philipp &lt;philipp@realpython.com&gt;"</span>]</span><br><span class="line"></span><br><span class="line">[tool.poetry.dependencies]</span><br><span class="line">python = <span class="string">"^3.9"</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dev-dependencies]</span><br><span class="line">pytest = <span class="string">"^5.2"</span></span><br><span class="line"></span><br><span class="line">[build-system]</span><br><span class="line">requires = [<span class="string">"poetry-core&gt;=1.0.0"</span>]</span><br><span class="line">build-backend = <span class="string">"poetry.core.masonry.api"</span></span><br></pre></td></tr></tbody></table></figure><p>pyproject.toml文件中看到四个部分。 这些部分称为表格。 它们包含了 Poetry 等工具识别和用于<strong>依赖管理</strong>或<strong>构建例程</strong>的指令。</p><p>如果表名称是tool-specific，则必须使用 <code>tool.</code> 前缀。 通过使用这样的子表，可以为项目中的不同工具添加说明。 在这种情况下，只有tool.poetry。 但是，您可能会看到其他项目中的 [tool.pytest.ini_options] 的示例。</p><p>在[tool.poetry]上面的第3行上，可以存储有关poetry项目的一般信息。 可用的键由<a href="https://python-poetry.org/docs/pyproject/">poetry定义</a>。</p><p>虽然某些键是可选的，但有四个必须指定：</p><ol><li><strong>name</strong>: 包的名字</li><li><strong>version</strong>: 包的版本，最好遵循语义版本控制</li><li><strong>description</strong>: 对您的包裹的简短描述</li><li><strong>authors</strong>: 作者列表，格式为 name <email></email></li></ol><p>第 9 行 [tool.poetry.dependencies] 和第 12 行 [tool.poetry.dev-dependencies] 的子表对于依赖管理至关重要。</p><p>当将依赖项添加到 Poetry 项目时，将在下一节中了解有关这些子表的更多信息。</p><p>现在，重要的是要认识到包依赖和开发依赖之间存在差异。</p><p>该pyproject.toml文件的最后一个表 [build-system] 在第 15 行。</p><p>该表定义了 Poetry 和其他构建工具可以使用的数据，但由于它不是特定于工具的，所以它没有前缀。Poetry pyproject.toml 使用两个键创建了文件：</p><ol><li><strong>requires</strong>：构建包所需的依赖项列表，使此键成为必需项</li><li><strong>build-backend</strong>：用于执行构建过程的 Python 对象</li></ol><p>当使用 Poetry 开始一个新项目时，这是 pyproject.toml 开始使用的文件。随着时间的推移，将添加有关您的包和您正在使用的工具的配置详细信息。</p><p>随着 Python 项目的增长，pyproject.toml 文件也会随之增长。</p><p>对于子表 [tool.poetry.dependencies] 和 [tool.poetry.dev-dependencies]</p><p>在下一节中，您将了解如何扩展这些子表。</p><h2 id="Poetry的使用">Poetry的使用</h2><p>一旦你建立了一个 Poetry 项目，真正的工作就可以开始了。</p><p>在此过程中，将了解 Poetry 如何提供虚拟环境并处理依赖关系。</p><h3 id="使用poetry的虚拟环境">使用poetry的虚拟环境</h3><p>当开始一个新的 Python 项目时，最好创建一个虚拟环境。否则，可能会混淆来自不同项目的不同依赖项。使用虚拟环境是 Poetry 的核心功能之一，它永远不会干扰全局 Python 安装。</p><p>但是，Poetry 不会在启动项目时立即创建虚拟环境。可以通过让 Poetry 列出连接到当前项目的所有虚拟环境来确认 Poetry 没有创建虚拟环境。</p><p>如果你还没有，cd进入rp-poetry/然后运行一个命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry env list</span><br></pre></td></tr></tbody></table></figure><p>目前，不应该有任何输出。</p><p>当运行某些命令时， Poetry 会一路创建一个虚拟环境。如果想更好地控制虚拟环境的创建，那么可能决定明确告诉 Poetry 要使用哪个 Python 版本，然后从那里开始：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry env use python3</span><br></pre></td></tr></tbody></table></figure><p>使用此命令，将使用与安装 Poetry 相同的 Python 版本。当 PATH 中有 Python 可执行文件时，使用 python3 可以工作。</p><blockquote><p>注意：可以将绝对路径传递给 Python 可执行文件。它应该可以在<code>pyproject.toml</code>文件中找到的 Python 版本约束相匹配。<br><br>如果没有，那么可能会遇到麻烦，因为使用的 Python 版本与项目所需的版本不同。在环境中运行的代码在另一台机器上可能存在错误。<br><br><br>更糟糕的是，外部包通常依赖于特定的 Python 版本。因此，安装你包的用户可能会收到错误，因为依赖项版本与其 Python 版本不兼容。</p></blockquote><p>运行时<code>env use</code>，会看到一条消息：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Creating virtualenv rp-poetry-AWdWY-py3.9 <span class="keyword">in</span> ~/Library/Caches/pypoetry/virtualenvs</span><br><span class="line">Using virtualenv: ~/Library/Caches/pypoetry/virtualenvs/rp-poetry-AWdWY-py3.9</span><br></pre></td></tr></tbody></table></figure><p>Poetry 为您的项目环境构建了一个唯一名称。名称包含项目名称和 Python 版本。中间看似随机的字符串是父目录的哈希值。</p><p>有了中间这个唯一的字符串，Poetry 可以在系统上处理多个具有相同名称和相同 Python 版本的项目。</p><p>这很重要，因为默认情况下，Poetry 在同一个文件夹中创建所有虚拟环境。</p><p>无需任何其他配置，Poetry 在Poetry<strong>缓存目录</strong> virtualenvs/ 的文件夹中创建虚拟环境：</p><table><thead><tr><th><strong>操作系统</strong></th><th><strong>路径</strong></th></tr></thead><tbody><tr><td>macOS</td><td><em>~/Library/Caches/pypoetry</em></td></tr><tr><td>Windows</td><td><em>C:\Users&lt;username&gt;\AppData\Local\pypoetry\Cache</em></td></tr><tr><td>Linux</td><td><em>~/.cache/pypoetry</em></td></tr></tbody></table><p>如果要更改默认缓存目录，则可以编辑Poetry 的配置。</p><p>当已经在使用virtualenvwrapper或其他第三方工具来管理您的虚拟环境时，这可能很有用。要查看当前配置，包括已配置的cache-dir，可以运行命令：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry config --list</span><br></pre></td></tr></tbody></table></figure><p>通常，不必更改此路径。如果想了解有关与 Poetry 虚拟环境交互的更多信息，那么 <strong>Poetry 文档</strong> 包含有关管理环境的一章。</p><p>只要在项目文件夹中，Poetry 就会使用与之关联的虚拟环境。如果有任何疑问，可以通过<code>env list</code>再次运行命令来检查虚拟环境是否已激活：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry env list</span><br></pre></td></tr></tbody></table></figure><p>这将显示类似 <em>rp-poetry-AWdWY-py3.9 (Activated)</em> . 通过激活的虚拟环境，可以开始管理一些依赖项并看到 Poetry 大放异彩。</p><h3 id="声明你的依赖">声明你的依赖</h3><p>Poetry 的一个关键元素是它对依赖项的处理。在开始之前，先看看pyproject.toml文件中的两个依赖表：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rp_poetry/pyproject.toml (Excerpt)</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dependencies]</span><br><span class="line">python = <span class="string">"^3.9"</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dev-dependencies]</span><br><span class="line">pytest = <span class="string">"^5.2"</span></span><br></pre></td></tr></tbody></table></figure><p>当前声明了两个依赖项。一个是 Python 本身。另一个是<a href="https://docs.pytest.org/">pytest</a>，一个广泛使用的测试框架。</p><p>项目包含一个 tests/ 文件夹和一个 test_rp_poetry.py 文件。</p><p>使用 pytest 作为依赖项，Poetry可以在安装后立即运行您的测试。</p><p>确保位于rp-poetry/项目文件夹中并运行命令：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry install</span><br></pre></td></tr></tbody></table></figure><p>使用该install命令，Poetry 会检查您的pyproject.toml文件中的依赖关系，然后解析并安装它们。</p><p>当有许多依赖项需要具有不同版本的不同第三方包时，解决部分尤其重要。在安装任何包之前，Poetry 会确定哪个版本的包满足其他包，设置为它们的要求的版本约束。</p><p>除了pytest及其要求之外，Poetry 还将项目本身安装。这样，可以rp_poetry立即导入测试：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tests/test_rp_poetry.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rp_poetry <span class="keyword">import</span> __version__</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_version</span>():</span></span><br><span class="line">    <span class="keyword">assert</span> __version__ == <span class="string">"0.1.0"</span></span><br></pre></td></tr></tbody></table></figure><p>安装项目包后，可以导入rp_poetry测试并检查<code>__version__</code>字符串。</p><p>pytest安装后，可以使用命令<code>poetry run</code>执行测试：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ poetry run pytest</span><br><span class="line">========================= <span class="built_in">test</span> session starts ==========================</span><br><span class="line">platform darwin -- Python 3.9.1, pytest-5.4.3, py-1.10.0, pluggy-0.13.1</span><br><span class="line">rootdir: /Users/philipp/Real Python/rp-poetry</span><br><span class="line">collected 1 item</span><br><span class="line"></span><br><span class="line">tests/test_rp_poetry.py .                                        [100%]</span><br><span class="line"></span><br><span class="line">========================== 1 passed <span class="keyword">in</span> 0.01s ===========================</span><br></pre></td></tr></tbody></table></figure><p>当前的测试正在成功运行，因此可以继续编码。但是，如果仔细查看第 3 行，就会发现有些奇怪。</p><p>它说 pytest-5.4.3，与 pyproject.toml 文件中所说的 5.2 不同</p><p>回顾一下，文件pytest中的依赖pyproject.toml项如下所示：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rp_poetry/pyproject.toml (Excerpt)</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dev-dependencies]</span><br><span class="line">pytest = <span class="string">"^5.2"</span></span><br></pre></td></tr></tbody></table></figure><p>^5.2前面的插入符号(^)具有特定的含义，它是 Poetry 提供的版本控制约束之一。</p><p>这意味着 Poetry 可以安装与版本字符串最左边的非零数字匹配的任何版本。这意味着5.4.3允许使用。6.0不允许版本。</p><p>当 Poetry 尝试解析依赖版本时，像插入符号这样的符号将变得很重要。</p><p>声明的依赖项越多，它就越复杂。让我们看看 Poetry 如何通过将新包安装到项目中来处理这个问题。</p><h3 id="安装带有poetry的软件包">安装带有poetry的软件包</h3><p>如果你想为<a href="https://pypi.org/project/requests/">requests</a>你的项目添加一个外部包，那么你可以运行一个命令：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry add requests</span><br></pre></td></tr></tbody></table></figure><p>通过运行poetry add requests，在项目中添加最新版本的requests库。</p><p>如果想更具体的版本可以使用版本约束，<code>requests&lt;=2.1</code> 或者 <code>requests==2.24</code></p><p>当不添加任何约束时，Poetry 将始终尝试安装最新版本的软件包。</p><p>有时，只想在开发环境中使用某些包。pytest是其中之一。另一个常见的库包括像Black这样的代码格式化程序，像Sphinx这样的文档生成器，以及像Pylint、Flake8、mypy或coverage.py这样的静态分析工具。</p><p>要明确告诉 Poetry 包是开发依赖项，poetry add 使用 --dev 选项运行。还可以使用 -D 选项，它与 --dev 相同：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry add black -D</span><br></pre></td></tr></tbody></table></figure><p>添加requests为项目依赖项和black开发依赖项。Poetry 在后台为你做了一些事情。一方面，它将声明的依赖项添加到pyproject.toml文件中：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rp_poetry/pyproject.toml (Excerpt)</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dependencies]</span><br><span class="line">python = <span class="string">"^3.9"</span></span><br><span class="line">requests = <span class="string">"^2.26.0"</span></span><br><span class="line"></span><br><span class="line">[tool.poetry.dev-dependencies]</span><br><span class="line">pytest = <span class="string">"^5.2"</span></span><br><span class="line">black = <span class="string">"^21.9b0"</span></span><br></pre></td></tr></tbody></table></figure><p>Poetry 将requests包作为项目依赖项添加到[tool.poetry.dependencies]表中，同时black作为开发依赖项添加到[tool.poetry.dev-dependencies].</p><p>区分项目依赖项和开发依赖项可以防止安装用户不需要运行程序的要求。开发依赖项仅与您的包的其他开发人员相关，他们希望pytest使用black. 当用户安装你的包时，他们只安装requests。</p><blockquote><p>可以在<a href="https://python-poetry.org/docs/pyproject/#extras">Poetry 文档</a>中了解有关可选依赖项的更多信息。</p></blockquote><p>除了对 pyproject.toml 文件的更改之外，Poetry 还创建了一个名为 poetry.lock 的文件。</p><p>在此文件中，Poetry 会跟踪您在项目中使用的所有包和确切版本。</p><h3 id="处理poetry-lock">处理poetry.lock</h3><p>当运行该 poetry add 命令时，Poetry 会自动更新 pyproject.toml 并将已解析的版本固定在 poetry.lock 文件中。</p><p>但是，不必让 Poetry 完成所有工作。可以手动将依赖项添加到 pyproject.toml 文件中并在之后锁定它们。</p><h4 id="引脚依赖项-poetry-lock">引脚依赖项 poetry.lock</h4><p>如果想用 Python 构建一个网络爬虫，那么可能想使用Beautiful Soup来解析你的数据。将其添加到文件中的 tool.poetry.dependencies 表中pyproject.toml：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rp_poetry/pyproject.toml (Excerpt)</span></span><br><span class="line"> </span><br><span class="line">[tool.poetry.dependencies]</span><br><span class="line">python = <span class="string">"^3.9"</span></span><br><span class="line">requests = <span class="string">"^2.26.0"</span></span><br><span class="line">beautifulsoup4 = <span class="string">"4.10.0"</span></span><br></pre></td></tr></tbody></table></figure><p>通过添加<code>beautifulsoup4 = "4.10.0"</code>，告诉 Poetry 它应该完全安装这个版本。</p><p>当向pyproject.toml文件添加需求时，它尚未安装。</p><p>只要poetry.lock你的项目中没有文件存在，你就可以poetry install在手动添加依赖后运行，因为 Poetry 会先查找poetry.lock文件。</p><p>如果没有找到，Poetry 将解析pyproject.toml文件中列出的依赖项。</p><p>一旦poetry.lock文件存在，Poetry 将依赖该文件来安装依赖项。仅运行poetry install会触发警告，提示两个文件不同步并会产生错误，因为 Poetry 尚不知道beautifulsoup4项目中的任何版本。</p><p>要将pyproject.toml文件中手动添加的依赖项固定到poetry.lock，您必须首先运行以下poetry lock命令：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ poetry lock</span><br><span class="line">Updating dependencies</span><br><span class="line">Resolving dependencies... (<span class="number">1.5</span>s)</span><br><span class="line"></span><br><span class="line">Writing lock file</span><br></pre></td></tr></tbody></table></figure><p>通过运行poetry lock，Poetry 处理pyproject.toml文件中的所有依赖项并将它们锁定到poetry.lock文件中。</p><p>Poetry并不止于此。运行时poetry lock，Poetry 还会递归遍历并锁定您的直接依赖项的所有依赖项。</p><p>注意：poetry lock如果有适合您的版本限制的新版本可用，该命令还会更新您现有的依赖项。如果您不想更新poetry.lock文件中已有的任何依赖项，则必须将–no-update选项添加到poetry lock命令中：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ poetry lock --no-update</span><br><span class="line">Resolving dependencies... (<span class="number">0.1</span>s)</span><br></pre></td></tr></tbody></table></figure><p>在这种情况下，Poetry 仅解析新的依赖项，但poetry.lock不会更改文件中的任何现有依赖项版本。</p><p>现在已经固定了所有依赖项，是时候安装它们以便可以在项目中使用它们。</p><h4 id="安装依赖项-poetry-lock">安装依赖项 poetry.lock</h4><p>如果按照上一节中的步骤操作，那么已经安装pytest并black使用了 <code>poetry add</code> 命令。还锁定了beautifulsoup4，但还没有安装 Beautiful Soup。</p><p>要验证beautifulsoup4尚未安装，请使用以下命令打开Python 解释器 poetry run：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry run python3</span><br></pre></td></tr></tbody></table></figure><p>执行poetry run python3将在 Poetry 的环境中打开一个交互式REPL会话。</p><p>首先，尝试导入requests。然后尝试 importing bs4，这是 Beautiful Soup 的模块名称。</p><p>这应该会引发错误，因为尚未安装 Beautiful Soup：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> bs4</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">'bs4'</span></span><br></pre></td></tr></tbody></table></figure><p>正如预期的那样，可以requests导入，但是bs4找不到模块。通过键入exit()并点击退出交互式 Python 解释器Enter。</p><p>使用poetry lock命令锁定依赖项后，必须运行<code>poetry install</code>命令，可以在项目中实际使用它们：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ poetry install</span><br><span class="line">Installing dependencies <span class="keyword">from</span> lock file</span><br><span class="line"> </span><br><span class="line">Package operations: <span class="number">2</span> installs, <span class="number">0</span> updates, <span class="number">0</span> removals</span><br><span class="line"> </span><br><span class="line">  • Installing soupsieve (<span class="number">2.2</span><span class="number">.1</span>)</span><br><span class="line">  • Installing beautifulsoup4 (<span class="number">4.10</span><span class="number">.0</span>)</span><br><span class="line">Installing the current project: rp-poetry (<span class="number">0.1</span><span class="number">.0</span>)</span><br></pre></td></tr></tbody></table></figure><p>通过运行poetry install，Poetry 读取poetry.lock文件并安装其中声明的所有依赖项。</p><p>现在，bs4已准备好在您的项目中使用。要对此进行测试，请输入<code>poetry run python3</code>并导入 bs4Python 解释器：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> bs4</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bs4.__version__</span><br><span class="line"><span class="string">'4.10.0'</span></span><br></pre></td></tr></tbody></table></figure><p>这次没有错误，并且拥有声明的确切版本。这意味着 Beautiful Soup 已正确固定在poetry.lock文件中，已安装在项目中，并且可以使用了。</p><p>要列出项目中的可用包并检查它们的详细信息，可以使用该show命令。</p><p>当使用<code>--help</code>标志运行它时，将看到如何使用它：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry show --<span class="built_in">help</span></span><br></pre></td></tr></tbody></table></figure><p>要检查包，可以使用show包名称作为参数，也可以使用<code>--tree</code>选项将所有依赖项以树的形式列出。这将帮助查看项目的嵌套需求。</p><h3 id="更新依赖">更新依赖</h3><p>为了更新依赖项，Poetry 根据两种情况提供了不同的选项：</p><ol><li>更新版本约束内的依赖项。</li><li>更新版本约束之外的依赖项。</li></ol><p>可以在pyproject.toml文件中找到版本限制。当新版本的依赖项仍然满足版本限制时，可以使用以下update命令：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry update</span><br></pre></td></tr></tbody></table></figure><p>该update命令将在版本限制内更新所有包及其依赖项。</p><p>之后，Poetry 将更新您的poetry.lock文件。</p><p>如果你想更新一个或多个特定的包，那么你可以将它们作为参数列出：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry update requests beautifulsoup4</span><br></pre></td></tr></tbody></table></figure><p>使用此命令，Poetry 将搜索满足文件中列出的版本限制的新版本requests和新版本。</p><p>然后它将解析项目的所有依赖项并将版本固定到文件中。</p><p>文件将保持不变，因为列出的约束仍然有效。</p><p><code>beautifulsoup4pyproject.tomlpoetry.lockpyproject.toml</code></p><p>如果要使用比pyproject.toml文件中定义的版本更高的版本来更新依赖项，则需要pyproject.toml事先调整文件。另一种选择是 add 使用版本约束或 latest 标签运行命令：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry add pytest@latest --dev</span><br></pre></td></tr></tbody></table></figure><p>当运行add带有latest标记的命令时，它会查找包的最新版本并更新您的pyproject.toml文件。包含latest标签或版本约束对于使用该add命令至关重要。</p><p>如果没有它，会收到一条消息，表明该包已存在于项目中。另外，不要忘记<code>--dev</code>为开发依赖项添加标志。否则，会将包添加到常规依赖项中。</p><p>添加新版本后，必须运行 install 只有这样，更新才会被锁定到poetry.lock文件中。</p><p>如果不确定更新会为依赖项引入哪些基于版本的更改，可以使用<code>--dry-run</code>标志。此标志适用于命令update和add命令。它在终端中显示操作而不执行任何操作。</p><p>这样，可以安全地发现版本更改并决定哪种更新方案最适合。</p><h3 id="区分pyproject-toml和poetry-lock">区分pyproject.toml和poetry.lock</h3><p>虽然pyproject.toml文件中的版本要求可能很宽松，但 Poetry 会锁定你在poetry.lock文件中实际使用的版本。这就是为什么在使用 <a href="https://realpython.com/python-git-github-intro/">Git</a> 时应该提交此文件的原因。</p><p>通过poetry.lock在<strong>Git 存储库</strong>中提供文件，可以确保所有开发人员都将使用所需软件包的相同版本。当遇到包含poetry.lock文件的存储库时，最好使用 Poetry。</p><p>使用poetry.lock，可以确保使用的版本与其他开发人员使用的版本完全相同。如果其他开发人员不使用 Poetry，可以将其添加到未使用 Poetry 设置的现有项目中。</p><h2 id="将poetry添加到现有项目">将poetry添加到现有项目</h2><p>很有可能，你的项目不是从<code>poetry new</code>命令开始的。或者，可能继承了一个不是用 Poetry 创建的项目，但现在想使用 Poetry 进行依赖管理。</p><p>在这些类型的情况下，可以将 Poetry 添加到现有的 Python 项目中。</p><h3 id="添加pyproject-toml到脚本文件夹">添加pyproject.toml到脚本文件夹</h3><p>如果项目只包含一些 Python 文件，那么仍然可以添加 Poetry 作为未来构建的基础。在这个例子中，只有一个文件，<a href="http://hello.py">hello.py</a>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rp-hello/hello.py</span></span><br><span class="line"> </span><br><span class="line">print(<span class="string">"Hello World!"</span>)</span><br></pre></td></tr></tbody></table></figure><p>这个脚本唯一能做的就是输出字符串"Hello World!"。但也许这只是一个大项目的开始，因此决定将 Poetry 添加到您的项目中。poetry new 将使用 poetry init 命令，而不是使用之前的命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ poetry init</span><br><span class="line"> </span><br><span class="line">This <span class="built_in">command</span> will guide you through creating your pyproject.toml config.</span><br><span class="line"> </span><br><span class="line">Package name [rp-hello]: rp-hello</span><br><span class="line">Version [0.1.0]:</span><br><span class="line">Description []: My Hello World Example</span><br><span class="line">Author [Philipp &lt;philipp@realpython.com&gt;, n to skip]:</span><br><span class="line">License []:</span><br><span class="line">Compatible Python versions [^3.9]:</span><br><span class="line"> </span><br><span class="line">Would you like to define your main dependencies interactively? (yes/no) [yes] no</span><br><span class="line">Would you like to define your development dependencies interactively? (yes/no) [yes] no</span><br><span class="line">Generated file</span><br></pre></td></tr></tbody></table></figure><p>该poetry init命令将启动<a href="https://realpython.com/interacting-with-python/">交互式会话</a>以创建pyproject.toml文件。</p><p>Poetry 提供了大多数需要设置的配置的建议，按下<code>Enter</code>以使用它们。当不声明任何依赖项时，pyproject.tomlPoetry 创建的文件如下所示：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rp-hello/pyproject.toml</span></span><br><span class="line"> </span><br><span class="line">[tool.poetry]</span><br><span class="line">name = <span class="string">"rp-hello"</span></span><br><span class="line">version = <span class="string">"0.1.0"</span></span><br><span class="line">description = <span class="string">"My Hello World Example"</span></span><br><span class="line">authors = [<span class="string">"Philipp &lt;philipp@realpython.com&gt;"</span>]</span><br><span class="line"> </span><br><span class="line">[tool.poetry.dependencies]</span><br><span class="line">python = <span class="string">"^3.9"</span></span><br><span class="line"> </span><br><span class="line">[tool.poetry.dev-dependencies]</span><br><span class="line"> </span><br><span class="line">[build-system]</span><br><span class="line">requires = [<span class="string">"poetry-core&gt;=1.0.0"</span>]</span><br><span class="line">build-backend = <span class="string">"poetry.core.masonry.api"</span></span><br></pre></td></tr></tbody></table></figure><p>内容看起来与在之前的示例相似。</p><p>现在可以使用 Poetry 项目提供的所有命令。有了pyproject.toml文件，现在可以运行脚本：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ poetry run python3 hello.py</span><br><span class="line">Creating virtualenv rp-simple-UCsI2-py3.9 <span class="keyword">in</span> ~/Library/Caches/pypoetry/virtualenvs</span><br><span class="line">Hello World!</span><br></pre></td></tr></tbody></table></figure><p>因为 Poetry 没有找到任何可以使用的虚拟环境，所以它在执行脚本之前创建了一个新环境。执行此操作后，它会显示 <code>Hello World!</code> 消息而没有任何错误。这意味着你现在有一个正在运行的 Poetry 项目。</p><h3 id="使用现有requirements-txt文件">使用现有requirements.txt文件</h3><p>有时项目已经有一个requirements.txt文件。看看requirements.txt这个<a href="https://realpython.com/beautiful-soup-web-scraper-python/">Python 网络爬虫</a>的文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat requirements.txt</span><br><span class="line">beautifulsoup4==4.9.3</span><br><span class="line">certifi==2020.12.5</span><br><span class="line">chardet==4.0.0</span><br><span class="line">idna==2.10</span><br><span class="line">requests==2.25.1</span><br><span class="line">soupsieve==2.2.1</span><br><span class="line">urllib3==1.26.4</span><br></pre></td></tr></tbody></table></figure><p>使用该cat实用程序，可以读取文件并将内容写入标准输出。</p><p>在本例中，它显示了网络爬虫项目的依赖项。使用 创建 Poetry 项目后<code>poetry init</code>，可以将该cat实用程序与<code>poetry add</code>命令结合使用：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ poetry add `cat requirements.txt`</span><br><span class="line">Creating virtualenv rp-require-0ubvZ-py3.9 <span class="keyword">in</span> ~/Library/Caches/pypoetry/virtualenvs</span><br><span class="line"> </span><br><span class="line">Updating dependencies</span><br><span class="line">Resolving dependencies... (6.2s)</span><br><span class="line"> </span><br><span class="line">Writing lock file</span><br><span class="line"> </span><br><span class="line">Package operations: 7 installs, 0 updates, 0 removals</span><br><span class="line"> </span><br><span class="line">  • Installing certifi (2020.12.5)</span><br><span class="line">  • Installing chardet (4.0.0)</span><br><span class="line">  • Installing idna (2.10)</span><br><span class="line">  • Installing soupsieve (2.2.1)</span><br><span class="line">  • Installing urllib3 (1.26.4)</span><br><span class="line">  • Installing beautifulsoup4 (4.9.3)</span><br><span class="line">  • Installing requests (2.25.1)</span><br></pre></td></tr></tbody></table></figure><p>当需求文件像这样简单时，使用poetry add和cat可以为节省一些手动工作。</p><p>但是，有时requirements.txt文件有点复杂。在这些情况下，可以执行测试运行并查看结果，或者手动将需求添加到文件中的[tool.poetry.dependencies]表中pyproject.toml。</p><p>要查看您的结构pyproject.toml是否有效，可以运行<code>poetry check</code>。</p><h3 id="从poetry-lock创建requirements-txt">从poetry.lock创建requirements.txt</h3><p>在某些情况下，必须有一个requirements.txt文件。例如，想在 Heroku 上托管 Django 项目。</p><p>对于这种情况，Poetry 提供了export命令。如果有一个 Poetry 项目，可以requirements.txt从poetry.lock文件中创建一个文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ poetry <span class="built_in">export</span> --output requirements.txt</span><br></pre></td></tr></tbody></table></figure><p>poetry export以这种方式使用该命令会创建一个requirements.txt包含散列和环境标记的文件。</p><p>这意味着可以确保处理与poetry.lock文件内容类似的非常严格的要求。</p><p>如果还想包含你的开发依赖项，可以添加–dev到命令中。要查看所有可用选项，可以输入<code>poetry export --help</code></p><h2 id="命令参考">命令参考</h2><p>本内容介绍了 Poetry 的依赖管理。在此过程中，使用了一些 Poetry 的命令行界面 (CLI) 命令：</p><table><thead><tr><th>Poetry 命令</th><th>解释</th></tr></thead><tbody><tr><td>$ poetry --version</td><td>显示Poetry安装版本</td></tr><tr><td>$ poetry new</td><td>创建一个新的Poetry项目</td></tr><tr><td>$ poetry init</td><td>将Poetry添加到现有项目中</td></tr><tr><td>$ poetry run</td><td>使用Poetry执行给定的命令</td></tr><tr><td>$ poetry add</td><td>添加一个包到pyproject.toml并安装它</td></tr><tr><td>$ poetry update</td><td>更新项目的依赖项</td></tr><tr><td>$ poetry install</td><td>安装依赖</td></tr><tr><td>$ poetry show</td><td>列出已安装的软件包</td></tr><tr><td>$ poetry lock</td><td>将最新版本的依赖项固定到poetry.lock</td></tr><tr><td>$ poetry lock --no-update</td><td>刷新poetry.lock文件而不更新任何依赖版本</td></tr><tr><td>$ poetry check</td><td>验证pyproject.toml</td></tr><tr><td>$ poetry config --list</td><td>显示Poetry配置</td></tr><tr><td>$ poetry env list</td><td>列出项目的虚拟环境</td></tr><tr><td>$ poetry export</td><td>导出poetry.lock为其他格式</td></tr></tbody></table><p>可以查看<a href="https://python-poetry.org/docs/cli/">Poetry CLI 文档</a>以了解有关上述命令和 Poetry 提供的其他命令的更多信息。还可以<code>poetry --help</code>直接在终端中运行以查看信息！</p><h1 id="结论">结论</h1><p>在本教程探索了如何创建新的 Python Poetry 项目以及如何将 Poetry 添加到现有项目中。Poetry 的一个关键部分是pyproject.toml文件。与 poetry.lock 结合使用，可以确保安装项目所需的每个包的确切版本。</p><p>当跟踪poetry.lockGit 存储库中的文件时，还要确保项目中的所有其他开发人员在他们的机器上安装相同的依赖项版本。</p><h3 id="参考">参考</h3><p>[1] <a href="https://python-poetry.org/">https://python-poetry.org/</a></p><p>[2] <a href="https://realpython.com/">https://realpython.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;简介&lt;/h1&gt;
&lt;p&gt;当您的 Python 项目依赖于外部包时，您需要确保使用每个包的正确版本。更新后，软件包可能无法像更新前那样工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Poetry&lt;/strong&gt; 这样的依赖管理器可帮助在项目中指定、安装和</summary>
      
    
    
    
    
    <category term="Python" scheme="http://lxz9.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python f-string字符串格式化的介绍</title>
    <link href="http://lxz9.com/2022/03/20/f-string/"/>
    <id>http://lxz9.com/2022/03/20/f-string/</id>
    <published>2022-03-19T16:00:00.000Z</published>
    <updated>2022-03-20T09:07:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>从 Python 3.6 开始，<code>f-strings</code> 是一种很好的格式化字符串的新方法。它们不仅比其他格式化方式更易读、更简洁、更不容易出错，而且速度也更快！</p><p>在本文结束时，您将了解如何以及为什么从今天开始使用 f-string。</p><div align="center" class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=212462026&amp;bvid=BV1Wa411t78t&amp;cid=553737386&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="true">    </iframe></div><h1 id="Python-中的“老派”字符串格式">Python 中的“老派”字符串格式</h1><p>在 Python 3.6 之前，有两种主要方法可以将 Python 表达式嵌入到字符串文字中以进行格式化：<code>%-formatting</code> 和<code>str.format()</code>. 您将看到如何使用它们以及它们的局限性。</p><h2 id="1-formatting">1: <em>%-formatting</em></h2><p>这是 Python 格式化的 OG，从一开始就在该语言中。</p><p>您可以在 Python 文档中阅读更多内容。请记住，文档不建议使用 %-formatting，其中包含以下注释：</p><blockquote><p>这里描述的格式化操作表现出各种quirks，这些quirks会导致一些常见错误（例如无法正确显示元组和字典）<br><br>使用较新的格式化字符串文字或 str.format() 接口有助于避免这些错误。 这些替代方案还为格式化文本提供了更强大、更灵活和可扩展的方法。</p></blockquote><table><thead><tr><th>格式化符号</th><th>功能</th></tr></thead><tbody><tr><td>%s</td><td>格式化字符串</td></tr><tr><td>%c</td><td>格式化字符及其ASCII码</td></tr><tr><td>%d</td><td>格式化十进制整数</td></tr><tr><td>%o</td><td>格式化八进制数</td></tr><tr><td>%x / %X</td><td>格式化十六进制数（x / X 代表转换后的十六进制字符的大小写）</td></tr><tr><td>%f</td><td>格式化浮点数字</td></tr></tbody></table><h3 id="如何使用-formatting">如何使用 %-formatting</h3><p>字符串对象有一个使用 % 运算符的内置操作，可以使用它来格式化字符串。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">"Eric"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"Hello, %s."</span> % name</span><br><span class="line"><span class="string">'Hello, Eric.'</span></span><br></pre></td></tr></tbody></table></figure><p>为了插入多个变量，必须使用这些变量的元组。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">"Eric"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age = <span class="number">74</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"Hello, %s. You are %s."</span> % (name, age)</span><br><span class="line"><span class="string">'Hello Eric. You are 74.'</span></span><br></pre></td></tr></tbody></table></figure><h3 id="为什么-formatting-不好">为什么 %-formatting 不好</h3><p>上面看到的代码示例具有足够的可读性。但是，一旦开始使用多个参数和更长的字符串，代码将很快变得不那么容易阅读。事情已经开始看起来有点乱了：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>first_name = <span class="string">"Eric"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>last_name = <span class="string">"Idle"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age = <span class="number">74</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>profession = <span class="string">"comedian"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>affiliation = <span class="string">"Monty Python"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"Hello, %s %s. You are %s. You are a %s. You were a member of %s."</span> % (first_name, last_name, age, profession, affiliation)</span><br><span class="line"><span class="string">'Hello, Eric Idle. You are 74. You are a comedian. You were a member of Monty Python.'</span></span><br></pre></td></tr></tbody></table></figure><p>这种格式不是很好，因为它很冗长并且会导致错误，比如不能正确显示元组或字典。</p><h2 id="2：str-format">2：str.format()</h2><p>这种完成工作的新方法是在 Python 2.6 中引入的。可以查看<a href="https://realpython.com/python-formatted-output/">较新的 Python 字符串格式技术指南</a>以获取更多信息。</p><h3 id="如何使用-str-format">如何使用 str.format()</h3><p>str.format()  是对 %-formatting 的改进。它使用正常的函数调用语法，并且可以通过正在转换为字符串的对象上的 <a href="https://peps.python.org/pep-3101/#controlling-formatting-on-a-per-type-basis"><strong>format</strong>() 方法进行扩展</a>。</p><p>使用 str.format()，替换字段用大括号标记：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">"Eric"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age = <span class="number">74</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"Hello, {}. You are {}."</span>.<span class="built_in">format</span>(name, age)</span><br><span class="line"><span class="string">'Hello, Eric. You are 74.'</span></span><br></pre></td></tr></tbody></table></figure><p>可以通过引用它们的索引以任何顺序引用变量：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"Hello, {1}. You are {0}."</span>.<span class="built_in">format</span>(age, name)</span><br><span class="line"><span class="string">'Hello, Eric. You are 74.'</span></span><br></pre></td></tr></tbody></table></figure><p>但是，如果您插入变量名称，则即可以传递对象，还可以在大括号之间引用参数和方法：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person = {<span class="string">'name'</span>: <span class="string">'Eric'</span>, <span class="string">'age'</span>: <span class="number">74</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"Hello, {name}. You are {age}."</span>.<span class="built_in">format</span>(name=person[<span class="string">'name'</span>], age=person[<span class="string">'age'</span>])</span><br><span class="line"><span class="string">'Hello, Eric. You are 74.'</span></span><br></pre></td></tr></tbody></table></figure><p>还可以使用 ** 来使用字典来完成这个巧妙的技巧：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>person = {<span class="string">'name'</span>: <span class="string">'Eric'</span>, <span class="string">'age'</span>: <span class="number">74</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"Hello, {name}. You are {age}."</span>.<span class="built_in">format</span>(**person)</span><br><span class="line"><span class="string">'Hello, Eric. You are 74.'</span></span><br></pre></td></tr></tbody></table></figure><p>与 %-formatting 相比，str.format() 绝对是一个升级</p><h3 id="为什么-str-format-不好">为什么 str.format() 不好</h3><p>使用 str.format() 的代码比使用 %-formatting 的代码更容易阅读，但是当您处理多个参数和较长的字符串时，str.format() 仍然可能非常冗长。看看这个：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>first_name = <span class="string">"Eric"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>last_name = <span class="string">"Idle"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age = <span class="number">74</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>profession = <span class="string">"comedian"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>affiliation = <span class="string">"Monty Python"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print((<span class="string">"Hello, {first_name} {last_name}. You are {age}. "</span> + </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>       <span class="string">"You are a {profession}. You were a member of {affiliation}."</span>) \</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>       .<span class="built_in">format</span>(first_name=first_name, last_name=last_name, age=age, \</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>               profession=profession, affiliation=affiliation))</span><br><span class="line"><span class="string">'Hello, Eric Idle. You are 74. You are a comedian. You were a member of Monty Python.'</span></span><br></pre></td></tr></tbody></table></figure><p>如果你有你想在字典中传递给 .format() 的变量，那么你可以用 <code>.format(**some_dict)</code> 解压它并通过字符串中的键引用值，但必须有一个更好的方法来做到这一点。</p><h2 id="f-Strings">f-Strings</h2><p><strong>一种在 Python 中格式化字符串的新方法和改进方法</strong></p><p><strong>f-string亦称为格式化字符串常量（<em>formatted string literals</em>）</strong></p><p>是Python3.6引入的一种字符串格式化方法，主要目的是使格式化字符串的操作更加简便。</p><p>f-string在功能方面不逊于传统的 %-formatting 语句和 str.format() 函数</p><p>同时性能又优于二者，且使用起来也更加简洁明了，因此对于Python3.6及以后的版本，推荐使用f-string进行字符串格式化。</p><h3 id="简单语法">简单语法</h3><p>语法类似于使用 str.format() 的语法，但不那么冗长。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">"Eric"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age = <span class="number">74</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"Hello, <span class="subst">{name}</span>. You are <span class="subst">{age}</span>."</span></span><br><span class="line"><span class="string">'Hello, Eric. You are 74.'</span></span><br></pre></td></tr></tbody></table></figure><p>使用大写字母 F 也是有效的：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">F"Hello, <span class="subst">{name}</span>. You are <span class="subst">{age}</span>."</span></span><br><span class="line"><span class="string">'Hello, Eric. You are 74.'</span></span><br></pre></td></tr></tbody></table></figure><h3 id="任意表达式">任意表达式</h3><p>因为 f-strings 是在运行时评估的，所以您可以将任何和所有有效的 Python 表达式放入其中。这使您可以做一些漂亮的事情。</p><p>可以做一些非常简单的事情，像这样：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{<span class="number">2</span> * <span class="number">37</span>}</span>"</span></span><br><span class="line"><span class="string">'74'</span></span><br></pre></td></tr></tbody></table></figure><p>也可以调用函数</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_lowercase</span>(<span class="params"><span class="built_in">input</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">input</span>.lower()</span><br><span class="line"></span><br><span class="line">name = <span class="string">"Eric Idle"</span></span><br><span class="line"><span class="string">f"<span class="subst">{to_lowercase(name)}</span> is funny."</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>还可以选择直接调用方法：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{name.lower()}</span> is funny."</span></span><br><span class="line"><span class="string">'eric idle is funny.'</span></span><br></pre></td></tr></tbody></table></figure><p>甚至可以使用从具有 f-strings 的类创建的对象。假设有以下class:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Comedian</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, first_name, last_name, age</span>):</span></span><br><span class="line">        self.first_name = first_name</span><br><span class="line">        self.last_name = last_name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f"<span class="subst">{self.first_name}</span> <span class="subst">{self.last_name}</span> is <span class="subst">{self.age}</span>."</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f"<span class="subst">{self.first_name}</span> <span class="subst">{self.last_name}</span> is <span class="subst">{self.age}</span>. Surprise!"</span></span><br></pre></td></tr></tbody></table></figure><p>你可以这样做：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_comedian = Comedian(<span class="string">"Eric"</span>, <span class="string">"Idle"</span>, <span class="string">"74"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{new_comedian}</span>"</span></span><br><span class="line"><span class="string">'Eric Idle is 74.'</span></span><br></pre></td></tr></tbody></table></figure><p><a href="https://realpython.com/operator-function-overloading/"><code>__str__()</code> 和<code> __repr__()</code> 方法</a>处理对象如何呈现为字符串，因此您需要确保在类定义中至少包含这些方法之一。 如果您必须选择一个，请使用 <code>__repr__()</code>，因为它可以用来代替 <code>__str__()</code>。</p><p><code>__str__() </code>返回的字符串是对象的非正式字符串表示形式，应该是可读的。 <code>__repr__()</code> 返回的字符串是官方的表示，应该是明确的。 调用 <code>str()</code> 和 <code>repr()</code> 优于直接使用 <code>__str__()</code> 和 <code>__repr__()</code>。</p><p>默认情况下， f-strings 将使用 <code>__str__()</code>，但如果包含转换标志 !r，则可以确保它们使用 <code>__repr__()</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{new_comedian}</span>"</span></span><br><span class="line"><span class="string">'Eric Idle is 74.'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{new_comedian!r}</span>"</span></span><br><span class="line"><span class="string">'Eric Idle is 74. Surprise!'</span></span><br></pre></td></tr></tbody></table></figure><p>如果您想阅读一些导致 f-strings 支持完整 Python 表达式的对话，您可以在此处进行。</p><h3 id="多行-f-Strings">多行 f-Strings</h3><p>可以有多行字符串：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">"Eric"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>profession = <span class="string">"comedian"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>affiliation = <span class="string">"Monty Python"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = (</span><br><span class="line"><span class="meta">... </span>    <span class="string">f"Hi <span class="subst">{name}</span>. "</span></span><br><span class="line"><span class="meta">... </span>    <span class="string">f"You are a <span class="subst">{profession}</span>. "</span></span><br><span class="line"><span class="meta">... </span>    <span class="string">f"You were in <span class="subst">{affiliation}</span>."</span></span><br><span class="line"><span class="meta">... </span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message</span><br><span class="line"><span class="string">'Hi Eric. You are a comedian. You were in Monty Python.'</span></span><br></pre></td></tr></tbody></table></figure><p>但请记住，需要在多行字符串的每一行前面放置一个 f。以下代码将不起作用：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = (</span><br><span class="line"><span class="meta">... </span>    <span class="string">f"Hi <span class="subst">{name}</span>. "</span></span><br><span class="line"><span class="meta">... </span>    <span class="string">"You are a {profession}. "</span></span><br><span class="line"><span class="meta">... </span>    <span class="string">"You were in {affiliation}."</span></span><br><span class="line"><span class="meta">... </span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message</span><br><span class="line"><span class="string">'Hi Eric. You are a {profession}. You were in {affiliation}.'</span></span><br></pre></td></tr></tbody></table></figure><p>如果想将字符串分散到多行，还可以选择使用 \ 转义返回：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">f"Hi <span class="subst">{name}</span>. "</span> \</span><br><span class="line"><span class="meta">... </span>          <span class="string">f"You are a <span class="subst">{profession}</span>. "</span> \</span><br><span class="line"><span class="meta">... </span>          <span class="string">f"You were in <span class="subst">{affiliation}</span>."</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message</span><br><span class="line"><span class="string">'Hi Eric. You are a comedian. You were in Monty Python.'</span></span><br></pre></td></tr></tbody></table></figure><p>但是如果你使用 <code>"""</code> 会发生这种情况：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">f"""</span></span><br><span class="line"><span class="string"><span class="meta">... </span>    Hi <span class="subst">{name}</span>. </span></span><br><span class="line"><span class="string"><span class="meta">... </span>    You are a <span class="subst">{profession}</span>. </span></span><br><span class="line"><span class="string"><span class="meta">... </span>    You were in <span class="subst">{affiliation}</span>.</span></span><br><span class="line"><span class="string"><span class="meta">... </span>"""</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message</span><br><span class="line"><span class="string">'\n    Hi Eric.\n    You are a comedian.\n    You were in Monty Python.\n'</span></span><br></pre></td></tr></tbody></table></figure><h3 id="速度">速度</h3><p>f-strings中的 f 也可以代表“fast”。</p><p>f-strings 比 %-formatting 和 str.format() 都快。 正如您已经看到的，f 字符串是在运行时计算的表达式，而不是常量值。 这是文档的摘录：</p><blockquote><p>F-strings 提供了一种在字符串文字中嵌入表达式的方法，使用最少的语法。<br><br> 应该注意的是，f-string 实际上是在运行时计算的表达式，而不是常量值。 <br><br>在 Python 源代码中，f-string 是一个以 f 为前缀的文字字符串，其中包含大括号内的表达式。 表达式被替换为它们的值。</p></blockquote><p>在运行时，花括号内的表达式在其自己的范围内进行评估，然后与 f-string 的字符串文字部分放在一起。然后返回结果字符串。这就是全部。</p><p><strong>速度比较：</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> timeit</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>timeit.timeit(<span class="string">"""name = "Eric"</span></span><br><span class="line"><span class="string"><span class="meta">... </span>age = 74</span></span><br><span class="line"><span class="string"><span class="meta">... </span>'%s is %s.' % (name, age)"""</span>, number = <span class="number">10000</span>)</span><br><span class="line"><span class="number">0.003324444866599663</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>timeit.timeit(<span class="string">"""name = "Eric"</span></span><br><span class="line"><span class="string"><span class="meta">... </span>age = 74</span></span><br><span class="line"><span class="string"><span class="meta">... </span>'{} is {}.'.format(name, age)"""</span>, number = <span class="number">10000</span>)</span><br><span class="line"><span class="number">0.004242089427570761</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>timeit.timeit(<span class="string">"""name = "Eric"</span></span><br><span class="line"><span class="string"><span class="meta">... </span>age = 74</span></span><br><span class="line"><span class="string"><span class="meta">... </span>f'{name} is {age}.'"""</span>, number = <span class="number">10000</span>)</span><br><span class="line"><span class="number">0.0024820892040722242</span></span><br></pre></td></tr></tbody></table></figure><p>从上面可以看出来 f-string 速度更快</p><p>然而，情况并非总是如此。当它们第一次实现时，它们存在一些速度问题，需要比 str.format() 更快。引入了特殊的 <a href="https://bugs.python.org/issue27078">BUILD_STRING opcode</a>。</p><h3 id="f-string需要注意的地方">f-string需要注意的地方</h3><h4 id="引号">引号</h4><p>可以在表达式中使用各种类型的引号。只需确保在 f-string 外部使用的引号类型与您在表达式中使用的引号不同。</p><p>此代码将起作用：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{<span class="string">'Eric Idle'</span>}</span>"</span></span><br><span class="line"><span class="string">'Eric Idle'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f'<span class="subst">{<span class="string">"Eric Idle"</span>}</span>'</span></span><br><span class="line"><span class="string">'Eric Idle'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还可以使用三引号：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"""Eric Idle"""</span></span><br><span class="line"><span class="string">'Eric Idle'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f'''Eric Idle'''</span></span><br><span class="line"><span class="string">'Eric Idle'</span></span><br></pre></td></tr></tbody></table></figure><p>如果你发现你需要在字符串的内部和外部使用相同类型的引号，那么你可以用 \ 转义：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"The \"comedian\" is <span class="subst">{name}</span>, aged <span class="subst">{age}</span>."</span></span><br><span class="line"><span class="string">'The "comedian" is Eric Idle, aged 74.'</span></span><br></pre></td></tr></tbody></table></figure><h4 id="字典">字典</h4><p>说到引号，当你使用字典时要小心。 如果要对字典的键使用单引号，请记住确保对包含键的 f-strings 使用双引号。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>comedian = {<span class="string">'name'</span>: <span class="string">'Eric Idle'</span>, <span class="string">'age'</span>: <span class="number">74</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"The comedian is <span class="subst">{comedian[<span class="string">'name'</span>]}</span>, aged <span class="subst">{comedian[<span class="string">'age'</span>]}</span>."</span></span><br><span class="line">The comedian <span class="keyword">is</span> Eric Idle, aged <span class="number">74.</span></span><br></pre></td></tr></tbody></table></figure><p>但这将是一个常犯语法错误：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>comedian = {<span class="string">'name'</span>: <span class="string">'Eric Idle'</span>, <span class="string">'age'</span>: <span class="number">74</span>}</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f'The comedian is <span class="subst">{comedian[<span class="string">'name'</span>]}</span>, aged <span class="subst">{comedian[<span class="string">'age'</span>]}</span>.'</span></span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span></span><br><span class="line">    <span class="string">f'The comedian is <span class="subst">{comedian[<span class="string">'name'</span>]}</span>, aged <span class="subst">{comedian[<span class="string">'age'</span>]}</span>.'</span></span><br><span class="line">                                    ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></tbody></table></figure><p>如果您在字典键周围使用与在 f-string 外部使用相同类型的引号，则第一个字典键开头的引号将被解释为字符串的结尾。</p><h4 id="大括号">大括号</h4><p>为了使大括号出现在您的字符串中，您必须使用双大括号：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"{{70 + 4}}"</span></span><br><span class="line"><span class="string">'{70 + 4}'</span></span><br></pre></td></tr></tbody></table></figure><p>请注意，使用三重大括号将导致字符串中只有一个大括号：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"{{<span class="subst">{<span class="number">70</span> + <span class="number">4</span>}</span>}}"</span></span><br><span class="line"><span class="string">'{74}'</span></span><br></pre></td></tr></tbody></table></figure><p>但是，如果您使用三个以上的大括号，您可以获得更多的大括号：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"{{{{70 + 4}}}}"</span></span><br><span class="line"><span class="string">'{{70 + 4}}'</span></span><br></pre></td></tr></tbody></table></figure><h4 id="反斜杠">反斜杠</h4><p>正如您之前看到的，您可以在 f-string 的字符串部分使用反斜杠转义。但是，您不能在 f-string 的表达式部分使用反斜杠转义：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{\<span class="string">"Eric Idle\"}"</span></span></span></span><br><span class="line"><span class="string"><span class="subst">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span></span></span></span><br><span class="line"><span class="string"><span class="subst">    <span class="string">f"<span class="subst">{\<span class="string">"Eric Idle\"}"</span></span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="subst">                      ^</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="subst">SyntaxError: f-string expression part cannot include a backslash</span></span></span></span></span><br></pre></td></tr></tbody></table></figure><p>您可以通过预先评估表达式并使用 f 字符串中的结果来解决此问题：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">"Eric Idle"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">{name}</span>"</span></span><br><span class="line"><span class="string">'Eric Idle'</span></span><br></pre></td></tr></tbody></table></figure><h4 id="行内注释">行内注释</h4><p>表达式不应包含使用 # 符号的注释。你会得到一个语法错误：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f"Eric is {2 * 37 #Oh my!}."</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span></span><br><span class="line">    f"Eric is {2 * 37 #Oh my!}."</span><br><span class="line">                                ^</span><br><span class="line">SyntaxError: f-string expression part cannot include <span class="string">'#'</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从 Python 3.6 开始，&lt;code&gt;f-strings&lt;/code&gt; 是一种很好的格式化字符串的新方法。它们不仅比其他格式化方式更易读、更简洁、更不容易出错，而且速度也更快！&lt;/p&gt;
&lt;p&gt;在本文结束时，您将了解如何以及为什么从今天开始使用 f-string。&lt;/p</summary>
      
    
    
    
    
    <category term="Python" scheme="http://lxz9.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>使用 RGL 制作交互式 3D 散点图</title>
    <link href="http://lxz9.com/2022/01/20/rgl/"/>
    <id>http://lxz9.com/2022/01/20/rgl/</id>
    <published>2022-01-20T08:00:00.000Z</published>
    <updated>2022-01-20T08:22:02.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>本 <strong>R 教程</strong> 逐步描述了如何使用 <strong>rgl包</strong> 构建 3D 图形。</p><p>RGL 是一个 3D 图形包，可生成实时交互式 3D 绘图。</p><p>它允许交互式旋转、缩放图形和选择区域。</p><p><strong>rgl 包</strong>还包括一个名为 <strong>R3D</strong> 的通用 3D 接口。</p><p><strong>R3D</strong> 是本文末尾描述的通用 3D 对象和函数的集合。</p><p><strong>内容14913字 32图！</strong></p><p><img src="https://s4.ax1x.com/2022/01/18/7BJghj.gif" alt=""></p><h2 id="安装-RGL-包">安装 RGL 包</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"rgl"</span>)</span><br></pre></td></tr></tbody></table></figure><p>在 Linux 操作系统上，可以按如下方式安装rgl包：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install r-cran-rgl</span><br></pre></td></tr></tbody></table></figure><h2 id="加载-RGL-包">加载 RGL 包</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library(<span class="string">"rgl"</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="准备数据">准备数据</h2><p>我们将在以下示例中使用iris数据集：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data(iris)</span><br><span class="line">head(iris)</span><br><span class="line"></span><br><span class="line">x &lt;- sep.l &lt;- iris$Sepal.Length</span><br><span class="line">y &lt;- pet.l &lt;- iris$Petal.Length</span><br><span class="line">z &lt;- sep.w &lt;- iris$Sepal.Width</span><br></pre></td></tr></tbody></table></figure><h2 id="启动和关闭-RGL-device">启动和关闭 RGL device</h2><blockquote><p>要使用 RGL 制作 3D 绘图，应该首先在 R 中启动 RGL device</p></blockquote><p>以下函数用于管理 RGL ：</p><ul><li><code>rgl.open()</code>：打开一个新设备</li><li><code>rgl.close()</code>：关闭当前设备</li><li><code>rgl.clear()</code>：清除当前设备</li><li><code>rgl.cur()</code>：返回活动设备 ID</li><li><code>rgl.quit()</code>：关闭 RGL</li></ul><p>第一部分，为每个绘图打开一个新的 RGL 设备。</p><p>可以第一次使用函数 <code>rgl.open()</code> –&gt; 然后制作第一个 3D 绘图 –&gt; 然后使用 <code>rgl.clear()</code> 清除场景 –&gt; 并再次制作新的绘图。</p><h2 id="3D-散点图">3D 散点图</h2><h3 id="基本图">基本图</h3><p>函数<code>rgl.points()</code>用于绘制3D 散点图：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rgl.open() <span class="comment"># 打开一个新的 RGL device</span></span><br><span class="line">rgl.points(x, y, z, color =<span class="string">"lightgray"</span>) <span class="comment"># 散点图</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BYSHO.png" alt="1"></p><ul><li><strong>x, y, z</strong>：数值向量，指定要绘制的点的坐标。参数 y 和 z 在以下情况下是可选的：</li><li>x是包含至少 3 列的矩阵或数据框，将用作 x、y 和 z 坐标。例如：<code>rgl.points(iris)</code></li><li>x是 zvar ~ xvar + yvar 形式的公式（参阅 <strong>?xyz.coords</strong> ）。例如：<code>rgl.points(z ~ x + y)</code></li><li>…：材料特性。有关详细信息，请参阅 <strong>?rgl.material</strong></li></ul><h3 id="更改背景和点颜色">更改背景和点颜色</h3><ul><li>函数<code>rgl.bg(color)</code>可用于设置场景的背景环境</li><li>参数 <em>color</em> 在函数<code>rgl.points()</code>中用于更改点颜色</li></ul><blockquote><p>也可以使用参数 <em>size</em> 更改点的大小</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rgl.open()<span class="comment"># 打开一个新的 RGL device</span></span><br><span class="line">rgl.bg(color = <span class="string">"white"</span>) <span class="comment"># 设置背景颜色</span></span><br><span class="line">rgl.points(x, y, z, color = <span class="string">"blue"</span>, size = <span class="number">5</span>) <span class="comment"># 散点图</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJzDK.png" alt="2"></p><blockquote><blockquote><p>上述3d 界面的函数是：</p></blockquote><ul><li><code>open3d()</code> : 打开一个新的 3D 设备</li><li><code>bg3d(color)</code> : 设置场景的背景环境</li><li><code>points3d(x, y, z, ...)</code> : 坐标 x, y, z 的绘图点</li></ul></blockquote><h3 id="改变点的形状">改变点的形状</h3><p>可以使用函数<code>rgl.spheres()</code>或<code>spheres3d()</code>绘制球体：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spheres3d(x, y = <span class="literal">NULL</span>, z = <span class="literal">NULL</span>, radius = <span class="number">1</span>, ...)</span><br><span class="line">rgl.spheres(x, y = <span class="literal">NULL</span>, z = <span class="literal">NULL</span>, r, ...)</span><br></pre></td></tr></tbody></table></figure><p><code>rgl.spheres()</code>绘制具有中心 (x, y, z) 和半径 r 的球体。</p><blockquote><blockquote><ul><li><strong>x, y, z</strong> ：指定每个球体中心坐标的数值向量。 <br>参数 y 和 z 在以下情况下是可选的：</li><li>x 是包含至少 3 列的矩阵或数据框，将用作 x、y 和 z 坐标。 <br>例如：<code>rgl.spheres(iris, r = 0.2)</code></li><li>x 是 zvar ~ xvar + yvar 形式的公式（参见 <strong>?xyz.coords</strong>）。 <br>例如：<code>rgl.spheres(z ~ x + y, r = 0.2)</code></li><li><strong>radius</strong>：表示球体半径的向量或单个值</li><li>…：材料属性。 有关详细信息，请参阅 <strong>?rgl.material</strong></li></ul></blockquote></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rgl.open()<span class="comment"># 打开一个新的 RGL device</span></span><br><span class="line">rgl.bg(color = <span class="string">"white"</span>) <span class="comment"># 设置背景颜色</span></span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"grey"</span>) </span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJxu6.png" alt="3"></p><blockquote><p>可以通过按住鼠标或触摸板手动旋转rgl图。<br>也可以使用鼠标上的滚轮或使用 PC 上的触摸板<br>或 Mac 上的两个手指（向上或向下）按 ctrl + 进行缩放。</p></blockquote><h2 id="rgl-init-：用于初始化-RGL-设备的自定义函数">rgl_init()：用于初始化 RGL 设备的自定义函数</h2><p>如果请求或没有打开的设备，函数 <code>rgl_init()</code> 将创建一个新的 RGL 设备：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#' <span class="doctag">@param <span class="variable">new.device</span></span> 一个逻辑值。如果为 TRUE，则创建一个新设备</span></span><br><span class="line"><span class="comment">#' <span class="doctag">@param <span class="variable">bg</span></span> 设备的背景颜色</span></span><br><span class="line"><span class="comment">#' <span class="doctag">@param <span class="variable">width</span></span> 设备的宽度</span></span><br><span class="line">rgl_init &lt;- <span class="keyword">function</span>(new.device = <span class="literal">FALSE</span>, bg = <span class="string">"white"</span>, width = <span class="number">640</span>) { </span><br><span class="line">  <span class="keyword">if</span>( new.device | rgl.cur() == <span class="number">0</span> ) {</span><br><span class="line">    rgl.open()</span><br><span class="line">    par3d(windowRect = <span class="number">50</span> + <span class="built_in">c</span>( <span class="number">0</span>, <span class="number">0</span>, width, width ) )</span><br><span class="line">    rgl.bg(color = bg )</span><br><span class="line">  }</span><br><span class="line">  rgl.clear(type = <span class="built_in">c</span>(<span class="string">"shapes"</span>, <span class="string">"bboxdeco"</span>))</span><br><span class="line">  rgl.viewpoint(theta = <span class="number">15</span>, phi = <span class="number">20</span>, zoom = <span class="number">0.7</span>)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>使用的 RGL 函数说明：</p><ul><li><code>rgl.open()</code>: 打开一个新设备</li><li><code>rgl.cur()</code>: 返回活动设备 ID</li><li><code>par3d(windowRect)</code>: 设置窗口大小</li><li><code>rgl.viewpoint(theta, phi, fov, zoom)</code>: 设置视点。 参数 theta 和 phi 是极坐标。</li><li><code>theta</code> 和 <code>phi</code> 是极坐标。 默认值分别为 0 和 15</li><li><code>fov</code> 是以度为单位的视场角。 默认值为 60</li><li><code>zoom</code> 是缩放系数。 默认值为 1</li><li><code>rgl.bg(color)</code>: 定义设备的背景颜色</li><li><code>rgl.clear(type)</code>：从指定堆栈中清除场景（“shapes”、“lights”、“bboxdeco”、“background”）</li></ul><blockquote><p>在上面的R 代码中，使用函数 <code>rgl.viewpoint()</code> 自动设置视点方向和缩放。RGL设备是交互式的，您可以使用鼠标调整视点和缩放绘图。</p></blockquote><h2 id="添加边界框装饰">添加边界框装饰</h2><p>使用函数<code>rgl.bbox()</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>)  <span class="comment"># 散点图</span></span><br><span class="line">rgl.bbox(color = <span class="string">"#333377"</span>) <span class="comment"># 添加边界框装饰</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJjjx.png" alt="4"></p><p>函数<code>rgl.bbox()</code>的简化格式是：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rgl.bbox(xlen=<span class="number">5</span>, ylen=<span class="number">5</span>, zlen=<span class="number">5</span>, marklen=<span class="number">15.9</span>, ...)</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>xlen、ylen、zlen</strong>：分别指定 x、y 和 Z 轴上刻度线数量的值</li><li><strong>marklen</strong> : 指定刻度线长度的值</li><li>…：其他 rgl 材料属性（参见?rgl.material）包括：</li><li><strong>color</strong> : 颜色向量。第一种颜色用于边界框的背景颜色。第二种颜色用于刻度线标签。</li><li><strong>emission, specular, shininess</strong>: 光照计算的属性</li><li><strong>alpha</strong> : 指定颜色透明度的值。该值应介于 0.0（完全透明）和 1.0（不透明）之间</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>)  </span><br><span class="line"><span class="comment"># Add bounding box decoration</span></span><br><span class="line">rgl.bbox(color=<span class="built_in">c</span>(<span class="string">"#333377"</span>,<span class="string">"black"</span>), emission=<span class="string">"#333377"</span>,</span><br><span class="line">         specular=<span class="string">"#3333FF"</span>, shininess=<span class="number">5</span>, alpha=<span class="number">0.8</span> ) </span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJXg1.png" alt="5"></p><h2 id="添加轴线和标签">添加轴线和标签</h2><p>函数<code>rgl.lines(x, y = NULL, z = NULL, ...)</code>可用于添加轴线。<br>函数<code>rgl.texts(x, y = NULL, z = NULL, text)</code>用于添加轴标签</p><p>对于函数<code>rgl.lines()</code>，参数 x、y 和 z 是长度为 2 的数值向量（即： x = c(x1,x2), y = c(y1, y2), z = c(z1 , z2) )</p><ul><li>值 x1、y1 和 y3 是线起点的<strong>3D 坐标</strong></li><li>x2、y2 和 y3 的值对应于线终点的<strong>3D 坐标</strong></li></ul><blockquote><p>参数x可以是矩阵或数据框，其中至少包含 3 列分别对应于 x、y 和 z 坐标。在这种情况下，参数y和z可以省略</p></blockquote><p>要绘制轴，应该将轴的范围（最小值和最大值）指定给函数<code>rgl.lines()</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 制作散点图</span></span><br><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>) </span><br><span class="line"><span class="comment"># 添加 x、y 和 z 轴</span></span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="built_in">min</span>(x), <span class="built_in">max</span>(x)), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = <span class="string">"black"</span>)</span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="built_in">min</span>(y),<span class="built_in">max</span>(y)), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = <span class="string">"red"</span>)</span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="built_in">min</span>(z),<span class="built_in">max</span>(z)), color = <span class="string">"green"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJO3R.png" alt="6"></p><blockquote><p>上图可以看到轴已绘制，但问题是它们不在点 c(0, 0, 0) 处相交</p></blockquote><p>有两种解决方案来处理这种情况：</p><ul><li><strong>扩展数据</strong>以使事情变得简单。变换 x、y 和 z 变量，使它们的 min = 0 和 max = 1</li><li><strong>使用 c(-max, +max)</strong> 作为轴的范围</li></ul><h3 id="缩放数据">缩放数据</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x1 &lt;- (x - <span class="built_in">min</span>(x))/(<span class="built_in">max</span>(x) - <span class="built_in">min</span>(x))</span><br><span class="line">y1 &lt;- (y - <span class="built_in">min</span>(y))/(<span class="built_in">max</span>(y) - <span class="built_in">min</span>(y))</span><br><span class="line">z1 &lt;- (z - <span class="built_in">min</span>(z))/(<span class="built_in">max</span>(z) - <span class="built_in">min</span>(z))</span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 制作散点图</span></span><br><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x1, y1, z1, r = <span class="number">0.02</span>, color = <span class="string">"yellow"</span>) </span><br><span class="line"><span class="comment"># 添加 x、y 和 z 轴</span></span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">1</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = <span class="string">"black"</span>)</span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">1</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = <span class="string">"red"</span>)</span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">1</span>), color = <span class="string">"green"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJLC9.png" alt="7"></p><h3 id="使用-c-max-max">使用 c(-max, max)</h3><p>让我们定义一个辅助函数来计算轴限制：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lim &lt;- <span class="keyword">function</span>(x){<span class="built_in">c</span>(-<span class="built_in">max</span>(<span class="built_in">abs</span>(x)), <span class="built_in">max</span>(<span class="built_in">abs</span>(x))) * <span class="number">1.1</span>}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 制作散点图</span></span><br><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>) </span><br><span class="line"><span class="comment"># 添加 x、y 和 z 轴</span></span><br><span class="line">rgl.lines(lim(x), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = <span class="string">"black"</span>)</span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), lim(y), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = <span class="string">"red"</span>)</span><br><span class="line">rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), lim(z), color = <span class="string">"green"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJb4J.png" alt="8"></p><h3 id="rgl-add-axes-：添加-x、y-和-z-轴的自定义函数">rgl_add_axes()：添加 x、y 和 z 轴的自定义函数</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># x, y, z : 对应点坐标的数值向量</span></span><br><span class="line"><span class="comment">#axis.col : 轴颜色</span></span><br><span class="line"><span class="comment"># xlab, ylab, zlab: 轴标签</span></span><br><span class="line"><span class="comment"># show.plane : 添加轴平面</span></span><br><span class="line"><span class="comment"># show.bbox : 添加边界框装饰</span></span><br><span class="line"><span class="comment"># bbox.col：边界框颜色。 第一种颜色是背景色； 第二种颜色是刻度线的颜色</span></span><br><span class="line">rgl_add_axes &lt;- <span class="keyword">function</span>(x, y, z, axis.col = <span class="string">"grey"</span>,</span><br><span class="line">                xlab = <span class="string">""</span>, ylab=<span class="string">""</span>, zlab=<span class="string">""</span>, show.plane = <span class="literal">TRUE</span>, </span><br><span class="line">                show.bbox = <span class="literal">FALSE</span>, bbox.col = <span class="built_in">c</span>(<span class="string">"#333377"</span>,<span class="string">"black"</span>))</span><br><span class="line">  { </span><br><span class="line">  </span><br><span class="line">  lim &lt;- <span class="keyword">function</span>(x){<span class="built_in">c</span>(-<span class="built_in">max</span>(<span class="built_in">abs</span>(x)), <span class="built_in">max</span>(<span class="built_in">abs</span>(x))) * <span class="number">1.1</span>}</span><br><span class="line">  <span class="comment"># 添加轴</span></span><br><span class="line">  xlim &lt;- lim(x); ylim &lt;- lim(y); zlim &lt;- lim(z)</span><br><span class="line">  rgl.lines(xlim, <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = axis.col)</span><br><span class="line">  rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), ylim, <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), color = axis.col)</span><br><span class="line">  rgl.lines(<span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>), zlim, color = axis.col)</span><br><span class="line">  </span><br><span class="line">   <span class="comment"># 在每个轴的末端添加一个点以指定方向</span></span><br><span class="line">   axes &lt;- rbind(<span class="built_in">c</span>(xlim[<span class="number">2</span>], <span class="number">0</span>, <span class="number">0</span>), <span class="built_in">c</span>(<span class="number">0</span>, ylim[<span class="number">2</span>], <span class="number">0</span>), </span><br><span class="line">                 <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>, zlim[<span class="number">2</span>]))</span><br><span class="line">   rgl.points(axes, color = axis.col, size = <span class="number">3</span>)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 添加轴标签</span></span><br><span class="line">  rgl.texts(axes, text = <span class="built_in">c</span>(xlab, ylab, zlab), color = axis.col,</span><br><span class="line">             adj = <span class="built_in">c</span>(<span class="number">0.5</span>, -<span class="number">0.8</span>), size = <span class="number">2</span>)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 添加平面</span></span><br><span class="line">  <span class="keyword">if</span>(show.plane) </span><br><span class="line">    xlim &lt;- xlim/<span class="number">1.1</span>; zlim &lt;- zlim /<span class="number">1.1</span></span><br><span class="line">    rgl.quads( x = <span class="built_in">rep</span>(xlim, each = <span class="number">2</span>), y = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">             z = <span class="built_in">c</span>(zlim[<span class="number">1</span>], zlim[<span class="number">2</span>], zlim[<span class="number">2</span>], zlim[<span class="number">1</span>]))</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 添加边界框装饰</span></span><br><span class="line">  <span class="keyword">if</span>(show.bbox){</span><br><span class="line">    rgl.bbox(color=<span class="built_in">c</span>(bbox.col[<span class="number">1</span>],bbox.col[<span class="number">2</span>]), alpha = <span class="number">0.5</span>, </span><br><span class="line">          emission=bbox.col[<span class="number">1</span>], specular=bbox.col[<span class="number">1</span>], shininess=<span class="number">5</span>, </span><br><span class="line">          xlen = <span class="number">3</span>, ylen = <span class="number">3</span>, zlen = <span class="number">3</span>) </span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><blockquote><ul><li>函数<code>rgl.texts(x, y, z, text)</code>用于向 <em>RGL plot</em> 添加文本。</li><li><code>rgl.quads(x, y, z)</code>用于添加平面。x、y 和 z 是长度为 4 的数值向量，指定四边形的四个节点的坐标。</li></ul></blockquote></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"blue"</span>) </span><br><span class="line">rgl_add_axes(x, y, z)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJHN4.png" alt="9"></p><h3 id="显示刻度：刻度线">显示刻度：刻度线</h3><p>函数axis3d()可以如下使用：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>) </span><br><span class="line">rgl_add_axes(x, y, z)</span><br><span class="line"><span class="comment"># 显示刻度线</span></span><br><span class="line">axis3d(<span class="string">'x'</span>, pos=<span class="built_in">c</span>( <span class="literal">NA</span>, <span class="number">0</span>, <span class="number">0</span> ), col = <span class="string">"darkgrey"</span>)</span><br><span class="line">axis3d(<span class="string">'y'</span>, pos=<span class="built_in">c</span>( <span class="number">0</span>, <span class="literal">NA</span>, <span class="number">0</span> ), col = <span class="string">"darkgrey"</span>)</span><br><span class="line">axis3d(<span class="string">'z'</span>, pos=<span class="built_in">c</span>( <span class="number">0</span>, <span class="number">0</span>, <span class="literal">NA</span> ), col = <span class="string">"darkgrey"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJ7EF.png" alt="10"></p><p>添加边界框装饰更容易：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJoHU.png" alt="11"></p><h2 id="设置-x、y-和-z-轴的纵横比">设置 x、y 和 z 轴的纵横比</h2><blockquote><p>在上图中，边界框显示为矩形。所有坐标都以相同的比例显示（iso-metric）。</p></blockquote><p>函数 <code>aspect3d(x, y = NULL, z = NULL)</code> 可用于设置当前绘图的 x、y 和 z 轴的表观比率。</p><p>x、y 和 z 分别是 x、y 和 z 轴的比率。x 可以是长度为 3 的向量，指定 3 个轴的比率。</p><blockquote><p>如果比率为 (1, 1, 1)，则边界框将显示为立方体。</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJIBT.png" alt="12"></p><p>比率的值可以设置为更大或更小以在给定轴上缩放：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"yellow"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line">aspect3d(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="comment"># 在 x 轴上缩放</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJhj0.png" alt="13"></p><h3 id="按组更改点的颜色">按组更改点的颜色</h3><p>辅助函数可用于为每个组自动选择颜色：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取因子变量不同级别的颜色</span></span><br><span class="line"><span class="comment"># @param groups 包含观察组的因子变量</span></span><br><span class="line"><span class="comment"># @param colors 包含要使用的默认颜色名称的向量</span></span><br><span class="line"></span><br><span class="line">get_colors &lt;- <span class="keyword">function</span>(groups, group.col = palette()){</span><br><span class="line">  groups &lt;- as.factor(groups)</span><br><span class="line">  ngrps &lt;- <span class="built_in">length</span>(levels(groups))</span><br><span class="line">  <span class="keyword">if</span>(ngrps &gt; <span class="built_in">length</span>(group.col)) </span><br><span class="line">    group.col &lt;- <span class="built_in">rep</span>(group.col, ngrps)</span><br><span class="line">  color &lt;- group.col[<span class="built_in">as.numeric</span>(groups)]</span><br><span class="line">  <span class="built_in">names</span>(color) &lt;- as.vector(groups)</span><br><span class="line">  <span class="built_in">return</span>(color)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>按组更改颜色：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, </span><br><span class="line">          color = get_colors(iris$Species)) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJfcq.png" alt="14"></p><p>使用自定义颜色：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cols &lt;- get_colors(iris$Species, <span class="built_in">c</span>(<span class="string">"#999999"</span>, <span class="string">"#E69F00"</span>, <span class="string">"#56B4E9"</span>))</span><br><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = cols) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJW3n.png" alt="15"></p><p>也可以使用RColorBrewer包中的调色板：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">library(<span class="string">"RColorBrewer"</span>)</span><br><span class="line">cols &lt;- get_colors(iris$Species, brewer.pal(n=<span class="number">3</span>, name=<span class="string">"Dark2"</span>) )</span><br><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = cols) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJR9s.png" alt="16"></p><h2 id="改变点的形状-2">改变点的形状</h2><p>RGL 包中有 6 个网格对象，可用作点形状：</p><ul><li><strong>cube3d()</strong></li><li><strong>tetrahedron3d()</strong></li><li><strong>octahedron3d()</strong></li><li><strong>icosahedron3d()</strong></li><li><strong>dodecahedron3d()</strong></li><li><strong>cuboctahedron3d()</strong></li></ul><p><img src="https://s4.ax1x.com/2022/01/18/7BJcNQ.png" alt="17"></p><p>要使用上面的对象进行绘图，可以使用函数<code>shapelist3d()</code>如下：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shapelist3d(shapes, x, y, z)</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>shapes</strong>：单个 shape3d（例如：<code>shapes = cube3d()</code>）<br>对象或它们的列表（例如：<code>shapes = list(cube3d(), icosahedron3d())</code>）</li><li><strong>x, y, z</strong>：要绘制的点的坐标</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">shapelist3d(tetrahedron3d(), x, y, z, size =  <span class="number">0.15</span>, </span><br><span class="line">            color = get_colors(iris$Species))</span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJ6Ag.png" alt="18"></p><h2 id="添加一个椭圆的浓度">添加一个椭圆的浓度</h2><p>函数<code>ellipse3d()</code>用于估计浓度椭圆。一个简化的格式是：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ellipse3d(x, scale = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>), centre = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>), </span><br><span class="line">          level = <span class="number">0.95</span>, ...)</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>x</strong> : x、y 和 z 之间的相关或协方差矩阵</li><li><strong>scale</strong>：如果 x 是相关矩阵，则可以在 scale 参数中给出每个参数的标准差。这默认为 c(1, 1, 1)，因此不会进行重新缩放。</li><li><strong>center</strong>：椭圆的中心将在这个位置。</li><li><strong>level</strong>：置信区域的置信水平。这用于控制椭球的大小。</li></ul><blockquote><p><strong>ellipse3d()</strong> 函数返回一个 <strong>mesh3d</strong> 类的对象，可以使用函数 <strong>shade3d()</strong> 和/或 <strong>Wired3d()</strong> 绘制</p></blockquote><ol><li>使用函数<code>shade3d()</code>绘制椭圆：</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 计算并绘制浓度椭圆</span></span><br><span class="line">ellips &lt;- ellipse3d(cov(cbind(x,y,z)), </span><br><span class="line">            centre=<span class="built_in">c</span>(mean(x), mean(y), mean(z)), level = <span class="number">0.95</span>)</span><br><span class="line">shade3d(ellips, col = <span class="string">"#D95F02"</span>, alpha = <span class="number">0.1</span>, lit = <span class="literal">FALSE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJsHS.png" alt="19"></p><ol start="2"><li>使用函数<code>wired3d()</code>绘制椭圆：</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 计算并绘制浓度椭圆</span></span><br><span class="line">ellips &lt;- ellipse3d(cov(cbind(x,y,z)), </span><br><span class="line">            centre=<span class="built_in">c</span>(mean(x), mean(y), mean(z)), level = <span class="number">0.95</span>)</span><br><span class="line">wire3d(ellips, col = <span class="string">"#D95F02"</span>,  lit = <span class="literal">FALSE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJrB8.png" alt="20"></p><ol start="3"><li>结合<code>shade3d()</code>和<code>wired3d()</code>：</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 计算并绘制浓度椭圆</span></span><br><span class="line">ellips &lt;- ellipse3d(cov(cbind(x,y,z)), </span><br><span class="line">            centre=<span class="built_in">c</span>(mean(x), mean(y), mean(z)), level = <span class="number">0.95</span>)</span><br><span class="line">shade3d(ellips, col = <span class="string">"#D95F02"</span>, alpha = <span class="number">0.1</span>, lit = <span class="literal">FALSE</span>)</span><br><span class="line">wire3d(ellips, col = <span class="string">"#D95F02"</span>,  lit = <span class="literal">FALSE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJDnf.png" alt="21"></p><ol start="4"><li><strong>为每个组添加椭圆</strong>：</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Groups</span></span><br><span class="line">groups &lt;- iris$Species</span><br><span class="line">levs &lt;- levels(groups)</span><br><span class="line">group.col &lt;- <span class="built_in">c</span>(<span class="string">"red"</span>, <span class="string">"green"</span>, <span class="string">"blue"</span>)</span><br><span class="line"><span class="comment"># 绘制观察结果</span></span><br><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>,</span><br><span class="line">            color = group.col[<span class="built_in">as.numeric</span>(groups)]) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 计算每个组的椭圆</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="built_in">length</span>(levs)) {</span><br><span class="line">    group &lt;- levs[i]</span><br><span class="line">    selected &lt;- groups == group</span><br><span class="line">    xx &lt;- x[selected]; yy &lt;- y[selected]; zz &lt;- z[selected]</span><br><span class="line">    ellips &lt;- ellipse3d(cov(cbind(xx,yy,zz)), </span><br><span class="line">              centre=<span class="built_in">c</span>(mean(xx), mean(yy), mean(zz)), level = <span class="number">0.95</span>) </span><br><span class="line">    shade3d(ellips, col = group.col[i], alpha = <span class="number">0.1</span>, lit = <span class="literal">FALSE</span>) </span><br><span class="line">    <span class="comment"># 显示组标签</span></span><br><span class="line">    texts3d(mean(xx),mean(yy), mean(zz), text = group,</span><br><span class="line">            col= group.col[i], cex = <span class="number">2</span>)</span><br><span class="line">  }</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJ0jP.png" alt="22"></p><h3 id="回归平面">回归平面</h3><p>函数<code>planes3d()</code>或<code>rgl.planes()</code>可用于将回归平面添加到 3D rgl 图中：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rgl.planes(a, b = <span class="literal">NULL</span>, <span class="built_in">c</span> = <span class="literal">NULL</span>, d = <span class="number">0</span>, ...)</span><br><span class="line">planes3d(a, b = <span class="literal">NULL</span>, <span class="built_in">c</span> = <span class="literal">NULL</span>, d = <span class="number">0</span>, ...)</span><br></pre></td></tr></tbody></table></figure><p><code>planes3d()</code>和<code>rgl.planes()</code>使用参数ax + by + cz + d = 0绘制平面。</p><ul><li><strong>a, b, c</strong> : 平面法线的坐标</li><li><strong>d</strong> : 偏移坐标</li></ul><p>使用示例：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">FALSE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># Linear model</span></span><br><span class="line">fit &lt;- lm(z ~ x + y)</span><br><span class="line">coefs &lt;- coef(fit)</span><br><span class="line">a &lt;- coefs[<span class="string">"x"</span>]; b &lt;- coefs[<span class="string">"y"</span>]; c &lt;- -<span class="number">1</span></span><br><span class="line">d &lt;- coefs[<span class="string">"(Intercept)"</span>]</span><br><span class="line">rgl.planes(a, b, <span class="built_in">c</span>, d, alpha=<span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJwct.png" alt="23"></p><p>上面的回归平面非常难看。让我们尝试做一个自定义的。遵循以下步骤：</p><ol><li>使用函数 <em>lm()</em> 计算线性回归模型：<em>ax + by + cz + d = 0</em></li><li>使用参数<code>rgl.surface()</code>添加回归曲面。</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">FALSE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 计算线性回归（y = ax + bz + d）</span></span><br><span class="line">fit &lt;- lm(y ~ x + z)</span><br><span class="line"><span class="comment"># 预测常规 xz 网格上的值</span></span><br><span class="line">grid.lines = <span class="number">26</span></span><br><span class="line">x.pred &lt;- seq(<span class="built_in">min</span>(x), <span class="built_in">max</span>(x), length.out = grid.lines)</span><br><span class="line">z.pred &lt;- seq(<span class="built_in">min</span>(z), <span class="built_in">max</span>(z), length.out = grid.lines)</span><br><span class="line">xz &lt;- expand.grid( x = x.pred, z = z.pred)</span><br><span class="line">y.pred &lt;- matrix(predict(fit, newdata = xz), </span><br><span class="line">                 nrow = grid.lines, ncol = grid.lines)</span><br><span class="line"><span class="comment"># 添加回归曲面</span></span><br><span class="line">rgl.surface(x.pred, z.pred, y.pred, color = <span class="string">"steelblue"</span>, </span><br><span class="line">                alpha = <span class="number">0.5</span>, lit = <span class="literal">FALSE</span>)  </span><br><span class="line"><span class="comment"># 添加网格线</span></span><br><span class="line">rgl.surface(x.pred, z.pred, y.pred, color = <span class="string">"black"</span>,</span><br><span class="line">    alpha = <span class="number">0.5</span>, lit = <span class="literal">FALSE</span>, front = <span class="string">"lines"</span>, back = <span class="string">"lines"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJd1I.png" alt="24"></p><h2 id="创建-RGL-场景的动图">创建 RGL 场景的动图</h2><p>函数<code>movie3d()</code>可以按如下方式使用：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">movie3d(f, duration, dir = tempdir(), convert = <span class="literal">TRUE</span>)</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>f</strong> 使用 <strong>spin3d(axis)</strong> 创建的函数</li><li><strong>axis</strong>：所需的旋转轴。默认值为 c(0, 0, 1)。</li><li><strong>duration</strong> : 动画的持续时间</li><li><strong>dir</strong> : 为电影的每一帧创建临时文件的目录</li><li><strong>convert</strong>：如果为 TRUE，则尝试将帧转换为单个 GIF 电影。它使用ImageMagick进行图像转换。</li></ul><blockquote><p>安装 <em><strong>ImageMagick(<a href="http://www.imagemagick.org/">http://www.imagemagick.org/</a>)</strong></em> 以便能够从 png 文件列表中创建电影。</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 计算并绘制浓度椭圆</span></span><br><span class="line">ellips &lt;- ellipse3d(cov(cbind(x,y,z)), </span><br><span class="line">            centre=<span class="built_in">c</span>(mean(x), mean(y), mean(z)), level = <span class="number">0.95</span>)</span><br><span class="line">wire3d(ellips, col = <span class="string">"#D95F02"</span>,  lit = <span class="literal">FALSE</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># Create a movie</span></span><br><span class="line">movie3d(spin3d(axis = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)), duration = <span class="number">3</span>,</span><br><span class="line">        dir = getwd())</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJghj.gif" alt="25"></p><h2 id="将图像导出为-png-或-pdf">将图像导出为 png 或 pdf</h2><p>绘图可以保存为 png 或 pdf。</p><ul><li>函数<code>rgl.snapshot()</code>用于将屏幕截图保存为 png 文件：</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rgl.snapshot(filename = "plot.png")</span><br></pre></td></tr></tbody></table></figure><ul><li>函数<code>rgl.postscript()</code>用于将屏幕截图保存为ps、eps、tex、pdf、svg 或 pgf格式的文件：</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rgl.postscript(<span class="string">"plot.pdf"</span>,fmt=<span class="string">"pdf"</span>)</span><br></pre></td></tr></tbody></table></figure><p>使用示例：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="built_in">T</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">rg.snapshot(<span class="string">"plot.png"</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="将绘图导出为交互式-HTML-文件">将绘图导出为交互式 HTML 文件</h2><p>函数<code>writeWebGL()</code>用于将当前场景写入 HTML：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">writeWebGL(dir = <span class="string">"webGL"</span>, filename = file.path(dir, <span class="string">"index.html"</span>))</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>dir</strong> : 写入文件的位置</li><li><strong>filename</strong> : 用于主文件的文件名</li></ul><p>下面的 R 代码写入场景的副本，然后将其显示在浏览器中：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, </span><br><span class="line">          color = get_colors(iris$Species)) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这会将副本写入临时目录'webGL'，然后显示它</span></span><br><span class="line">browseURL(</span><br><span class="line">  paste(<span class="string">"file://"</span>, writeWebGL(dir=file.path(tempdir(), <span class="string">"webGL"</span>), </span><br><span class="line">  width=<span class="number">500</span>), sep=<span class="string">""</span>)</span><br><span class="line">  )</span><br></pre></td></tr></tbody></table></figure><h2 id="在-RGL-场景中选择一个矩形">在 RGL 场景中选择一个矩形</h2><p>函数<code>rgl.select3d()</code>或<code>select3d()</code>可用于选择3 维区域。</p><p>它们返回一个函数 f(x, y, z)，该函数测试每个点 (x, y, z) 是否在所选区域中。</p><p>下面的 R 代码允许用户选择一些点，然后用不同的颜色重新绘制它们：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="built_in">F</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># Select a point</span></span><br><span class="line"> f &lt;- select3d()</span><br><span class="line"> sel &lt;- f(x,y,z) </span><br><span class="line">rgl.clear(<span class="string">"shapes"</span>)</span><br><span class="line"><span class="comment"># Redraw the points</span></span><br><span class="line">rgl.spheres(x[!sel],y[!sel], z[!sel], r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>)</span><br><span class="line">rgl.spheres(x[sel],y[sel], z[sel], r = <span class="number">0.2</span>, color = <span class="string">"green"</span>)</span><br></pre></td></tr></tbody></table></figure><h2 id="识别图中的点">识别图中的点</h2><p>使用函数<code>identify3d()</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identify3d(x, y = <span class="literal">NULL</span>, z = <span class="literal">NULL</span>, labels, n)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>函数 <code>identify3d()</code> 的工作方式与基本图形中的 identify 函数类似。</p></blockquote><p>下面的 R 代码，允许用户识别 5 个点：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">rgl.spheres(x, y, z, r = <span class="number">0.2</span>, color = <span class="string">"#D95F02"</span>) </span><br><span class="line">rgl_add_axes(x, y, z, show.bbox = <span class="built_in">F</span>)</span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">rgl.material(color = <span class="string">"blue"</span>)</span><br><span class="line">identify3d(x, y, z, labels = rownames(iris), n = <span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure><p>使用右键选择，中键退出。</p><h2 id="R3D-界面">R3D 界面</h2><p>rgl包还包括一个更高级别的接口，称为 <strong>r3d</strong> 。该界面的设计更像是经典的 2D R 图形。</p><blockquote><p>下一节将介绍如何使用 R3D 界面制作 3D 图形。</p></blockquote><h3 id="3D-散点图-2">3D 散点图</h3><p>使用函数<code>plot3d()</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Default method</span></span><br><span class="line">plot3d(x, y, z, xlab, ylab, zlab, type = <span class="string">"p"</span>, col,  </span><br><span class="line">        size, lwd, radius, add = <span class="literal">FALSE</span>, aspect = !add, ...)</span><br><span class="line"><span class="comment">## Method for class 'mesh3d'</span></span><br><span class="line">plot3d(x, xlab = <span class="string">"x"</span>, ylab = <span class="string">"y"</span>, zlab = <span class="string">"z"</span>,</span><br><span class="line">       type = <span class="built_in">c</span>(<span class="string">"shade"</span>, <span class="string">"wire"</span>, <span class="string">"dots"</span>), add = <span class="literal">FALSE</span>, ...) </span><br><span class="line">decorate3d(xlim, ylim, zlim, </span><br><span class="line">  xlab = <span class="string">"x"</span>, ylab = <span class="string">"y"</span>, zlab = <span class="string">"z"</span>, </span><br><span class="line">    box = <span class="literal">TRUE</span>, axes = <span class="literal">TRUE</span>, main = <span class="literal">NULL</span>, sub = <span class="literal">NULL</span>,</span><br><span class="line">    top = <span class="literal">TRUE</span>, aspect = <span class="literal">FALSE</span>, expand = <span class="number">1.03</span>, ...)</span><br></pre></td></tr></tbody></table></figure><ul><li><strong>x, y, z</strong>：要绘制的点的向量。任何定义坐标的合理方式都是可以接受的。有关详细信息，请参阅函数 <strong>xyz.coords</strong></li><li><strong>xlab, yab, zlab</strong> : x, y 和 z 轴标签</li><li><strong>type:</strong></li><li><strong>对于默认方法</strong>：允许的值是：“p”表示点，“s”表示球体，“l”表示线，“h”表示从 z = 0 开始的线段，“n”表示无。</li><li><strong>对于 mesh3d 方法</strong>，“shade”、“wire”或“dots”之一</li><li><strong>col</strong> : 用于绘制项目的颜色</li><li><strong>size</strong> : 点的大小</li><li><strong>lwd</strong> : 绘制项的线宽</li><li><strong>radius</strong> : 球体的半径</li><li><strong>add</strong>：是否将点添加到现有绘图中</li><li><strong>aspect</strong> : 要么是一个逻辑的指示是否调整纵横比，要么是一个新的比例</li><li>…：将传递给 par3d、material3d 或 decorate3d 的附加参数</li><li><strong>box, axes</strong> : 是否绘制框和轴。</li><li><strong>main, sub</strong> : 主标题和副标题</li><li><strong>top</strong> : 完成后是否将窗口置顶</li></ul><blockquote><p>建议使用函数 <strong>open3d()</strong> 来初始化 *3d 接口。但是，在以下 R 代码块中，我将继续使用自定义函数<code>rgl_init()</code>。</p></blockquote><p><strong>画点：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">plot3d(x, y, z, col=<span class="string">"blue"</span>, type =<span class="string">"p"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJa9A.png" alt="26"></p><p><strong>移除盒子并绘制球体：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">plot3d(x, y, z, col=<span class="string">"blue"</span>, box = <span class="literal">FALSE</span>,</span><br><span class="line">       type =<span class="string">"s"</span>, radius = <span class="number">0.15</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJKpR.png" alt="27"></p><blockquote><p>要删除坐标区，请使用参数<code>axes = FALSE</code></p></blockquote><p><strong>轴标签：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">plot3d(x, y, z, col=<span class="string">"blue"</span>, box = <span class="literal">FALSE</span>,</span><br><span class="line">       type =<span class="string">"s"</span>, radius = <span class="number">0.15</span>, xlab =<span class="string">"Sepal.Length"</span>, </span><br><span class="line">       ylab = <span class="string">"Petal.Length"</span>, zlab = <span class="string">"Sepal.Width"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJM11.png" alt="28"></p><p><strong>添加浓度椭圆：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">plot3d(x, y, z, col=<span class="string">"blue"</span>, box = <span class="literal">FALSE</span>,</span><br><span class="line">       type =<span class="string">"s"</span>, radius = <span class="number">0.15</span>)</span><br><span class="line">ellips &lt;- ellipse3d(cov(cbind(x,y,z)), </span><br><span class="line">            centre=<span class="built_in">c</span>(mean(x), mean(y), mean(z)), level = <span class="number">0.95</span>)</span><br><span class="line">plot3d(ellips, col = <span class="string">"blue"</span>, alpha = <span class="number">0.2</span>, add = <span class="literal">TRUE</span>, box = <span class="literal">FALSE</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJQ6x.png" alt="29"></p><p><strong>更改椭圆类型</strong>：参数类型的可能值= <strong>c(“shade”, “wire”, “dots”)</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">plot3d(x, y, z, col=<span class="string">"blue"</span>, box = <span class="literal">FALSE</span>,</span><br><span class="line">       type =<span class="string">"s"</span>, radius = <span class="number">0.15</span>)</span><br><span class="line">ellips &lt;- ellipse3d(cov(cbind(x,y,z)), </span><br><span class="line">            centre = <span class="built_in">c</span>(mean(x), mean(y), mean(z)), level = <span class="number">0.95</span>)</span><br><span class="line">plot3d(ellips, col = <span class="string">"blue"</span>, alpha = <span class="number">0.5</span>, add = <span class="literal">TRUE</span>, type = <span class="string">"wire"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJ3nK.png" alt="30"></p><p><strong>bbox3d()：添加边界框装饰</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rgl_init()</span><br><span class="line">plot3d(x, y, z, col=<span class="string">"blue"</span>, box = <span class="literal">FALSE</span>,</span><br><span class="line">       type =<span class="string">"s"</span>, radius = <span class="number">0.15</span>)</span><br><span class="line"><span class="comment"># 添加边界框装饰</span></span><br><span class="line">rgl.bbox(color=<span class="built_in">c</span>(<span class="string">"#333377"</span>,<span class="string">"black"</span>), emission=<span class="string">"#333377"</span>,</span><br><span class="line">         specular=<span class="string">"#3333FF"</span>, shininess=<span class="number">5</span>, alpha=<span class="number">0.8</span>, nticks = <span class="number">3</span> ) </span><br><span class="line"><span class="comment"># 更改轴纵横比</span></span><br><span class="line">aspect3d(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2022/01/18/7BJlX6.png" alt="31"></p><h3 id="一些重要的功能">一些重要的功能</h3><ul><li><strong>open3d()</strong> : 打开一个新设备</li><li><strong>向当前场景添加一个形状：</strong></li><li>points3d(x, y, z, …)</li><li>lines3d(x, y, z, …)</li><li>segments3d(x, y, z, …)</li><li>quads3d(x, y, z, …)</li><li><strong>texts3d(x, y, z, text)</strong> : 添加文本</li><li><strong>绘制框、轴和其他文本：</strong></li><li><strong>axes3d()</strong> : 添加标准轴</li><li><strong>title3d(main, sub, xlab, ylab, zlab)</strong> : 添加标题</li><li><strong>box3d()</strong>：在绘图周围绘制一个框</li><li><strong>mtext3d()</strong> : 在绘图边距中放置文本</li></ul><h2 id="RGL-函数">RGL 函数</h2><p>下面列出了管理 RGL device 的一些重要功能：</p><h3 id="设备管理">设备管理</h3><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>rgl.open()</td><td>打开一个新设备</td></tr><tr><td>rgl.close()</td><td>关闭当前设备</td></tr><tr><td>rgl.cur()</td><td>返回活动设备的 ID</td></tr><tr><td>rgl.dev.list()</td><td>返回所有设备 ID</td></tr><tr><td>rgl.set(which)</td><td>将设备设置为活动</td></tr><tr><td>rgl.quit()</td><td>关闭 RGL 设备系统</td></tr></tbody></table><h3 id="形状函数">形状函数</h3><p>将形状节点添加到当前场景。</p><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>rgl.points(x, y, z, …)</td><td>在 x、y 和 z 处绘制一个点</td></tr><tr><td>rgl.lines(x, y, z, …)</td><td>根据顶点对绘制线段 (x = c(x1,x2), y = c(y1,y2), z = c(z1, z2))</td></tr><tr><td>rgl.triangles(x, y, z, …)</td><td>用节点 (xi, yi, zi) 绘制三角形，i = 1, 2, 3</td></tr><tr><td>rgl.quads(x, y, z)</td><td>用节点 (xi, yi, zi) 绘制四边形，i = 1, 2, 3, 4</td></tr><tr><td>rgl.spheres(x, y, z, r, …)</td><td>绘制具有中心 (x, y, z) 和半径 r 的球体</td></tr><tr><td>rgl.texts(x, y, z, text, …)</td><td>向场景中添加文本</td></tr><tr><td>rgl.surface(x, y, z, …)</td><td>将表面添加到当前场景。x 和 y 是定义网格的两个向量。z 是定义每个网格点高度的矩阵</td></tr></tbody></table><h3 id="场景管理">场景管理</h3><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>rgl.clear（类型=“形状”）</td><td>从指定堆栈中清除场景（“shapes”、“lights”、“bboxdeco”、“background”）</td></tr><tr><td>rgl.pop（类型=“形状”）</td><td>从堆栈中删除最后添加的节点</td></tr></tbody></table><h3 id="设置环境">设置环境</h3><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>rgl.viewpoint(theta, phi, fov, zoom, …)</td><td>设置视点方向。theta和phi是极坐标。fov是以度为单位的视场角。缩放：缩放系数。</td></tr><tr><td>rgl.light(theta, phi, …)</td><td>向场景添加光源</td></tr><tr><td><a href="http://rgl.bg">rgl.bg</a>(…)</td><td>设置场景的背景环境</td></tr><tr><td>rgl.bbox(…)</td><td>设置边界框装饰</td></tr></tbody></table><h3 id="外观设置">外观设置</h3><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>rgl.material(…)</td><td>设置几何外观的材料属性</td></tr><tr><td>方面3d（x，y，z）</td><td>设置 x、y 和 z 轴的纵横比</td></tr></tbody></table><h3 id="导出截图">导出截图</h3><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>rgl.snapshot（“plot.png”）</td><td>将屏幕截图保存为 png 文件</td></tr><tr><td>rgl.postscript(“plot.pdf”,fmt=“pdf”)</td><td>将屏幕截图保存为ps、eps、tex、pdf、svg 或 pgf格式的文件。</td></tr></tbody></table><h3 id="将焦点分配给-RGL-窗口">将焦点分配给 RGL 窗口</h3><p><code>Rgl.bringtotop()</code> : ‘rgl.bringtotop’ 将当前 RGL 窗口带到窗口堆栈的前面（并赋予它焦点）。</p><h2 id="参考">参考</h2><p>Daniel Alder et al., RGL: A R-library for 3D visualization with OpenGL, <a href="http://rgl.neoscientists.org/arc/doc/RGL_INTERFACE03.pdf">http://rgl.neoscientists.org/arc/doc/RGL_INTERFACE03.pdf</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;本 &lt;strong&gt;R 教程&lt;/strong&gt; 逐步描述了如何使用 &lt;strong&gt;rgl包&lt;/strong&gt; 构建 3D 图形。&lt;/p&gt;
&lt;p&gt;RGL 是一个 3D 图形包，可生成实时交互式 3D 绘图。&lt;/p&gt;
&lt;p&gt;它允许交互式</summary>
      
    
    
    
    <category term="R语言" scheme="http://lxz9.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>系统发育基因组学(Phylogenomics)的介绍以及实操</title>
    <link href="http://lxz9.com/2022/01/13/Phylogenomics/"/>
    <id>http://lxz9.com/2022/01/13/Phylogenomics/</id>
    <published>2022-01-13T02:00:00.000Z</published>
    <updated>2022-01-13T05:25:54.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Phylogenomics"><em>Phylogenomics</em></h1><h2 id="写在前面">写在前面</h2><p>关于系统发育基因组学的内容，本文参考了 <em>Mike Lee</em> 的文章，将分为两期，本文介绍基本相关原理。</p><blockquote><p>有一个相关的视频，时长为32’51’’ 感兴趣的可以点击下方进入观看。</p></blockquote><div align="center" class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=765410718&amp;bvid=BV13r4y1U7s7&amp;cid=478796425&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="true">    </iframe></div><h2 id="什么是系统基因组学？">什么是系统基因组学？</h2><p>用一个容易理解但是不准确的概念来表示： <strong>系统基因组学正试图在基因组水平上推断进化关系。</strong></p><p>因为在实践中，我们并没有关注的所有生物体整个基因组。</p><p>并且根据我们考虑的多样性的广度，无论如何使用整个基因组是不可能或毫无意义的（因为它们可能太不同了）。</p><p>所以更恰当的说法是：<strong>系统基因组学试图在更接近基因组的水平上推断进化关系，而不是单个基因的系统发育（比如<em>16S rRNA</em> 基因树）。</strong></p><p><img src="https://s4.ax1x.com/2022/01/10/7E4UhD.png" alt=""></p><p>一般大家习惯于查看和使用的大多数系统发育树是单一基因类型（如 <em>16S rRNA</em> 基因）的不同拷贝去估计进化关系的视觉表示。</p><p>如果我们试图在生物体层面上思考，我们将使用这些基因拷贝作为代表生物体本身的代理，并且我们假设这些基因的进化关系告诉我们一些关于它们源生物进化关系的有意义的事情。</p><p>我们正在用系统基因组学做同样的事情，只是我们使用多个基因而不是单个基因。</p><p>最后，我们仍然只是使用序列作为代理。所以更合适的定义可能是：</p><p><strong>系统基因组学试图推断由多个串联基因组成的序列之间的进化关系，同时假设这些推断的进化关系告诉我们一些关于其源基因组进化关系的有意义的信息。</strong></p><h2 id="什么是单拷贝核心基因？">什么是单拷贝核心基因？</h2><p><strong>单拷贝核心基因，或单拷贝基因 (<em>single-copy genes SCGs</em>)</strong>，是我们目前正在谈论的大多数生物体中恰好存在 1 个拷贝的基因。</p><p>为了比较生物体之间的基因，我们需要考虑实际拥有这些基因的生物体。但是我们也需要单拷贝的基因（而不是在我们的目标生物体内往往存在多个拷贝的基因），因为系统发育学中的一个内置假设通常是所考虑的基因处于<strong>相似的进化压力下</strong>。</p><p>即使使用单拷贝基因，这也是微不足道的（并且可能永远不会真正完全正确），但是如果同一基因组中有多个基因拷贝（这些被称为旁系同源物），我们更有可能违反该假设。</p><p>所以这就是为什么当我们谈论系统基因组学时，SCG 扮演着如此重要的角色。</p><p><img src="https://s4.ax1x.com/2022/01/10/7EfPUS.jpg" alt=""></p><h2 id="我们应该使用哪些基因？">我们应该使用哪些基因？</h2><p>我们选择研究的生物体决定了应该使用的基因。</p><p>根据上面谈到的关于为什么 SCG 在系统基因组学中如此有用，如果我们专注于更密切相关的生物群，那么符合这些标准的基因数量将比关注一个更分化的有机体组会相对较大。</p><p><img src="https://s4.ax1x.com/2022/01/06/7S07IH.png" alt="ph01"></p><p>上图来自 <em>Hug et al. 2016</em> 的生命之树使用了 15 个目标基因，因为它旨在跨越 3 个域。</p><p>但是，例如，如果我们只关注蓝藻，那么这一群体中共享的单拷贝基因的数量会大得多。</p><p>例如，为了为 <em>GToTree</em> 设计一个特定于蓝藻的单拷贝基因集，需要在 NCBI 提供的至少 90% 中蓝藻基因组中找到恰好存在于 1 个拷贝中的所有基因。</p><p>该过程在执行时产生了 251 个基因靶点。相比之下，当对所有细菌基因组应用相同的过程时，结果是 74 个。</p><p>没有一套理想的目标基因可以一直使用，因为它完全取决于我们试图研究的多样性的广度。</p><h2 id="流程概览">流程概览</h2><p>假设有我们想要包含的基因组以及想要定位的一组单拷贝基因。下一步是什么？</p><p><strong>目前最常见的方法之一可能如下所示：</strong></p><div align="center"><img src="https://img-blog.csdnimg.cn/img_convert/b2fcc83423504f4aa4ee800dc58577b0.png" width="50%" height="50%"><p><strong>1. 在我们所有的输入基因组中识别我们的目标基因</strong></p><ul><li>这些由右侧卡通中的颜色表示</li><li>请注意，基因组 “B” 缺少 3 个示例目标基因之一</li></ul><div align="center"><img src="https://s4.ax1x.com/2022/01/13/7MGhb4.png" width="50%" height="50%"><p><strong>2. 单独比对每组识别的基因</strong></p><ul><li>例如 从所有输入基因组中识别出的目标基因“X”的所有拷贝都对齐在一起；对所有基因组单独完成相同的过程</li><li>对于缺少目标基因之一的任何基因组，将 gaps 插入到该基因组的该基因的比对中（如上图”Genome B”的基因“Y”的比对）</li></ul><div align="center"><img src="https://s4.ax1x.com/2022/01/13/7MGIa9.png" width="50%" height="50%"><p><strong>3. 将所有这些序列水平对齐排列</strong></p><ul><li>所有的单个基因比对并水平对齐排列，如果是氨基酸比对，通常会有一些“spacing”字符，比如几个“X”</li></ul><div align="center"><img src="https://s4.ax1x.com/2022/01/13/7MG5VJ.png" width="50%" height="50%"><p><strong>4. 推断这些组合序列的进化关系</strong></p><ul><li>构建进化树</li></ul><p>这些一般步骤中的<strong>大多数可以以不同的方式完成，并且有很多决定需要做出</strong>，例如我们如何尝试识别我们的目标基因，我们使用什么来对齐它们，以及我们使用什么来制作我们的树。还有很多我们可能需要注意的事情，例如：</p><ul><li><p>可能想要采取一些措施来进行某种形式的自动筛选，以确保我们不会让任何被确定为我们目标基因版本的基因通过，但可能不应该这样做（因为这可能会影响我们对该基因集的比对）。</p></li><li><p>如果一个给定的输入基因组中已识别出有目标基因的多个拷贝，我们可能不希望包含来自该基因组的该基因（具体可参见上面的SCG部分）。</p></li><li><p>如果输入基因组的目标基因总体上很少被识别，我们可能希望从分析中完全删除该基因组。</p></li></ul><p>下面我们将使用 <a href="https://github.com/AstrobioMike/GToTree/wiki/what-is-gtotree%3F">GToTree</a> 做一些系统基因组学，我们将看到它如何为我们自动化这些过程。</p><h2 id="系统基因组学实操">系统基因组学实操</h2><p>这里要用到一款关于软件 <a href="https://github.com/AstrobioMike/GToTree"><strong>GToTree</strong></a> 这是一个系统基因组学工作流程的软件，具体的内容可以通过 <a href="https://github.com/AstrobioMike/GToTree/wiki"><em>Github</em> 访问</a>，当然这款软件也不是适用于所有的数据组，还需要去自己详细了解一下。</p><p><strong>GToTree</strong> 是一个用户友好的系统基因组学工作流程。</p><p>它为我们处理了所有潜在的计算量大的任务，例如：</p><ul><li>大规模访问基因组数据</li><li>整合来自不同文件格式的基因组</li><li>执行基因和基因组过滤</li><li>将 <em>input labels</em> 交换为 lineage 信息</li><li>为我们将流程中的不同工具拼接在一起；等等</li></ul><p>它使系统发育树的生成和迭代更加容易处理。 <strong>GToTree wiki</strong> 上有更多信息，<br>这里展示其概览图：</p><p><img src="https://s4.ax1x.com/2022/01/06/7S05qO.png" alt="ph03"></p><h2 id="安装-GToTree">安装 GToTree</h2><p>使用 GToTree 创建一个 conda 环境，并像这样激活它：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda create -y -n gtotree -c conda-forge -c bioconda -c defaults -c astrobiomike gtotree</span><br><span class="line"></span><br><span class="line">conda activate gtotree</span><br></pre></td></tr></tbody></table></figure><h2 id="聚球藻-Synechococcus-实例">聚球藻(<em>Synechococcus</em>)实例</h2><p>聚球藻菌属（学名：<em>Synechococcus</em>）为聚球藻菌科的一个属。它是一种丰富的蓝藻，遍布全球海洋（和其他地方，但这里我们只讨论海洋 Synechococcus）</p><p>分类分配工具( <em>taxonomy assignment tool</em> )会告诉我们这些是聚球藻，<strong>这是必要的第一步</strong></p><p><strong>下一步</strong>是看看哪些聚球藻(<em>Synechococcus</em>)推断与新基因组最密切相关 —— 这就是从头系统发育树派上用场的地方（在使用新基因组时，无论是来自分离物测序或从宏基因组中恢复，一般在使用 GToTree 生成系统发育树之前使用<a href="https://github.com/Ecogenomics/GTDBTk">GTDB-Tk</a> 进行分类分配。）</p><p>我们需要提供给 GToTree 两件必需的内容：</p><ol><li>我们想要研究哪些基因组；<br></li><li>我们想用哪些目标基因来构建我们的系统发育树。</li></ol><h2 id="输入基因组">输入基因组</h2><p>把新基因组（<em>FASTA</em>格式）放入一些海洋参考聚球藻中（只需要提供 <em>NCBI accessions</em> 之后 GToTree 会为我们获取它们）。</p><p>我们可以使用以下内容下载此起始示例数据：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -L -o syn-gtotree-example.tar.gz https://ndownloader.figshare.com/files/23629763</span><br><span class="line"></span><br><span class="line">tar -xvzf syn-gtotree-example.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> syn-gtotree-example/</span><br></pre></td></tr></tbody></table></figure><p>如果我们查看该<code>ref-syn-accs.txt</code>文件，我们可以看到其中有 20 个 <em>NCBI</em> 程序集：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wc -l ref-syn-accs.txt</span><br><span class="line">head ref-syn-accs.txt</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GCF_000011385</span><br><span class="line">GCF_000012505</span><br><span class="line">GCF_000012625</span><br><span class="line">GCF_000014585</span><br><span class="line">GCF_000063505</span><br><span class="line">GCF_000063525</span><br><span class="line">GCF_000153065</span><br><span class="line">GCF_000153285</span><br><span class="line">GCF_000153805</span><br><span class="line">GCF_000153825</span><br></pre></td></tr></tbody></table></figure><p>其中包括 19 种海洋聚球藻参考，以及 <em>Gloeobacter violaceus</em>（一种更远的蓝藻）作为外群创建有根树🌲。</p><blockquote><p><strong>注意</strong><br><br>要生成此参考 <em>accessions</em>，我们可以在 NCBI 网站的 <a href="https://www.ncbi.nlm.nih.gov/assembly/"><strong>assembly</strong> 区域</a>中进行搜索，也可以使用 <a href="https://dataguide.nlm.nih.gov/edirect/documentation.html"><em>EDirect</em></a> 从命令行搜索它们。在此处的 <a href="https://github.com/AstrobioMike/GToTree/wiki/example-usage#generating-inputs"><em>GToTree wiki Alteromonas example</em></a> 中，有两种方式生成我们的参考 <em>accessions</em> 的示例</p></blockquote><p>我们可以看到我们有 12 个新的基因组序列作为 fasta 文件：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls *.fa | wc -l</span><br></pre></td></tr></tbody></table></figure><p>我们只需要将它们放入一个可以提供给 GToTree 的文件中，例如：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls *.fa &gt; our-genome-fasta-files.txt</span><br><span class="line"></span><br><span class="line">head our-genome-fasta-files.txt</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GEYO.fa</span><br><span class="line">N19.fa</span><br><span class="line">N26.fa</span><br><span class="line">N32.fa</span><br><span class="line">N5.fa</span><br><span class="line">UW105.fa</span><br><span class="line">UW106.fa</span><br><span class="line">UW140.fa</span><br><span class="line">UW179A.fa</span><br><span class="line">UW179B.fa</span><br></pre></td></tr></tbody></table></figure><h2 id="指定我们的目标基因">指定我们的目标基因</h2><p>在这种情况下，我们正在处理所有聚球藻，它们是蓝藻目( <em>Cyanobacteria</em> )。</p><p>我们可以通过GToTree的 <code>gtt-hmms</code> 看到 <em>HMM</em> 目标基因集：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtt-hmms</span><br></pre></td></tr></tbody></table></figure><p>它告诉我们 <em>HMM</em> 的存储位置（也可以根据需要自定义），然后列出当前可用的内容：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">The environment variable GToTree_HMM_dir is set to:</span><br><span class="line">     /home/lxz/software/conda/envs/gtotree/share/gtotree/hmm_sets/</span><br><span class="line"></span><br><span class="line"> The 15 available HMM SCG-sets here include:</span><br><span class="line"></span><br><span class="line"> Actinobacteria.hmm                (138 genes)</span><br><span class="line"> Alphaproteobacteria.hmm           (117 genes)</span><br><span class="line"> Archaea.hmm                        (76 genes)</span><br><span class="line"> Bacteria_and_Archaea.hmm           (25 genes)</span><br><span class="line"> Bacteria.hmm                       (74 genes)</span><br><span class="line"> Bacteroidetes.hmm                  (90 genes)</span><br><span class="line"> Betaproteobacteria.hmm            (203 genes)</span><br><span class="line"> Chlamydiae.hmm                    (286 genes)</span><br><span class="line"> Cyanobacteria.hmm                 (251 genes)</span><br><span class="line"> Epsilonproteobacteria.hmm         (260 genes)</span><br><span class="line"> Firmicutes.hmm                    (119 genes)</span><br><span class="line"> Gammaproteobacteria.hmm           (172 genes)</span><br><span class="line"> Proteobacteria.hmm                (119 genes)</span><br><span class="line"> Tenericutes.hmm                    (99 genes)</span><br><span class="line"> Universal_Hug_et_al.hmm            (16 genes)</span><br></pre></td></tr></tbody></table></figure><p>有一组蓝藻的 HMM 目标基因集，其中包含 251 个基因，适用于对聚球藻的关注。</p><p>GToTree 中包含的 SCG-sets 是按此处所述生成的。</p><h2 id="运行-GToTree">运行 <em>GToTree</em></h2><p>GToTree 的帮助菜单可以通过 <code>GToTree -h</code> 看到</p><p>在这里，我们将启动命令，然后分解代码以及 GToTree 在运行时所做的事情。</p><p>在这里运行时，迄今为止花费的最大时间是进行比对（使用更多线程运行意味着可以同时运行更多比对，从而大大提高运行时）。</p><p>通过比对和制作进化树，蓝藻 HMM 集中的全部 251 个基因，这在笔记本电脑上花费大约 6 分钟。</p><p><strong>如果想跳过处理，下面会提供结果文件。</strong></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GToTree -a ref-syn-accs.txt -f our-genome-fasta-files.txt -H Cyanobacteria -t -L Species -j 4 -o Syn-GToTree-out</span><br></pre></td></tr></tbody></table></figure><h3 id="参数详解">参数详解</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GToTree</span><br><span class="line"></span><br><span class="line">-a  <span class="comment">## 保存作为 NCBI assembly 加入提供的输入基因组的文件</span></span><br><span class="line">-f  <span class="comment">## 包含作为 fasta 文件提供的输入基因组的文件</span></span><br><span class="line">-H  <span class="comment">## 要搜索的目标基因（可以提供我们自己的或查看所有可用的gtt-hmms）</span></span><br><span class="line">-t  <span class="comment">## 这告诉 GToTree 使用 TaxonKit 将谱系信息添加到我们正在使用的参考基因组的标签中</span></span><br><span class="line">-L  <span class="comment">## 这允许我们在标签中指定我们想要多少谱系信息，因为对于这棵树，我们只关注聚球藻，我们将其设置为“物种”（实际上包括 NCBI 中的属、种和菌株名称 对于这些错误）</span></span><br><span class="line">-j  <span class="comment">## 设置在可能的情况下并行运行的作业数量（例如，如上所述，这将一次下载和搜索 4 个基因组，并一次运行 4 个比对）</span></span><br><span class="line">-o  <span class="comment">## 设置输出目录的名称</span></span><br><span class="line"><span class="comment">## 有关更多信息，请参阅 GToTree -h</span></span><br></pre></td></tr></tbody></table></figure><p>当我们执行该命令时，在此示例中为 <em>GToTree</em>：</p><ol><li>下载提供的每个参考的氨基酸序列</li><li>对所有输入的fasta文件调用开放阅读框架（使用 <em>prodigal</em> ）</li><li>识别目标基因（使用 <em>HMMER3</em> ）</li><li>根据目标基因估计完成度/冗余度</li><li>根据长度和基因组根据目标基因的命中数过滤掉 <em>gene-hits</em></li><li>为缺失任何基因的基因组添加所需的 <em>gap</em> 序列</li><li>将每个单独的基因集使用 <em>Muscle</em> 进行比对</li><li>使用 <em>Trimal</em> 执行比对的自动修剪</li><li>将所有比对( <em>alignments</em> )连接在一起</li><li>默认使用 <em>FastTree</em> 建树</li></ol><h2 id="制作-iToL-映射文件来为新基因组着色">制作 iToL 映射文件来为新基因组着色</h2><p>这一步是可选的，在这里要做的最后一件事是快速制作颜色映射文件，以便在 <a href="https://itol.embl.de/">Interactive Tree of Life (iToL)</a>站点上显示新基因组，我们将在其中可视化我们的树。</p><p>这需要一个输入文件，该文件只包含我们想要着色的树上的标签。</p><p>在这里，可以从我们的输入 FASTA 列表文件删除后缀 “.fa” 快速制作：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ cat our-genome-fasta-files.txt</span><br><span class="line">GEYO.fa</span><br><span class="line">N19.fa</span><br><span class="line">N26.fa</span><br><span class="line">N32.fa</span><br><span class="line">N5.fa</span><br><span class="line">UW105.fa</span><br><span class="line">UW106.fa</span><br><span class="line">UW140.fa</span><br><span class="line">UW179A.fa</span><br><span class="line">UW179B.fa</span><br><span class="line">UW69.fa</span><br><span class="line">UW86.fa</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -f 1 -d <span class="string">"."</span> our-genome-fasta-files.txt &gt; labels-to-color.txt</span><br></pre></td></tr></tbody></table></figure><p>现在我们可以使用 GToTree 帮助程序来快速制作 iToL 兼容文件：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtt-gen-itol-map -g labels-to-color.txt -o iToL-colors.txt</span><br></pre></td></tr></tbody></table></figure><h2 id="可视化">可视化</h2><p>我们需要在本地计算机上生成的输出文件是<code>Syn-GtoTree-out.tre</code>文件和<code>iToL-colors.txt</code> 文件，以便能够将它们上传到 iToL 网站。</p><p>可以使用左侧的文件导航器面板从活页夹环境下载这些文件，或者可以通过单击以下链接下载这两个文件：</p><ul><li><a href="https://ndownloader.figshare.com/files/23305604">Syn-GtoTree-out.tre</a></li><li><a href="https://ndownloader.figshare.com/files/23305610">iToL-colors.txt</a></li></ul><p>我们可以<a href="https://itol.embl.de/upload.cgi">上传</a>我们的树以在 iToL 网站上对其进行可视化：</p><p><img src="https://s4.ax1x.com/2022/01/06/7S0oZD.png" alt="ph04"></p><p>我们可以将 <code>Syn-GtoTree-out.tre</code> 文件拖放到：</p><p><br><img src="https://s4.ax1x.com/2022/01/06/7S0xL8.gif" alt="ph05"></p><p>然后将加载我们的树：</p><p><br><img src="https://s4.ax1x.com/2022/01/06/7S0bid.png" alt="ph06"></p><p>现在我们可以将我们的树植根于 <em>Gloeobacter violaceus</em>：</p><p><br><img src="https://s4.ax1x.com/2022/01/06/7S0qJA.png" alt="ph07"></p><p>最后，我们可以将 <code>iToL-colors.txt</code> 文件拖放到树上以突出显示我们的新基因组：</p><p><br><img src="https://s4.ax1x.com/2022/01/06/7S0LRI.png" alt="ph08"></p><p>最终结果得出这样的树状图：</p><p><br><img src="https://s4.ax1x.com/2022/01/06/7S0jQP.png" alt="ph09"></p><blockquote><p>一般来说，对于给定的一组感兴趣的生物，<strong>最好使用与该组生物一样多的单拷贝核心基因</strong>。<br> 但是，为了获得满足我们当前需求的可信信号，<strong>这并不总是必要的</strong>。</p></blockquote><p><br><img src="https://s4.ax1x.com/2022/01/06/7SB9oQ.gif" alt="ph10"></p><p>在这里，蓝藻特异性 <em>SCG-set</em> 的 251 个基因给出了与其论文图 1 中的 1,002 个目标基因树中获得的几乎相同的树和关系（除了一些旋转、着色和标签调整）：</p><p><img src="https://s4.ax1x.com/2022/01/12/7u34zD.png" alt="ph11"></p><h2 id="其他有用的输出">其他有用的输出</h2><p>除了树文件之外，GToTree 还生成了几个文件。</p><ul><li><strong>比对文件</strong>（我们可以使用不同的建树软件制作我们的树）</li><li><strong>一个基因组汇总表</strong>，其中包含每个基因组的信息，例如估计的完成/冗余百分比、谱系信息、输入标签和树中的最终标签等。</li><li><strong>单拷贝基因命中表</strong>，每个基因组每个目标基因的单拷贝基因命中计数</li><li><strong>运行日志</strong></li><li><strong>一个分区文件</strong>，可以使用混合模型制作树（示例在下面的更多示例下链接）</li><li><strong>引用文件</strong>，列出所有使用的程序和相关参考文献</li></ul><h2 id="参考">参考</h2><p><em>Happy Belly Bioinformatics: an open-source resource dedicated to helping biologists utilize bioinformatics</em></p><p><em>Lee M D. GToTree: a user-friendly workflow for phylogenomics[J]. Bioinformatics, 2019, 35(20): 4162-4164.</em></p><p><em>Lee M D, Ahlgren N A, Kling J D, et al. Marine Synechococcus isolates representing globally abundant genomic lineages demonstrate a unique evolutionary path of genome reduction without a decrease in GC content[J]. Environmental microbiology, 2019, 21(5): 1677-1686.</em></p></div></div></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Phylogenomics&quot;&gt;&lt;em&gt;Phylogenomics&lt;/em&gt;&lt;/h1&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;关于系统发育基因组学的内容，本文参考了 &lt;em&gt;Mike Lee&lt;/em&gt; 的文章，将分为两期，本文介绍基本相关原理。&lt;/p</summary>
      
    
    
    
    <category term="生物信息学" scheme="http://lxz9.com/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6/"/>
    
    
    <category term="Phylogenomics" scheme="http://lxz9.com/tags/Phylogenomics/"/>
    
  </entry>
  
  <entry>
    <title>Gviz - 实现基因组数据可视化</title>
    <link href="http://lxz9.com/2022/01/05/Gviz/"/>
    <id>http://lxz9.com/2022/01/05/Gviz/</id>
    <published>2022-01-05T15:00:00.000Z</published>
    <updated>2022-01-05T13:30:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gviz包介绍">Gviz包介绍</h1><p><strong>Gviz软件包简介</strong></p><p>Gviz软件包旨在提供一个结构化的可视化框架，以沿着基因组坐标绘制任何类型的数据。它还允许整合来自<em>UCSC</em>或<em>ENSEMBL</em>等来源的公开基因组注释数据。</p><p>与大多数基因组浏览器一样，单独类型的基因组特征或数据由单独的<em>Track</em>表示。</p><blockquote><p>默认情况下，Gviz 检查所有提供的染色体名称在 <em>UCSC</em> 上的有效性（染色体必须以 chr 字符串开头）。<br>可以决定通过调用 <em>options(ucscChromosomeNames=FALSE)</em> 来关此功能</p></blockquote><p><strong>在以下示例中，将利用小鼠 mm9 基因组上的 <em>UCSC</em> 基因组和 7 号染色体 (chr7)</strong></p><h2 id="绘制-AnnotationTrack-图">绘制 <em>AnnotationTrack</em> 图</h2><p>请注意，<em><strong>AnnotationTrack</strong></em> 构造函数可以容纳许多不同类型的输入。</p><p>例如，注释功能的开始和结束坐标可以作为单个参数<br>start和end作为 data.frame 或甚至作为 IRanges 或 GRangesList 对象。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">library(Gviz)</span><br><span class="line">library(GenomicRanges)</span><br><span class="line"><span class="comment">#加载数据 : class = GRanges</span></span><br><span class="line">data(cpgIslands)</span><br><span class="line">cpgIslands</span><br><span class="line"></span><br><span class="line"><span class="comment">## GRanges object with 10 ranges and 0 metadata columns:</span></span><br><span class="line"><span class="comment">##        seqnames            ranges strand</span></span><br><span class="line"><span class="comment">##           &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt;</span></span><br><span class="line"><span class="comment">##    [1]     chr7 26549019-26550183      *</span></span><br><span class="line"><span class="comment">##    [2]     chr7 26564119-26564500      *</span></span><br><span class="line"><span class="comment">##    [3]     chr7 26585667-26586158      *</span></span><br><span class="line"><span class="comment">##    [4]     chr7 26591772-26593309      *</span></span><br><span class="line"><span class="comment">##    [5]     chr7 26594192-26594570      *</span></span><br><span class="line"><span class="comment">##    [6]     chr7 26623835-26624150      *</span></span><br><span class="line"><span class="comment">##    [7]     chr7 26659284-26660352      *</span></span><br><span class="line"><span class="comment">##    [8]     chr7 26721294-26721717      *</span></span><br><span class="line"><span class="comment">##    [9]     chr7 26821518-26823297      *</span></span><br><span class="line"><span class="comment">##   [10]     chr7 26991322-26991841      *</span></span><br><span class="line"><span class="comment">##   -------</span></span><br><span class="line"><span class="comment">##   seqinfo: 1 sequence from hg19 genome; no seqlengths</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Annotation track, 标题命名为"CpG"</span></span><br><span class="line">atrack &lt;- AnnotationTrack(cpgIslands, name = <span class="string">"CpG"</span>)</span><br><span class="line">p&lt;-plotTracks(atrack)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOfoR.png" alt="G-1"></p><h2 id="添加基因组坐标">添加基因组坐标</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 基因组坐标</span></span><br><span class="line">gtrack &lt;- GenomeAxisTrack()</span><br><span class="line">plotTracks(<span class="built_in">list</span>(gtrack, atrack))</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOO4F1.png" alt="G-2"></p><h2 id="添加染色体表意文字">添加染色体表意文字</h2><p>要添加染色体表意文字 (<em>ideogram</em>)，我们必须指明有效的 <em>UCSC</em> 基因组（例如：“hg19”）以及染色体名称（例如：“chr7”）</p><blockquote><p>由于该功能从 <em>UCSC</em> 获取数据，因此需要 <em>Internet</em> 连接，这可能需要很长时间。</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># genome : "hg19" </span></span><br><span class="line">gen&lt;-genome(cpgIslands)</span><br><span class="line"><span class="comment"># Chromosme name : "chr7"</span></span><br><span class="line">chr &lt;- <span class="built_in">as.character</span>(unique(seqnames(cpgIslands)))</span><br><span class="line"><span class="comment"># Ideogram track</span></span><br><span class="line">itrack &lt;- IdeogramTrack(genome = gen, chromosome = chr)</span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack))</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOIW6.png" alt="G-3"></p><blockquote><p><strong>表意文字轨迹( <em>ideogram track</em> )</strong> 是所有Gviz轨迹对象中的一个例外，因为它们不像所有其他轨迹那样真正显示在同一坐标系上。<br>取而代之的是，当前的基因组位置在染色体上用一个<strong>红色方框表示</strong>（或者，在本例中，如果宽度太小而无法容纳方框，则用红线表示）。</p></blockquote><h2 id="添加基因模型">添加基因模型</h2><p>我们可以利用现有本地来源的基因模型信息。或者，可以从可用的在线资源之一（如 <em>UCSC</em> 或 <em>ENSEBML</em>）下载此类数据，并且有构造函数来处理这些任务。</p><p>对于这个例子，我们将从存储的 <code>data.frame</code> 加载基因模型数据。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">data(geneModels)</span><br><span class="line">head(geneModels)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">grtrack &lt;- GeneRegionTrack(geneModels, genome = gen,</span><br><span class="line">                           chromosome = chr, name = <span class="string">"Gene Model"</span>)</span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack))</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOO5Jx.png" alt="G-4"></p><h2 id="放大绘图">放大绘图</h2><p>我们经常想<strong>放大或缩小特定的绘图区域</strong>以查看更多细节或获得更广泛的概览。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 from 和 to 参数进行缩放</span></span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack),</span><br><span class="line">           from = <span class="number">26700000</span>, to = <span class="number">26750000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 extend.left 和 extend.right 进行缩放</span></span><br><span class="line"><span class="comment"># 这些参数是相对于当前显示的范围，</span></span><br><span class="line"><span class="comment"># 并且可用于在绘图的一端或两端快速扩展视图。</span></span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack),</span><br><span class="line">           extend.left = <span class="number">0.5</span>, extend.right = <span class="number">500000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除外显子的边界,更好的展示图片</span></span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack),</span><br><span class="line">           extend.left = <span class="number">0.5</span>, extend.right = <span class="number">500000</span>, col = <span class="literal">NULL</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TXG9Ig.png" alt="G-5-6-7"></p><blockquote><p>值为 0.5 时将放大到当前显示范围的一半</p></blockquote><h2 id="添加序列track并放大查看序列">添加序列track并放大查看序列</h2><p>必要的序列信息来自 <strong>BSgenome 包</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">"BiocManager"</span>, quietly = <span class="literal">TRUE</span>))</span><br><span class="line">    install.packages(<span class="string">"BiocManager"</span>)</span><br><span class="line">BiocManager::install(<span class="string">"BSgenome.Hsapiens.UCSC.hg19"</span>)</span><br><span class="line"></span><br><span class="line">library(BSgenome.Hsapiens.UCSC.hg19)</span><br><span class="line">strack &lt;- SequenceTrack(Hsapiens, chromosome = chr)</span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack,</span><br><span class="line">                strack), from = <span class="number">26591822</span>, to = <span class="number">26591852</span>, cex = <span class="number">0.8</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOLeH.png" alt="G-8"></p><h2 id="添加data-track">添加data track</h2><p><strong>DataTrack</strong> 对象本质上是运行长度编码 (Rle) 数字向量或矩阵，我们可以使用它们将各种数字数据添加到我们的基因组坐标图中。</p><p>这些 track 的不同可视化选项可用，包括点图、直方图和盒须图表示。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 出于演示目的，我们可以从随机采样的数据创建一个简单的DataTrack对象</span></span><br><span class="line">set.seed(<span class="number">255</span>)</span><br><span class="line">lim &lt;- <span class="built_in">c</span>(<span class="number">26700000</span>, <span class="number">26750000</span>)</span><br><span class="line">coords &lt;- sort(<span class="built_in">c</span>(lim[<span class="number">1</span>], sample(seq(from = lim[<span class="number">1</span>], </span><br><span class="line">                                    to = lim[<span class="number">2</span>]), <span class="number">99</span>), lim[<span class="number">2</span>]))</span><br><span class="line">dat &lt;- runif(<span class="number">100</span>, <span class="built_in">min</span> = -<span class="number">10</span>, <span class="built_in">max</span> = <span class="number">10</span>)</span><br><span class="line">head(dat)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##data track</span></span><br><span class="line">dtrack &lt;- DataTrack(data = dat, start = coords[-<span class="built_in">length</span>(coords)],</span><br><span class="line">                    end = coords[-<span class="number">1</span>], chromosome = chr, genome = gen,</span><br><span class="line">                    name = <span class="string">"Uniform"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制 data track 图</span></span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack,</span><br><span class="line">                dtrack), from = lim[<span class="number">1</span>], to = lim[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将绘图类型更改为直方图</span></span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack,dtrack),</span><br><span class="line">           from = lim[<span class="number">1</span>], to = lim[<span class="number">2</span>], type = <span class="string">"histogram"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOvFI.png" alt="G-9-10"></p><blockquote><p>这种可视化在显示例如沿染色体的 NGS reads 的覆盖范围时特别有用，或显示来自微阵列实验的映射探针的测量值。</p></blockquote><h1 id="绘图参数">绘图参数</h1><h2 id="设置参数">设置参数</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Annotation of transcript</span></span><br><span class="line"><span class="comment"># 更改面板和标题背景颜色</span></span><br><span class="line">grtrack &lt;- GeneRegionTrack(geneModels, genome = gen,</span><br><span class="line">                           chromosome = chr, name = <span class="string">"Gene Model"</span>, </span><br><span class="line">                           transcriptAnnotation = <span class="string">"symbol"</span>,</span><br><span class="line">                           background.panel = <span class="string">"#dbeeff"</span>,</span><br><span class="line">                           background.title = <span class="string">"darkblue"</span>)</span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack))</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOOwd.png" alt="G-11"></p><h2 id="绘图方向">绘图方向</h2><p>默认情况下，所有轨迹都将以 <strong>5’ -&gt; 3’</strong> 方向绘制。有时实际显示相对于相反链的数据会很有用。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, atrack, grtrack),</span><br><span class="line">           reverseStrand = <span class="literal">TRUE</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOxYt.png" alt="G-12"></p><blockquote><p>数据已绘制在反向链上这也反映在 <strong>GenomeAxis track</strong> 中。</p></blockquote><h1 id="Track-classes">Track classes</h1><p>多个参数可用于更改不同轨道的外观。</p><h2 id="GenomeAxisTrack-的显示参数">GenomeAxisTrack 的显示参数</h2><p>将标签的位置设置为下方，显示 ID，更改颜色</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">axisTrack &lt;- GenomeAxisTrack(<span class="built_in">range</span> = IRanges(start = <span class="built_in">c</span>(<span class="number">2000000</span>,<span class="number">4000000</span>), end = <span class="built_in">c</span>(<span class="number">3000000</span>, <span class="number">7000000</span>), <span class="built_in">names</span> = <span class="built_in">rep</span>(<span class="string">"N-stretch"</span>, <span class="number">2</span>)))</span><br><span class="line">plotTracks(axisTrack, from = <span class="number">1000000</span>, to = <span class="number">9000000</span>, </span><br><span class="line">           labelPos = <span class="string">"below"</span>,showId=<span class="literal">TRUE</span>, col=<span class="string">"#9400D3"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOXTA.png" alt="G-13"></p><h2 id="IdeogramTrack">IdeogramTrack</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Ideogram</span></span><br><span class="line">ideoTrack &lt;- IdeogramTrack(genome = <span class="string">"hg19"</span>, chromosome = <span class="string">"chrX"</span>)</span><br><span class="line">plotTracks(ideoTrack, from = <span class="number">85000000</span>, to = <span class="number">129000000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示染色体条带 ID</span></span><br><span class="line">plotTracks(ideoTrack, from = <span class="number">85000000</span>, to = <span class="number">129000000</span>,</span><br><span class="line">           showId = <span class="literal">FALSE</span>, showBandId = <span class="literal">TRUE</span>, cex.bands = <span class="number">0.4</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOzfP.png" alt="G-14-15"></p><h2 id="DataTrack">DataTrack</h2><p>本质上，它们构成了与特定基因组坐标范围相关联的运行长度编码的数字向量或矩阵。</p><p>单个数据集中可以有多个样本，绘图方法提供了合并样本组信息的工具。</p><p>因此，创建 DataTrack 对象的起点将始终是一组范围，以 IRanges 或 GRanges 对象的形式，或单独作为开始和结束坐标或宽度。第二个成分是长度与范围数相同的数值向量，或具有相同列数的数值矩阵。</p><p><strong>接下来将从作为 Gviz 包的一部分的 GRanges 对象加载我们的示例数据</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">data(twoGroups)</span><br><span class="line">head(twoGroups)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data track 图（ DataTrack 的默认可视化是点图 ）</span></span><br><span class="line"> dTrack &lt;- DataTrack(twoGroups, name = <span class="string">"uniform"</span>)</span><br><span class="line"> plotTracks(dTrack)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOXpSf.png" alt="G-16"></p><h2 id="不同图片类型">不同图片类型</h2><p><strong>可能的绘图类型是：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 点图</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"p"</span>), type=<span class="string">"p"</span>)</span><br><span class="line"><span class="comment"># 线图</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"l"</span>), type=<span class="string">"l"</span>)</span><br><span class="line"><span class="comment"># 线图和点图</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"b"</span>), type=<span class="string">"b"</span>)</span><br><span class="line"><span class="comment"># 平均线图</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"a"</span>), type=<span class="string">"a"</span>)</span><br><span class="line"><span class="comment"># 直方线图</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"h"</span>), type=<span class="string">"h"</span>)</span><br><span class="line"><span class="comment"># 直方图（条宽等于范围）</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"histogram"</span>), type=<span class="string">"histogram"</span>)</span><br><span class="line"><span class="comment"># 'polygon-type' 图</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"polygon"</span>), type=<span class="string">"polygon"</span>)</span><br><span class="line"><span class="comment"># 盒须图</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"boxplot"</span>), type=<span class="string">"boxplot"</span>)</span><br><span class="line"><span class="comment"># 各个值的彩色图像</span></span><br><span class="line">plotTracks(DataTrack(twoGroups, name = <span class="string">"heatmap"</span>), type=<span class="string">"heatmap"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOOTSK.png" alt="G01-09"></p><p><strong>DataTrack 图示例：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将箱线图与平均线和数据网格 (g) 结合起来：</span></span><br><span class="line">plotTracks(dTrack, type = <span class="built_in">c</span>(<span class="string">"boxplot"</span>, <span class="string">"a"</span>, <span class="string">"g"</span>))</span><br><span class="line"><span class="comment"># 热图并显示样品名称</span></span><br><span class="line">plotTracks(dTrack, type = <span class="built_in">c</span>(<span class="string">"heatmap"</span>), showSampleNames = <span class="literal">TRUE</span>,</span><br><span class="line">           cex.sampleNames = <span class="number">0.6</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOXFmQ.png" alt="G-17-18"></p><h2 id="数据分组">数据分组</h2><p>可以使用因子变量将单个样本组合在一起。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">plotTracks(dTrack, groups = <span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"control"</span>, <span class="string">"treated"</span>), each = <span class="number">3</span>),</span><br><span class="line">           type = <span class="built_in">c</span>(<span class="string">"a"</span>, <span class="string">"p"</span>), legend=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 箱形图</span></span><br><span class="line">plotTracks(dTrack, groups = <span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"control"</span>, <span class="string">"treated"</span>), each = <span class="number">3</span>),</span><br><span class="line">           type = <span class="string">"boxplot"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 聚合组, 聚合可以是平均值、中值、极值、总和、最小值和最大值</span></span><br><span class="line">plotTracks(dTrack, groups = <span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"control"</span>, <span class="string">"treated"</span>),each = <span class="number">3</span>),</span><br><span class="line">           type = <span class="built_in">c</span>(<span class="string">"b"</span>), aggregateGroups = <span class="literal">TRUE</span>,</span><br><span class="line">           aggregation = <span class="string">"max"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOXVkn.png" alt="G-19-20-21"></p><h3 id="从文件构建-DataTrack-对象">从文件构建 DataTrack 对象</h3><p><em><strong>DataTrack</strong></em> 类支持最常见的文件类型，如 <em>wig、bigWig、bedGraph</em> 和 <em>bam</em> 文件</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bgFile &lt;- system.file(<span class="string">"extdata/test.bedGraph"</span>, package = <span class="string">"Gviz"</span>)</span><br><span class="line">dTrack2 &lt;- DataTrack(<span class="built_in">range</span> = bgFile, genome = <span class="string">"hg19"</span>,</span><br><span class="line">                     type = <span class="string">"l"</span>, chromosome = <span class="string">"chr19"</span>, name = <span class="string">"bedGraph"</span>)</span><br><span class="line">plotTracks(dTrack2)</span><br></pre></td></tr></tbody></table></figure><blockquote><p>请注意， Gviz 包使用 <strong>rtracklayer 包</strong>中的功能进行大多数文件导入操作</p></blockquote><p>Gviz 包中文件支持来自索引文件的流式传输。<br>在绘图操作期间只需要加载数据的相关部分，因此底层数据文件可能非常大而不会降低性能或导致太大的内存占用。</p><p>我们将在此使用随包提供的小 bam 文件来举例说明此功能。</p><p>bam 文件包含序列与共同参考的比对。DataTrack 中此类数据的最自然表示是仅查看给定位置的对齐覆盖率，并将其编码在单个 <em>elementMetadata</em> 列中。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bamFile &lt;- system.file(<span class="string">"extdata/test.bam"</span>, package = <span class="string">"Gviz"</span>)</span><br><span class="line">dTrack4 &lt;- DataTrack(<span class="built_in">range</span> = bamFile, genome = <span class="string">"hg19"</span>,</span><br><span class="line">                     type = <span class="string">"l"</span>, name = <span class="string">"Coverage"</span>, window = -<span class="number">1</span>, chromosome = <span class="string">"chr1"</span>)</span><br><span class="line">plotTracks(dTrack4, from = <span class="number">189990000</span>, to = <span class="number">190000000</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOX9l8.png" alt="G-22"></p><h2 id="AnnotationTrack">AnnotationTrack</h2><p>本质上，它们由一个或多个基因组范围组成，如果需要，可以将这些范围分组为复合注释元素。</p><p>必要的构建块是范围坐标、染色体和基因组标识符。</p><p>信息可以以单独的函数参数的形式传递给函数，如 IRanges、GRanges 或 data.frame 对象。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aTrack &lt;- AnnotationTrack(start = <span class="built_in">c</span>(<span class="number">10</span>, <span class="number">40</span>, <span class="number">120</span>),</span><br><span class="line">                          width = <span class="number">15</span>, chromosome = <span class="string">"chrX"</span>, strand = <span class="built_in">c</span>(<span class="string">"+"</span>,<span class="string">"*"</span>, <span class="string">"-"</span>),</span><br><span class="line">                          id = <span class="built_in">c</span>(<span class="string">"Huey"</span>, <span class="string">"Dewey"</span>, <span class="string">"Louie"</span>),</span><br><span class="line">                          genome = <span class="string">"hg19"</span>, name = <span class="string">"foo"</span>)</span><br><span class="line">plotTracks(aTrack)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOXC6S.png" alt="G-23"></p><h3 id="从文件构建-AnnotationTrack-对象">从文件构建 AnnotationTrack 对象</h3><p>默认的导入函数从 bam 文件中读取所有序列比对的坐标。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Annotation track</span></span><br><span class="line">aTrack2 &lt;- AnnotationTrack(<span class="built_in">range</span> = bamFile, genome = <span class="string">"hg19"</span>,</span><br><span class="line">                           name = <span class="string">"Reads"</span>, chromosome = <span class="string">"chr1"</span>)</span><br><span class="line">plotTracks(aTrack2, from = <span class="number">189995000</span>, to = <span class="number">190000000</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOXkwj.png" alt="G-24"></p><p>我们现在可以同时绘制 bam 文件的 DataTrack 和 AnnotationTrack 表示，以证明基础数据确实相同。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plotTracks(<span class="built_in">list</span>(dTrack4, aTrack2), from = <span class="number">189990000</span>,</span><br><span class="line">           to = <span class="number">190000000</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/04/TOXATs.png" alt="G-25"></p><h2 id="GeneRegionTrack">GeneRegionTrack</h2><p><strong>GeneRegionTrack</strong> 原则上与 <strong>AnnotationTrack</strong> 非常相似。</p><p>唯一的区别是它们更以基因/转录本为中心。我们需要传递track中每个注释特征的开始和结束位置（或宽度），并为每个项目提供外显子、转录本和基因标识符，这些标识符将用于创建转录本分组。</p><blockquote><p>一个有点特殊的情况是直接从 <em>TranscriptDb</em> 之一构建 <em>GeneRegionTrack</em>，下面将更详细地介绍该选项。</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data(geneModels)</span><br><span class="line">grtrack &lt;- GeneRegionTrack(geneModels, genome = gen,</span><br><span class="line">                           chromosome = chr, name = <span class="string">"foo"</span>, </span><br><span class="line">                           transcriptAnnotation = <span class="string">"symbol"</span>)</span><br></pre></td></tr></tbody></table></figure><h3 id="从-fTranscriptDbsx-构建-GeneRegionTrack-对象">从 <em>fTranscriptDbsx</em> 构建 <em>GeneRegionTrack</em> 对象</h3><p><strong>GenomicFeatures 包</strong>提供了一个框架，可以从在线资源下载基因模型信息并将其本地存储在 <em>SQLite</em> 数据库中。</p><p>从 <em>TranscriptDb</em> 构建 <em>GeneRegionTracks</em> 的一个好处是我们获得了关于转录本编码和非编码区域的额外信息，即 5’ 和 3’ UTR 以及 CDS 区域的坐标。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">library(GenomicFeatures)</span><br><span class="line">samplefile &lt;- system.file(<span class="string">"extdata"</span>, <span class="string">"UCSC_knownGene_sample.sqlite"</span>,</span><br><span class="line">    package = <span class="string">"GenomicFeatures"</span>)</span><br><span class="line">txdb &lt;- loadDb(samplefile)</span><br><span class="line">txTr &lt;- GeneRegionTrack(txdb, chromosome = <span class="string">"chr6"</span>, start = <span class="number">300000</span>, end = <span class="number">350000</span>)</span><br><span class="line"><span class="comment">#feature(txTr)</span></span><br><span class="line">plotTracks(txTr)</span><br></pre></td></tr></tbody></table></figure><h2 id="BiomartGeneRegionTrack"><em><strong>BiomartGeneRegionTrack</strong></em></h2><p><em><strong>BiomartGeneRegionTrack</strong></em> ，提供到 <em>ENSEMBL Biomart</em> 服务的直接接口。</p><p>我们只需输入基因组、染色体以及该染色体上的开始和结束位置，构造函数 <em>BiomartGeneRegionTrack</em> 将自动联系 <em>ENSEMBL</em>，获取必要的信息并动态构建基因模型。</p><blockquote><p>需要互联网连接才能工作，并且根据使用情况和网络流量，联系 <em>Biomart</em> 可能需要大量时间。</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">biomTrack &lt;- BiomartGeneRegionTrack(genome = <span class="string">"hg19"</span>,</span><br><span class="line">                                    chromosome = chr, start = <span class="number">20000000</span>, end = <span class="number">21000000</span>,</span><br><span class="line">                                    name = <span class="string">"ENSEMBL"</span>)</span><br><span class="line">plotTracks(biomTrack, col.line = <span class="literal">NULL</span>, col = <span class="literal">NULL</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8VED.png" alt="G-26"></p><h2 id="Sequence-Track">Sequence Track</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">library(BSgenome.Hsapiens.UCSC.hg19)</span><br><span class="line">sTrack &lt;- SequenceTrack(Hsapiens)</span><br><span class="line"><span class="comment">#sequence track : add 5'-&gt;3'</span></span><br><span class="line">plotTracks(sTrack, chromosome = <span class="number">1</span>, from = <span class="number">20000</span>,to = <span class="number">20050</span>,</span><br><span class="line">           add53=<span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment">#The complement</span></span><br><span class="line">plotTracks(sTrack, chromosome = <span class="number">1</span>, from = <span class="number">20000</span>,to = <span class="number">20050</span>,</span><br><span class="line">           add53=<span class="literal">TRUE</span>, complement = <span class="literal">TRUE</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8ZUe.png" alt="G-27-28"></p><h2 id="AlignmentsTrack">AlignmentsTrack</h2><p>比对序列 (<em>Aligned sequences</em>) 的图，通常来自下一代测序实验，可能非常有用，例如在目视检查称为 SNP 的有效性时。这些比对通常存储在 BAM 文件中。</p><h3 id="RNA-seq">RNA-seq</h3><p>在本演示中，让我们使用一个小 BAM 文件，其中配对的 NGS reads 已映射到人类 hg19 基因组的提取物。</p><p>数据来自 RNA-Seq 实验，比对是使用 STAR 进行的，允许存在 gaps。</p><p>还从 <em>Biomart</em> 下载了该区域的一些基因注释数据。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">afrom=<span class="number">2960000</span></span><br><span class="line">ato=<span class="number">3160000</span></span><br><span class="line"><span class="comment">#bam file</span></span><br><span class="line">alTrack &lt;- AlignmentsTrack(system.file(package = <span class="string">"Gviz"</span>, <span class="string">"extdata"</span>, <span class="string">"gapped.bam"</span>), isPaired = <span class="literal">TRUE</span>)</span><br><span class="line">bmt &lt;- BiomartGeneRegionTrack(genome = <span class="string">"hg19"</span>, chromosome = <span class="string">"chr12"</span>,</span><br><span class="line">                              start = afrom, end = ato, filter = <span class="built_in">list</span>(with_ox_refseq_mrna = <span class="literal">TRUE</span>),</span><br><span class="line">                              stacking = <span class="string">"dense"</span>)</span><br><span class="line">plotTracks(<span class="built_in">c</span>(bmt, alTrack), from = afrom, to = ato, chromosome = <span class="string">"chr12"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8e4H.png" alt="G-29"></p><blockquote><blockquote><p><strong>上图展示了 track 的总体布局</strong><br><br><strong>在顶部</strong>，我们有一个以柱状图形式显示reads覆盖率信息的面板，<strong>在该面板下方</strong>，是单个 reads 的堆积视图。<br>只有一定空间可用于绘图，此处无法显示整个堆积深度。其余由标题面板中的白色向下箭头表明。<br>我们可以通过使用<code>max.height</code>、<code>min.height</code>或<code>stackHeight</code>显示参数来解决这个问题，这些参数都控制堆叠 reads 的高度或垂直间距。或者，我们可以通过设置 <em>coverageHeight</em> 或 <em>minCoverageHeight</em> 参数来减小覆盖区域的大小。</p></blockquote></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plotTracks(<span class="built_in">c</span>(bmt, alTrack), from = afrom, to = ato,</span><br><span class="line">           chromosome = <span class="string">"chr12"</span>, min.height = <span class="number">0</span>, coverageHeight = <span class="number">0.08</span>,</span><br><span class="line">           minCoverageHeight = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8nCd.png" alt="G-30"></p><p>到目前为止，堆积 (pile-ups) 并不是特别有用，我们可以通过相应地设置类型显示参数来关闭它们。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plotTracks(<span class="built_in">c</span>(alTrack, bmt), from = afrom, to = ato, chromosome = <span class="string">"chr12"</span>, type = <span class="string">"coverage"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8AHO.png" alt="G-31"></p><p>进一步放大以查看堆积部分的详细信息：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plotTracks(<span class="built_in">c</span>(bmt, alTrack), from = afrom + <span class="number">12700</span>,</span><br><span class="line">           to = afrom + <span class="number">15200</span>, chromosome = <span class="string">"chr12"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8u8A.png" alt="G-32"></p><blockquote><p>单个reads的方向由<strong>箭头指示</strong><br>read对由<strong>亮灰色线连接</strong><br>其中的 <em>gaps</em> 由连接的<strong>深灰色线显示</strong><br>在支持透明性的设备上，我们还可以看到一些 reads 实际上是重叠的。</p></blockquote><p>如前所述，我们可以通过在构造函数中设置 <strong>isPaired 参数</strong>来控制数据应该被视为双端数据还是单端数据。</p><p><strong>下面是我们在单端模式下查看同一文件中的数据</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alTrack &lt;- AlignmentsTrack(system.file(package = <span class="string">"Gviz"</span>,</span><br><span class="line">                                       <span class="string">"extdata"</span>, <span class="string">"gapped.bam"</span>), isPaired = <span class="literal">FALSE</span>)</span><br><span class="line">plotTracks(<span class="built_in">c</span>(bmt, alTrack), from = afrom + <span class="number">12700</span>,</span><br><span class="line">           to = afrom + <span class="number">15200</span>, chromosome = <span class="string">"chr12"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8KgI.png" alt="G-33"></p><h3 id="DNA-seq">DNA-seq</h3><p>为了更好地展示 <em>AlignmentsTrack</em> 的序列变异特征，我们将加载不同的数据集，这次来自全基因组 <em>DNA-Seq SNP calling</em>。</p><p>同样，参考基因组是 hg19，并且使用 Bowtie2 进行了比对。</p><p>我们需要指定 <em>AlignmentsTrack</em> 关于参考基因组（<em>sequenceTrack</em>）。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">afrom &lt;- 44945200</span><br><span class="line">ato &lt;- 44947200</span><br><span class="line">alTrack &lt;- AlignmentsTrack(system.file(package = <span class="string">"Gviz"</span>,<span class="string">"extdata"</span>, <span class="string">"snps.bam"</span>), isPaired = <span class="literal">TRUE</span>)</span><br><span class="line">plotTracks(<span class="built_in">c</span>(alTrack, sTrack), chromosome = <span class="string">"chr21"</span>, from = afrom,to = ato)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8Mvt.png" alt="G-34"></p><blockquote><p>不匹配的碱基以叠加直方图的形式显示在堆积部分和覆盖图中的单个read上。</p></blockquote><p>当放大到明显的杂合 SNP 位置之一时，可以揭示更多细节。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 放大</span></span><br><span class="line">plotTracks(<span class="built_in">c</span>(alTrack, sTrack), chromosome = <span class="string">"chr21"</span>, from = <span class="number">44946590</span>, to = <span class="number">44946660</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示单个字母</span></span><br><span class="line">plotTracks(<span class="built_in">c</span>(alTrack, sTrack), chromosome = <span class="string">"chr21"</span>,</span><br><span class="line">           from = <span class="number">44946590</span>, to = <span class="number">44946660</span>, cex = <span class="number">0.5</span>, min.height = <span class="number">8</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8lKP.png" alt="G-35-36"></p><h1 id="Track突出显示和叠加">Track突出显示和叠加</h1><h2 id="突出显示">突出显示</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#highlight</span></span><br><span class="line">ht &lt;- HighlightTrack(trackList = <span class="built_in">list</span>(atrack, grtrack,dtrack),</span><br><span class="line">                     start = <span class="built_in">c</span>(<span class="number">26705000</span>, <span class="number">26720000</span>), width = <span class="number">7000</span>, chromosome = <span class="number">7</span>)</span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, ht), from = lim[<span class="number">1</span>], to = lim[<span class="number">2</span>])</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX81Df.png" alt="G-37"></p><h2 id="叠加">叠加</h2><p>对于某些应用程序，在绘图的同一区域上叠加多个track 是有意义的。</p><p>为了举例，我们将生成第二个 <em>DataTrack</em> 对象并将其与第二章中的现有对象组合。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#create data</span></span><br><span class="line">dat &lt;- runif(<span class="number">100</span>, <span class="built_in">min</span> = -<span class="number">2</span>, <span class="built_in">max</span> = <span class="number">22</span>)</span><br><span class="line">dtrack2 &lt;- DataTrack(data = dat, start = coords[-<span class="built_in">length</span>(coords)],</span><br><span class="line">                     end = coords[-<span class="number">1</span>], chromosome = chr, genome = gen,</span><br><span class="line">                     name = <span class="string">"Uniform2"</span>, groups = factor(<span class="string">"sample 2"</span>,levels = <span class="built_in">c</span>(<span class="string">"sample 1"</span>, <span class="string">"sample 2"</span>)),</span><br><span class="line">                     legend = <span class="literal">TRUE</span>)</span><br><span class="line">displayPars(dtrack) &lt;- <span class="built_in">list</span>(groups = factor(<span class="string">"sample 1"</span>,levels = <span class="built_in">c</span>(<span class="string">"sample 1"</span>, <span class="string">"sample 2"</span>)), legend = <span class="literal">TRUE</span>)</span><br><span class="line">ot &lt;- OverlayTrack(trackList = <span class="built_in">list</span>(dtrack2, dtrack))</span><br><span class="line">ylims &lt;- extendrange(<span class="built_in">range</span>(<span class="built_in">c</span>(values(dtrack), values(dtrack2))))</span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, ot), from = lim[<span class="number">1</span>], to = lim[<span class="number">2</span>], ylim = ylims, type = <span class="built_in">c</span>(<span class="string">"smooth"</span>, <span class="string">"p"</span>))</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX83b8.png" alt="G-38"></p><p>在支持它的设备上，透明度混合 (<em>Alpha blending</em>) 是一个有用的工具，可以从 track 覆盖中梳理出更多信息，至少在比较少量样本时是这样。</p><p>由此产生的透明度有效地消除了过度绘图的问题。以下示例仅在此小插图构建在具有透明度混合支持的系统上时才有效。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">displayPars(dtrack) &lt;- <span class="built_in">list</span>(alpha.title = <span class="number">1</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line">displayPars(dtrack2) &lt;- <span class="built_in">list</span>(alpha.title = <span class="number">1</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line">ot &lt;- OverlayTrack(trackList = <span class="built_in">list</span>(dtrack, dtrack2))</span><br><span class="line">plotTracks(<span class="built_in">list</span>(itrack, gtrack, ot), from = lim[<span class="number">1</span>],</span><br><span class="line">           to = lim[<span class="number">2</span>], ylim = ylims, type = <span class="built_in">c</span>(<span class="string">"hist"</span>), window = <span class="number">30</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2022/01/05/TX8GVS.png" alt="G-39"></p><h3 id="参考">参考</h3><p><em>Gviz <a href="http://www.bioconductor.org/packages/release/bioc/html/Gviz.html">http://www.bioconductor.org/packages/release/bioc/html/Gviz.html</a></em></p><p><em><a href="https://github.com/ivanek/Gviz">https://github.com/ivanek/Gviz</a></em></p><p><em>Hahne, Florian, and Robert Ivanek. 2016. “Statistical Genomics: Methods and Protocols.” In, edited by Ewy Mathé and Sean Davis, 335–51. New York, NY: Springer New York. <a href="https://doi.org/10.1007/978-1-4939-3578-9_16">https://doi.org/10.1007/978-1-4939-3578-9_16</a>.</em></p><p><em>Katz, Yarden, Eric T. Wang, Jacob Silterra, Schraga Schwartz, Bang Wong, Helga Thorvaldsdóttir, James T. Robinson, Jill P. Mesirov, Edoardo M. Airoldi, and Christopher B. Burge. 2015. “Quantitative Visualization of Alternative Exon Expression from Rna-Seq Data.” Bioinformatics. <a href="https://doi.org/10.1093/bioinformatics/btv034">https://doi.org/10.1093/bioinformatics/btv034</a>.</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Gviz包介绍&quot;&gt;Gviz包介绍&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Gviz软件包简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gviz软件包旨在提供一个结构化的可视化框架，以沿着基因组坐标绘制任何类型的数据。它还允许整合来自&lt;em&gt;UCSC&lt;/em&gt;或&lt;em&gt;ENSEMB</summary>
      
    
    
    
    <category term="R语言" scheme="http://lxz9.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="Gviz" scheme="http://lxz9.com/tags/Gviz/"/>
    
  </entry>
  
  <entry>
    <title>R数据可视化｜使用Scatterplot3d包制作3D散点图</title>
    <link href="http://lxz9.com/2021/12/30/Scatterplot3d/"/>
    <id>http://lxz9.com/2021/12/30/Scatterplot3d/</id>
    <published>2021-12-30T15:00:00.000Z</published>
    <updated>2021-12-31T01:58:19.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>R 中有许多包（RGL、car、lattice、scatterplot3d等）用于创建3D 图形。</p><p>本教程介绍了如何使用 R 的 <em><strong>scatterplot3d包</strong></em> 在 3D 空间中生成散点图。</p><p>scaterplot3d 使用起来非常简单，可以通过在已经生成的图形中添加补充点或回归平面来轻松扩展。</p><p>它可以很容易地安装，因为它只需要一个已安装的 R 版本。</p><p><img src="https://s4.ax1x.com/2021/12/30/TWr5z8.gif" alt=""></p><h1 id="安装并加载-scaterplot3d">安装并加载 <em>scaterplot3d</em></h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"scatterplot3d"</span>)</span><br><span class="line">library(<span class="string">"scatterplot3d"</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="准备数据">准备数据</h1><p><em>iris</em> 数据集将被使用进行画图：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data(iris)</span><br><span class="line">head(iris)</span><br></pre></td></tr></tbody></table></figure><blockquote><blockquote><p><em>Iris</em> 也称鸢尾花卉数据集，是一类多重变量分析的数据集。<br>数据集包含150个数据样本，分为3类，每类50个数据，每个数据包含4个属性。<br>可通过花萼长度，花萼宽度，花瓣长度，花瓣宽度4个属性预测鸢尾花卉属于（Setosa，Versicolour，Virginica）三个种类中的哪一类。</p></blockquote></blockquote><h1 id="函数-scatterplot3d">函数 <em>scatterplot3d()</em></h1><p>一个简化的格式是：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scatterplot3d(x, y=<span class="literal">NULL</span>, z=<span class="literal">NULL</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>x, y, z 是要绘制的点的坐标。参数 y 和 z 可以是可选的，具体取决于 x 的结构。</p><p>那么在什么情况下，y 和 z 是可选变量？</p><p>情况1: x是 zvar ~ xvar + yvar 类型的公式。xvar、yvar 和 zvar 用作 x、y 和 z 变量</p><p>情况2: x是一个矩阵，包含至少3列，分别对应于x、y和z变量</p><h1 id="基本-3D-散点图">基本 3D 散点图</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>])</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWsFoR.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 改变点视图的角度</span></span><br><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], angle = <span class="number">60</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWsiw9.png" alt=""></p><h1 id="更改主标题和轴标签">更改主标题和轴标签</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>],</span><br><span class="line">              main=<span class="string">"3D Scatter Plot"</span>,</span><br><span class="line">              xlab = <span class="string">"Sepal Length (cm)"</span>,</span><br><span class="line">              ylab = <span class="string">"Sepal Width (cm)"</span>,</span><br><span class="line">              zlab = <span class="string">"Petal Length (cm)"</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWsPeJ.png" alt=""></p><h1 id="改变点的形状和颜色">改变点的形状和颜色</h1><p>可以使用参数 <em>pch</em> 和 <em>color</em>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color=<span class="string">"steelblue"</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWs9L4.png" alt=""></p><h1 id="按组更改点形状">按组更改点形状</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shapes = <span class="built_in">c</span>(<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>) </span><br><span class="line">shapes &lt;- shapes[<span class="built_in">as.numeric</span>(iris$Species)]</span><br><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = shapes)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWspyF.png" alt=""></p><h1 id="按组更改点颜色">按组更改点颜色</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">colors &lt;- <span class="built_in">c</span>(<span class="string">"#32CD32"</span>, <span class="string">"#0000FF"</span>, <span class="string">"#FF4500"</span>)</span><br><span class="line">colors &lt;- colors[<span class="built_in">as.numeric</span>(iris$Species)]</span><br><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color=colors)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWsSQU.png" alt=""></p><h1 id="更改图形的全局外观">更改图形的全局外观</h1><p>可以使用以下参数：</p><ul><li><em><strong>grid</strong></em> : 一个逻辑值。如果为 TRUE，则在底部绘制网格。</li><li><em><strong>box</strong></em> : 一个逻辑值。如果为 TRUE，则在图片上方周围绘制一个框</li></ul><h2 id="删除周围的框">删除周围的框</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color = colors,</span><br><span class="line">              grid=<span class="literal">TRUE</span>, box=<span class="literal">FALSE</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrvWV.png" alt=""></p><blockquote><blockquote><ul><li><strong>x、y 和 z</strong> 是指定点的 x、y、z 坐标的数值向量。<br> x 可以是一个矩阵或一个包含 3 列对应于 x、y 和 z 坐标的数据框。 <br>在这种情况下，参数 y 和 z 是可选的</li><li><strong>grid</strong> 指定绘制网格的面。 <br>可能的值是“xy”、“xz”或“yz”的组合。 示例：grid = c(“xy”, “yz”)。 <br>默认值为 TRUE 以仅在 xy 平面上添加网格。</li><li><strong>col.grid, lty.grid</strong>: 用于网格的颜色和线型</li></ul></blockquote></blockquote><p><strong>在 <em>scatterplot3d</em> 图形的不同面上添加网格：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 源函数</span></span><br><span class="line">source(<span class="string">'http://www.sthda.com/sthda/RDoc/functions/addgrids3d.r'</span>)</span><br><span class="line"><span class="comment"># 2. 3D散点图</span></span><br><span class="line">scatterplot3d(iris[, <span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, grid=<span class="literal">FALSE</span>, box=<span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 3. 添加网格</span></span><br><span class="line">addgrids3d(iris[, <span class="number">1</span>:<span class="number">3</span>], grid = <span class="built_in">c</span>(<span class="string">"xy"</span>, <span class="string">"xz"</span>, <span class="string">"yz"</span>))</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrxzT.png" alt=""></p><blockquote><p>上图中有一个问题就是网格是在点上绘制的。</p></blockquote><p>在下面的R代码中，我们将使用以下步骤将点放在前景中：</p><ol><li>创建空的 <em><strong>scatterplot3</strong></em> 图形，并将 <strong>scatterplot3d()</strong> 的结果指定给 <em>s3d</em></li><li>函数 <strong>addgrids3d()</strong> 用于添加网格</li><li>最后，函数 <strong>s3d$points3d</strong> 用于在三维散点图上添加点</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 源函数</span></span><br><span class="line">source(<span class="string">'~/hubiC/Documents/R/function/addgrids3d.r'</span>)</span><br><span class="line"><span class="comment"># 2. 使用 pch="" 清空 3D 散点图</span></span><br><span class="line">s3d &lt;- scatterplot3d(iris[, <span class="number">1</span>:<span class="number">3</span>], pch = <span class="string">""</span>, grid=<span class="literal">FALSE</span>, box=<span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 3. 添加网格</span></span><br><span class="line">addgrids3d(iris[, <span class="number">1</span>:<span class="number">3</span>], grid = <span class="built_in">c</span>(<span class="string">"xy"</span>, <span class="string">"xz"</span>, <span class="string">"yz"</span>))</span><br><span class="line"><span class="comment"># 4. 添加点</span></span><br><span class="line">s3d$points3d(iris[, <span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrjJ0.png" alt=""></p><p>函数 <strong>points3d()</strong> 将在下一节中描述。</p><h2 id="添加-bars">添加 bars</h2><p>使用参数 <strong>type=“h”</strong>。这有助于非常清楚地查看点在 <strong>x-y</strong> 上的位置。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, type=<span class="string">"h"</span>, </span><br><span class="line">              color=colors)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrXiq.png" alt=""></p><h1 id="修改-scatterplot3d-输出">修改 <em>scatterplot3d</em> 输出</h1><p><em>scatterplot3d</em> 返回一个函数闭包列表，可用于在现有绘图上添加元素。</p><p>返回的函数是：</p><ul><li><strong>xyz.convert()</strong>: 将 3D 坐标转换为现有 <em>scatterplot3d</em> 的 2D 平行投影。 它可用于向绘图中添加任意元素，例如图例。</li><li><strong>points3d()</strong>：在现有图中添加点或线</li><li><strong>plane3d()</strong>：将平面添加到现有绘图中</li><li><strong>box3d()</strong>：在图周围添加一个框</li></ul><h1 id="添加图例">添加图例</h1><h2 id="使用-xyz-convert-指定图例位置">使用 xyz.convert() 指定图例位置</h2><ol><li>将 <strong>scatterplot3d()</strong> 的结果指定给 <em>s3d</em></li><li>函数 <strong>s3d$xyz.convert()</strong> 用于指定图例的坐标</li><li>函数 <strong>legend()</strong> 用于添加图例</li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s3d &lt;- scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color=colors)</span><br><span class="line">legend(s3d$xyz.convert(<span class="number">7.5</span>, <span class="number">3</span>, <span class="number">4.5</span>), legend = levels(iris$Species),</span><br><span class="line">      col =  <span class="built_in">c</span>(<span class="string">"#32CD32"</span>, <span class="string">"#0000FF"</span>, <span class="string">"#FF4500"</span>), pch = <span class="number">16</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrLon.png" alt=""></p><blockquote><blockquote><p>也可以使用以下关键字指定图例的位置：“bottomright”、“bottom”、“bottomleft”、“left”、“topleft”、“top”、“topright”、“right”和“center”</p></blockquote></blockquote><h2 id="使用关键字指定图例位置">使用关键字指定图例位置</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图例位置修改为 "right"</span></span><br><span class="line">s3d &lt;- scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color=colors)</span><br><span class="line">legend(<span class="string">"right"</span>, legend = levels(iris$Species),</span><br><span class="line">      col =  <span class="built_in">c</span>(<span class="string">"#32CD32"</span>, <span class="string">"#0000FF"</span>, <span class="string">"#FF4500"</span>), pch = <span class="number">16</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrqds.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用参数 inset,其中inset设置值越大，图例越向左偏移</span></span><br><span class="line"></span><br><span class="line">s3d &lt;- scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color=colors)</span><br><span class="line">legend(<span class="string">"right"</span>, legend = levels(iris$Species),</span><br><span class="line">  col = <span class="built_in">c</span>(<span class="string">"#32CD32"</span>, <span class="string">"#0000FF"</span>, <span class="string">"#FF4500"</span>), pch = <span class="number">16</span>, inset = <span class="number">0.1</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrbZj.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图例位置修改为 "bottom"</span></span><br><span class="line">s3d &lt;- scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color=colors)</span><br><span class="line">legend(<span class="string">"bottom"</span>, legend = levels(iris$Species),</span><br><span class="line">      col = <span class="built_in">c</span>(<span class="string">"#32CD32"</span>, <span class="string">"#0000FF"</span>, <span class="string">"#FF4500"</span>), pch = <span class="number">16</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWr7LQ.png" alt=""></p><p>使用关键字来指定图例位置非常简单。但是，有时，某些点和图例框之间或轴和图例框之间存在重叠。</p><p><strong>那么有什么解决方案可以避免这种重叠吗？</strong></p><p>当然，对于函数 <strong>Legend()</strong>，有多种使用以下参数组合的<strong>解决方案</strong>：</p><ul><li><strong>bty = “n”</strong> ：删除图例周围的框。 在这种情况下，图例的背景颜色变得透明，重叠点变得可见</li><li><strong>bg = “transparent”</strong> ：将图例框的背景颜色更改为透明颜色（仅当 bty != “n” 时才有可能）</li><li><strong>inset</strong> ：修改图边距和图例框之间的距离</li><li><strong>horiz</strong> ：一个逻辑值； 如果为 TRUE，则水平而不是垂直设置图例</li><li><strong>xpd</strong> ：逻辑值； 如果为 TRUE，则它允许将图例项绘制在绘图之外</li></ul><h2 id="自定义图例位置">自定义图例位置</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义点形状</span></span><br><span class="line">s3d &lt;- scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = shapes)</span><br><span class="line">legend(<span class="string">"bottom"</span>, legend = levels(iris$Species),</span><br><span class="line">       pch = <span class="built_in">c</span>(<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>), </span><br><span class="line">      inset = -<span class="number">0.25</span>, xpd = <span class="literal">TRUE</span>, horiz = <span class="literal">TRUE</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWr4Rf.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义颜色</span></span><br><span class="line">colors &lt;- <span class="built_in">c</span>(<span class="string">"#ADD8E6"</span>, <span class="string">"#FFA07A"</span>, <span class="string">"#8470FF"</span>)</span><br><span class="line">colors &lt;- colors[<span class="built_in">as.numeric</span>(iris$Species)]</span><br><span class="line">s3d &lt;- scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = shapes, color=colors)</span><br><span class="line">legend(<span class="string">"bottom"</span>, legend = levels(iris$Species),</span><br><span class="line">      col =  <span class="built_in">c</span>(<span class="string">"#ADD8E6"</span>, <span class="string">"#FFA07A"</span>, <span class="string">"#8470FF"</span>), pch = <span class="number">16</span>, </span><br><span class="line">      inset = -<span class="number">0.25</span>, xpd = <span class="literal">TRUE</span>, horiz = <span class="literal">TRUE</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrfit.png" alt=""></p><blockquote><p>在上面的 R 代码中，可以使用参数 inset、xpd 和 horiz 来查看对图例框外观的影响。</p></blockquote><h2 id="添加点标签">添加点标签</h2><p>函数 <strong>text()</strong> 的用法如下：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scatterplot3d(iris[,<span class="number">1</span>:<span class="number">3</span>], pch = <span class="number">16</span>, color=colors)</span><br><span class="line">text(s3d$xyz.convert(iris[, <span class="number">1</span>:<span class="number">3</span>]), labels = rownames(iris),</span><br><span class="line">     cex= <span class="number">0.7</span>, col = <span class="string">"black"</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWroQS.png" alt=""></p><h2 id="添加回归平面和补充点">添加回归平面和补充点</h2><ol><li>将 <strong>scatterplot3d()</strong> 的结果赋值给 <em>s3d</em></li><li>线性模型计算如下：lm(zvar ~ xvar + yvar)。 假设：zvar 取决于 xvar 和 yvar</li><li>函数 <strong>s3d$plane3d()</strong> 用于添加回归平面</li><li>使用函数 <strong>s3d$points3d()</strong> 添加补充点</li></ol><p>将使用数据集：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data(trees)</span><br><span class="line">head(trees)</span><br><span class="line"><span class="comment"># 该数据集提供了黑樱桃树的周长、高度和体积的测量值。</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><strong>带有回归平面的 3D 散点图：</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3D scatter plot</span></span><br><span class="line">s3d &lt;- scatterplot3d(trees, type = <span class="string">"h"</span>, color = <span class="string">"blue"</span>,</span><br><span class="line">    angle=<span class="number">45</span>, pch = <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 添加回归平面</span></span><br><span class="line">my.lm &lt;- lm(trees$Volume ~ trees$Girth + trees$Height)</span><br><span class="line">s3d$plane3d(my.lm)</span><br><span class="line"><span class="comment"># 添加补充点</span></span><br><span class="line">s3d$points3d(seq(<span class="number">10</span>, <span class="number">20</span>, <span class="number">2</span>), seq(<span class="number">85</span>, <span class="number">60</span>, -<span class="number">5</span>), seq(<span class="number">60</span>, <span class="number">10</span>, -<span class="number">10</span>),</span><br><span class="line">    col = <span class="string">"red"</span>, type = <span class="string">"h"</span>, pch = <span class="number">8</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/30/TWrhJP.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;R 中有许多包（RGL、car、lattice、scatterplot3d等）用于创建3D 图形。&lt;/p&gt;
&lt;p&gt;本教程介绍了如何使用 R 的 &lt;em&gt;&lt;strong&gt;scatterplot3d包&lt;/strong&gt;&lt;/em&gt; 在 3D</summary>
      
    
    
    
    <category term="R语言" scheme="http://lxz9.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>使用最长公共子序列算法进行序列比对</title>
    <link href="http://lxz9.com/2021/12/24/LCS/"/>
    <id>http://lxz9.com/2021/12/24/LCS/</id>
    <published>2021-12-24T15:00:00.000Z</published>
    <updated>2021-12-24T15:05:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>在分子生物学中，DNA 和蛋白质可以表示为字母序列。</p><p>DNA 序列由 A、T、G、C 组成，代表核苷碱基(nucleobases) 腺嘌呤、胸腺嘧啶、鸟嘌呤和胞嘧啶。</p><p>蛋白质由 20 个不同的字母组成，表示 20 种不同的氨基酸。</p><p>比较来自同一生物体或来自不同生物体的两个序列，称为 <strong>序列比较 (<em>Sequence comparison</em>)</strong>，是分子生物学中的一项重要任务。</p><p>它有助于为许多生物学问题提供解决方案，例如：</p><ol><li>预测蛋白质的结构和功能</li><li>推断物种的进化历史和相关性</li><li>定位基因/蛋白质中的常见子序列以识别常见基序，</li><li>作为 DNA 测序的基因组组装中的一个子问题</li></ol><p>为了进行序列比较，我们首先进行 <strong>序列比对(<em>sequence alignment</em>)</strong>。</p><h1 id="什么是序列比对？">什么是序列比对？</h1><p>序列比对是将一个序列置于另一个序列之上以识别相似字符或子串之间的对应关系的一种方式。</p><p>它可以在脱氧核糖核酸 (DNA)、核糖核酸 (RNA) 或蛋白质序列上进行。</p><p>来自不同生物体的序列可能具有不同的大小。对齐需要在序列的任意位置插入空格，以便两者具有相同的大小。</p><p>在序列的开头或结尾插入“空格”或“间隙”。</p><p>让我们考虑一个例子。 假设我们有以下两个 DNA 序列 <code>GACGGATTAG</code> 和 <code>GATCGGAATAG</code>。</p><p>这两个序列之间的一种可能比对如下所示</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GA-CGGATTAG</span><br><span class="line">|| |||| |||</span><br><span class="line">GATCGGAATAG</span><br></pre></td></tr></tbody></table></figure><p>请注意根据此比对的两个序列的差异。 第二个序列中的额外 T，以及从 T 到 A 的替换。在第一个序列的合适位置添加一个“空格”以对齐序列。</p><h1 id="比对类型">比对类型</h1><p><strong>根据我们正在寻找的内容，有两种类型的比对方式：</strong></p><p><strong>全局比对( <em>Global alignmen</em> )</strong>：<br><br>沿序列的整个长度将查询序列与目标序列对齐。 全局比对是跨越两个查询序列全长的全局优化过程。</p><p><strong>局部比对( <em>Local alignment</em> )</strong>：<br><br>将查询序列的子串与目标序列的子串对齐，即找到两个序列之间相似度高的局部区域。</p><p><strong>根据被比对的序列数量，也有两种比对方式：</strong></p><p><strong>双序列比对（ <em>pairwise alignment</em> ）</strong>：<br>涉及两个序列，查询和与之对齐的目标。</p><p><strong>多序列比对（ <em>multiple alignment</em> ）</strong>：<br>涉及两个以上序列的比对。</p><h1 id="序列比对的软件工具">序列比对的软件工具</h1><p>定位查询序列与数据库序列的相似区域是生物信息学中的一项具有挑战性的任务。</p><p><a href="https://blast.ncbi.nlm.nih.gov/Blast.cgi">BLAST</a> 和 <a href="https://www.ebi.ac.uk/Tools/sss/fasta/">FASTA</a> 等工具有助于检测生物体之间的相似区域。它涉及使用局部成对比对、详尽的启发式算法和动态规划方法（如 <em>Smith-Waterman</em> 算法）来检测查询序列与数据库序列的相似区域。</p><h1 id="最长公共子序列-LCS-问题">最长公共子序列 (LCS) 问题</h1><p>检测两个或多个序列相似性的一种方法是找到它们的最长公共子序列(<em>Longest common subsequence</em>)。</p><p>两个序列的最长公共子序列 (LCS) 是两个序列共有的具有最大可能长度的子序列。</p><p><strong>举例</strong></p><p>让我们考虑一个例子。 假设我们有以下两个 DNA 序列：<code>TAGTCACG</code> 和 <code>AGACTGTC</code>。</p><p>两个序列的LCS是<code>AGACG</code>，可以从下面的比对中得到。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TAGTCAC-G--</span><br><span class="line"> ||  || |</span><br><span class="line">-AG--ACTGTC</span><br></pre></td></tr></tbody></table></figure><p>还有其他可能的较短长度的公共/共有序列 ( <em>common sequences</em> )，例如 <code>AGCG</code> 或 <code>AGTC</code>。</p><p>尽管通常多个 LCS 是可能的，但对于这个特定示例只有一个 LCS，即这两个序列没有其他长度为 5 的公共子序列。</p><p>LCS 还有助于计算两个序列的相似程度：<strong>LCS 越长，相似性越高。</strong></p><h1 id="LCS算法">LCS算法</h1><p>假设我们有两个长度分别为 m 和 n 的序列 S1 和 S2，其中<br>S1 = a<sub>1</sub> a<sub>2</sub> … a<sub>m</sub> <br> S2 = b<sub>1</sub> b<sub>2</sub> … b<sub>n</sub>。</p><p>我们将构造一个矩阵 A，其中 A<sub>i,j</sub> 表示 a<sub>1</sub> a<sub>2</sub> … a<sub>i</sub> 和 b<sub>1</sub> b<sub>2</sub> … b<sub>j</sub> 的最长公共子序列的长度。</p><p><br><img src="https://s4.ax1x.com/2021/12/24/TNrJXj.png" alt=""></p><blockquote><p>序列 S1 = <code>TAGTCACG</code> 和 S2 = <code>AGACTGTC</code> 的示例矩阵。</p></blockquote><p>序列 S1 垂直写入，S2 水平写入。 将代表行的每个字母与代表列的每个字母进行比较。 我们将逐行、逐列进行。</p><ol><li><p>如果 a<sub>i</sub> = b<sub>j</sub>，那么我们找到了匹配项。 当前匹配的得分为 1，而 A<sub>i-1</sub>,B<sub>j-1</sub> 来自我们已经从子串 a<sub>1</sub> … a<sub>i-1</sub> 和 b<sub>1</sub> … b<sub>j-1</sub> 获得的 LCS 的其余部分。</p></li><li><p>如果 a<sub>i</sub> ≠ b<sub>j</sub>，那么我们有一个不匹配。 在这种情况下，我们需要考虑两种可能性。 LCS a<sub>1</sub> … a<sub>i</sub> 和 b<sub>1</sub> … b<sub>j-1</sub> ，以及 a<sub>1</sub> … a<sub>i-1</sub> 和 b<sub>1</sub> … b<sub>j</sub> 的 LCS。</p></li></ol><p>因此，我们有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>A</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if&nbsp;</mtext><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><msub><mi>b</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo separator="true">,</mo><msub><mi>A</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if&nbsp;</mtext><msub><mi>a</mi><mi>i</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>b</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">A_{i,j} = \begin{cases}A_{i-1,j-1} + 1 &amp;\text{if } a_i = b_j \\ max(A_{i-1,j}, A_{i,j-1}) &amp;\text{if } a_i \neq b_j\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if&nbsp;</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if&nbsp;</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>并且 A<sub>0,0</sub> = A<sub>0,j</sub> = A<sub>i,0</sub> = 0 对于 1 ≤ i ≤ m，1≤ j ≤ n。</p><p>填充 m × n 矩阵 A 需要 O(nm) 次。这种方法称为 <strong>动态规划( <em>dynamic programming</em> )</strong></p><h1 id="Step-by-step-例子">Step by step 例子</h1><p>矩阵逐行、逐列填充。</p><ol><li><p>第一行 R1 和列 C1 填充为零。</p></li><li><p>（<strong>不匹配示例</strong>）将 R2 行中的第一个字母与 C2 列进行比较。在这种情况下，单元格包含“T”和“A”。由于是不匹配，所以从左边或上面取分数，即（R1，C2）和（R2，C1）。由于两个值都是“0”，因此在这种情况下，总分变为 max(0, 0) = 0。</p></li><li><p>我们继续填充 R2 的其余部分。</p></li><li><p>（<strong>匹配示例</strong>）当 R3 与 C2 进行比较时，两个单元格都包含“A”。由于这是一场比赛，因此得分为 1 + 对角线上方和左侧的得分，即 (R2, C1)，在这种情况下为“0”。所以总分变为1。</p></li><li><p>我们继续填充 R3 的其余部分。</p></li><li><p>（<strong>匹配示例</strong>） 类似地，当 R4 与 C3 进行比较时，它再次匹配。这次的分数是 1 + (R3, C2) 的分数，即 1。因此，总分变为 2。</p></li><li><p>整个矩阵就是这样填充的。最终分数由 Am,n = 5 给出。</p></li></ol><p><br><img src="https://s4.ax1x.com/2021/12/24/TNrJXj.png" alt=""></p><blockquote><p>序列 S1 = <code>TAGTCACG</code> 和 S2 = <code>AGACTGTC</code> 的示例矩阵。</p></blockquote><h1 id="回溯法-Traceback">回溯法(Traceback)</h1><p>实际的子序列是通过执行回溯推导出来的，即从右下角到左上角向后跟踪。 当长度在所有方向上减少时，序列必须匹配。</p><p>当一个单元格中可能有两个箭头时，可能有多个路径（在下面的框中给出）。</p><p>在这种情况下，可以选择任一路径。</p><p><br><img src="https://s4.ax1x.com/2021/12/24/TNrGcQ.png" alt=""></p><p>对角边的位置包含构建 LCS 所需的所有信息，以及知道 LCS 对应的 S1 和 S2 中的位置。</p><p>上例的 LCS 是长度为 5 的 <code>AGACG</code>。</p><p>S1 和 S2 的斜边位置下划线如下：<code>TAGTCACG</code> 和 <code>AGACTGTC</code>。</p><h1 id="打分矩阵-Scoring-Matrices">打分矩阵(Scoring Matrices)</h1><p>在上面的例子中，得到一个不匹配的 0 和一个匹配的 1。</p><p>这可以推广到每个字母表的删除、插入或匹配的不同分数，以及每对可能的不匹配字母表的不同分数。</p><p><br><img src="https://s4.ax1x.com/2021/12/24/TNr81g.png" alt=""></p><blockquote><p>DNA 比对的评分矩阵示例。<br> 矩阵包括匹配和不匹配的分数。<br> 单位矩阵等效于上面讨论的 LCS 算法。</p></blockquote><p>匹配和错配的得分基于碱基（在 DNA 的情况下）和氨基酸（在蛋白质的情况下）的进化重要性。</p><p>例如，根据经验观察到的氨基酸出现的保守性质，赋予氨基酸权重。</p><p><br><img src="https://s4.ax1x.com/2021/12/24/TNrcu9.gif" alt=""></p><blockquote><p>BLOSUM(<strong>BLO</strong>cks <strong>SU</strong>bstitution <strong>M</strong>atrix )矩阵<br>蛋白质序列比对常用的评分矩阵。每一行、每一列是一个氨基酸，一个蛋白质是一个氨基酸序列<br>≥0 的得分代表对应的一对氨基酸为相似氨基酸，&lt;0 的是不相似的氨基酸</p></blockquote><p>BLOSUM 后面跟一个小数字的矩阵适合用于比较相似度低的序列，也就是亲缘关系远的序列；</p><p>BLOSUM 后面跟一个大数字的矩阵适合比较相似度高的序列，也就是亲缘关系近的序列。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;在分子生物学中，DNA 和蛋白质可以表示为字母序列。&lt;/p&gt;
&lt;p&gt;DNA 序列由 A、T、G、C 组成，代表核苷碱基(nucleobases) 腺嘌呤、胸腺嘧啶、鸟嘌呤和胞嘧啶。&lt;/p&gt;
&lt;p&gt;蛋白质由 20 个不同的字母组成，表示</summary>
      
    
    
    
    <category term="生物信息学" scheme="http://lxz9.com/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6/"/>
    
    
    <category term="LCS" scheme="http://lxz9.com/tags/LCS/"/>
    
    <category term="sequence" scheme="http://lxz9.com/tags/sequence/"/>
    
  </entry>
  
  <entry>
    <title>PyPubMed｜一款进行文献检索的工具</title>
    <link href="http://lxz9.com/2021/12/21/pypubmed/"/>
    <id>http://lxz9.com/2021/12/21/pypubmed/</id>
    <published>2021-12-21T03:00:00.000Z</published>
    <updated>2021-12-21T07:33:10.143Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面">写在前面</h1><p>其实这个工具在年初的时候使用过，最近翻看自己以前的笔记时候又看到了。</p><p>我觉得这款工具是很不错的文献检索工具，具体的操作以及参数也比较简单。</p><p>搜索指定关键词就可以查到相关的文献名称、摘要(<em>CN/EN</em>)以及<em>DOI</em>号等信息。</p><p>对于了解相关领域/关键词的文献还是很有帮助。</p><p><a href="https://github.com/suqingdong/pypubmed">工具开发作者：苏庆东</a></p><h1 id="安装-PyPubMed">安装 <em>PyPubMed</em></h1><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 要求Python环境 Python3.6+ </span></span><br><span class="line">pip3 isntall pypubmed</span><br><span class="line"></span><br><span class="line"><span class="comment">#若安装速度太慢报错，可使用镜像来加速，输入下面命令：</span></span><br><span class="line"><span class="comment"># 清华镜像</span></span><br><span class="line">pip3 install pypubmed -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># 豆瓣镜像</span></span><br><span class="line">pip3 install pypubmed -i https://pypi.douban.com/simple</span><br><span class="line"><span class="comment"># 阿里云镜像</span></span><br><span class="line">pip3 install pypubmed -i https://mirrors.aliyun.com/pypi/simple</span><br></pre></td></tr></tbody></table></figure><p>安装后，测试一下安装是否成功，输入下方命令行：</p><p><code>pypubmed</code></p><p>出现如下提示，表示安装成功：</p><p><img src="https://s4.ax1x.com/2021/12/20/TuCcLT.png" alt=""></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前版本：</span></span><br><span class="line">pypubmed --version </span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 pypubmed 到最新版本：</span></span><br><span class="line">pip3 install -U pypubmed </span><br></pre></td></tr></tbody></table></figure><h1 id="添加-API-KEY-参数">添加&nbsp;<em>API_KEY</em>&nbsp;参数</h1><p>为了提高访问频次限制，首次使用推荐添加 <em>API_KEY</em> 参数。</p><p><img src="https://s4.ax1x.com/2021/12/20/TuCyQ0.png" alt=""></p><p><em>API_KEY</em> 生成方法：注册 <em>NCBI</em> 账号并登录，然后访问下方链接，点击生成你的<em>API_KEY</em>。</p><p><a href="https://www.ncbi.nlm.nih.gov/account/settings/#accountSettingsApiKeyManagement">链接</a>：<br><a href="https://www.ncbi.nlm.nih.gov/account/settings/#accountSettingsApiKeyManagement">https://www.ncbi.nlm.nih.gov/account/settings/#accountSettingsApiKeyManagement</a></p><p><strong>输入命令：</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pypubmed -k YOUR_API_KEY search -h</span><br><span class="line"><span class="comment"># -k 参数只需首次使用时添加。</span></span><br></pre></td></tr></tbody></table></figure><h1 id="文献检索功能">文献检索功能</h1><h3 id="关键词-PMID-检索">关键词/ PMID 检索</h3><p>首次使用，可先输入使用帮助命令行</p><p><code>pypubmed -h</code></p><p><img src="https://s4.ax1x.com/2021/12/20/TuC6yV.png" alt=""></p><p>查看常用命令和使用说明。<br>这里介绍几个常用命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pypubmed search</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">-min, --min-factor FLOAT  <span class="comment"># 可限定要检索的文献的最小影响因子。</span></span><br><span class="line">-l, --<span class="built_in">limit</span> INTEGER  <span class="comment"># 可限制输出文献个数（重点提示：建议每次检索，一定要根据需求进行NCBI关键词检索结果测试，获取最佳关键词并输出文献个数限制，一次性输出太多（eg上万条）会导致运行时间太长等问题出现）。</span></span><br><span class="line">-o, --outfile TEXT  <span class="comment"># 可指定输出结果的文件名称，默认的是 pubmed.xlsx。</span></span><br><span class="line">-c, --cache  <span class="comment"># 翻译时，运行太慢，或中断，可将翻译好的结果存储到缓存文件中。</span></span><br><span class="line">-cit, --cited  <span class="comment"># 获取引用信息</span></span><br><span class="line">-n, --no-translate  <span class="comment"># 不翻译摘要</span></span><br></pre></td></tr></tbody></table></figure><h3 id="查询示例">查询示例</h3><p>需要检索标题或摘要中包含关键词 genome 和 assembly，并输出前5个文章，指定输出文件名：genome_assembly.xlsx。</p><p>我们可以先使用PubMed高级检索功能，得到字段：</p><p><code>genome[Title/Abstract] AND assembly[Title/Abstract]</code></p><p>然后输入如下命令即可：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pypubmed search "genome[Title/Abstract]&nbsp;AND assembly[Title/Abstract]" -l 10 -min 10&nbsp;-o&nbsp;genome_assembly.xlsx</span><br><span class="line"># 搜索10篇影响因子为10分以上，且关键词为genome以及assembly的文献输出到 genome_assembly.xlsx</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/20/TuC5WR.gif" alt=""></p><h1 id="高级检索">高级检索</h1><p>输入下面命令行：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pypubmed advance-search</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/20/TuChFJ.gif" alt=""></p><p>从上面动图可看出有51种方式进行检索可以同时选择多个检索内容</p><p>如，想要检索基因组组装方面的文献，按提示进行选择：</p><p><img src="https://s4.ax1x.com/2021/12/20/TuC2eU.png" alt=""></p><p>最终得到的检索字段如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query box now: ("genome"[Title/Abstract]) AND ("assembly"[Title/Abstract])</span><br></pre></td></tr></tbody></table></figure><p>得到的检索文献数量如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">final query box: ("genome"[Title/Abstract]) AND ("assembly"[Title/Abstract])</span><br><span class="line">count:17123</span><br><span class="line">query:"genome"[Title/Abstract] AND "assembly"[Title/Abstract]</span><br><span class="line">detail:"genome"[Title/Abstract]:448474, "assembly"[Title/Abstract]:200656</span><br></pre></td></tr></tbody></table></figure><p>如果需要下载的话，可继续后续操作，但在文献数量较多时，不建议用这种方法下载，更推荐使用前述方法。</p><p><img src="https://s4.ax1x.com/2021/12/20/TuCRwF.png" alt=""></p><h1 id="文献引用格式批量生成">文献引用格式批量生成</h1><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pypubmed citations -h</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/20/TuCWo4.png" alt=""></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">  -m, --manual                 使用手动引用，默认使用ncbi</span><br><span class="line">  -f, --fmt [ama|mla|apa|nlm]  引用的格式</span><br><span class="line">  -o, --outfile TEXT           输出文件名[stdout]</span><br></pre></td></tr></tbody></table></figure><p><strong>查询示例：</strong></p><p>导出2个 PMID 的参考文献引用格式(<strong>在前面xlsx文件输出的第一列</strong>)：34914854、34914839，输入如下命令即可：</p><p><code>pypubmed citations 34914854&nbsp;34914839&nbsp;-f apa </code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;写在前面&quot;&gt;写在前面&lt;/h1&gt;
&lt;p&gt;其实这个工具在年初的时候使用过，最近翻看自己以前的笔记时候又看到了。&lt;/p&gt;
&lt;p&gt;我觉得这款工具是很不错的文献检索工具，具体的操作以及参数也比较简单。&lt;/p&gt;
&lt;p&gt;搜索指定关键词就可以查到相关的文献名称、摘要(&lt;em&gt;CN</summary>
      
    
    
    
    <category term="文献" scheme="http://lxz9.com/categories/%E6%96%87%E7%8C%AE/"/>
    
    
    <category term="PyPubMed" scheme="http://lxz9.com/tags/PyPubMed/"/>
    
  </entry>
  
  <entry>
    <title>保守序列的生物学意义｜用 K-mers 寻找保守序列</title>
    <link href="http://lxz9.com/2021/12/15/Conserved_Sequences/"/>
    <id>http://lxz9.com/2021/12/15/Conserved_Sequences/</id>
    <published>2021-12-15T10:00:00.000Z</published>
    <updated>2021-12-15T02:10:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>在这篇文章中，我们将介绍<strong>保守序列的概念</strong>，并描述它们的<strong>生物学意义</strong>。</p><p>然后，我们将看到如何将寻找保守序列的问题<strong>简化为</strong>在给定序列中找到最常见 <em>K-mer</em> 的问题，并进一步修改该问题以处理不匹配，从而使我们的问题在生物学上更合理。</p><p>最后，我们将看到一个简单的算法来解决不匹配 <em>K-mer</em> 的问题。</p><h1 id="保守序列">保守序列</h1><p>在进化生物学和遗传学中，<strong>保守序列</strong>是指代代发生在不同或相同物种中的相同或相似的 <em>DNA</em> 或 <em>RNA</em> 或氨基酸（蛋白质）序列。这些序列的组成变化很小，有时甚至几代都没有变化。</p><p>以下示例显示了跨物种的序列保守实际上是什么样的：</p><p><img src="https://s4.ax1x.com/2021/12/14/ovJ3an.png" alt=""></p><p>在这张图片中，我们可以看到哺乳动物组蛋白的氨基酸序列及其保守区域。</p><p><strong>灰色</strong>表示的那些在所有物种中都是保守的，<br><strong>白色</strong>的差距往往随着不同物种的变化而变化。</p><h2 id="保守序列的常见例子">保守序列的常见例子</h2><ul><li><p>在基因组中多处发现保守的翻译和转录相关序列</p></li><li><p>发现核糖体中的某些 RNA 成分在不同物种中高度保守</p></li><li><p>发现 tmRNA 在多种细菌物种中是保守的</p></li><li><p>其他例子，如 TATA（重复区域）和 <a href="https://baike.baidu.com/item/%E5%90%8C%E6%BA%90%E5%BC%82%E5%9E%8B%E7%9B%92/55842759">同源异型盒</a> (<em>homeoboxes</em>)（参与调节多种物种的胚胎发育）。</p></li></ul><p><strong>NCBI</strong> 提供的保守域数据库拥有关于不同生物体和基因组中保守序列的广泛资源。 它使用蛋白质特异性评分矩阵(<em>PSSMs</em>)来识别保守序列。</p><h2 id="保守序列的类型">保守序列的类型</h2><p><strong>保守序列</strong>(<em>converved sequences</em>)可以分为两大类，<strong>直系同源</strong>和<strong>旁系同源</strong>。</p><p>当跨物种发现相同序列时，保守序列被称为<strong>直系同源</strong></p><p>当同一基因组内几代发现相同序列时，则称为<strong>旁系同源</strong></p><h3 id="直系同源保守序列示例">直系同源保守序列示例</h3><p>一项关于脊椎动物、蠕虫、昆虫和酵母基因组的研究 (<em>PMCID:PMC1182216</em>)</p><p>在 5 种脊椎动物（人、大鼠、小鼠、鸡和河豚）， 2 种隐杆线虫 (<em>Caenorhabditis</em>) 和 7 种酵母菌 (<em>Saccharomyces</em>)的全基因组比对中发现了<strong>保守元件</strong></p><p>发现被分析的保守元件占人类基因组的 3%–8%，而在黑腹果蝇 (37%–53%)、秀丽隐杆线虫 (18%–37%) 和酿酒酵母 (47%–68%)基因组中所占的比例要高得多。</p><h3 id="旁系同源保守序列示例">旁系同源保守序列示例</h3><p>人类血红蛋白基因中的DNA序列在基因组的多个位置与黑猩猩的肌红蛋白基因序列相同。</p><p>我们经常看到核酸或氨基酸序列极度保守的情况，这些被称为<strong>超保守序列(<em>ultra conserved sequences</em>)</strong>。</p><p>例如，脊椎动物中的某些序列已经在差异很大的分类群中被发现。</p><p>在另一种情况下，我们拥有几乎所有生物体的普遍保守序列，例如 <em>GTP结合延伸因子</em>、 <em>rRNA</em> 和 <em>tRNA</em> 等。</p><h2 id="保守序列的意义">保守序列的意义</h2><h3 id="生物学意义">生物学意义</h3><p>在不同基因组中发现的保守序列可以是<strong>编码序列</strong>或<strong>非编码序列</strong>。</p><p><strong>编码序列</strong>，氨基酸和核酸通常是保守的，以保留某种蛋白质的结构和功能。</p><p>这些序列经历最小的变化。当发生变化时，它们通常会用一种在生物化学上相似的氨基酸或核酸来代替。</p><p>类似地，其他与 <em>mRNA</em> 相关的核酸序列通常是保守的。</p><p><strong>非编码序列</strong>，如核糖体位点、转录因子、结合位点等，也是保守序列。</p><h3 id="计算意义">计算意义</h3><p><strong>保守序列</strong> 帮助我们找到不同生物和物种之间的同源性（相似性）。</p><p>使用保守序列的数据可以建立系统发育关系和树，并可以找到有效的祖先。</p><p>一个常见的例子是保守序列 <em>16S RNA</em> ，用于重建各种细菌门(<em>Bacterial Phyla</em>)之间的系统发育关系。</p><p><strong>保守序列</strong> 还可用于标记遗传疾病和突变的起源。通过比较具有特定保守序列的基因组，我们可以轻松识别任何存在的异常。</p><h2 id="用-K-mers-寻找保守序列">用 K-mers 寻找保守序列</h2><p>在本节中，我们将看到给定单个 DNA 的一部分，我们如何找到短的保守序列。我们正在寻找的保守序列称为 <em><strong>Regulatory motifs</strong></em></p><p><strong>调控基序(<em>Regulatory motifs</em>)</strong> 通常位于基因上游的短核苷酸序列，是控制基因表达的短 DNA 片段（比如 15-30 个核酸），即基因被转录多少次，从而产生多少相应的蛋白质。</p><p><em><strong>K-mers</strong></em> 是在输入字符串中找到的长度为 K 的子字符串。</p><p>在计算基因组学中，输入字符串表示氨基酸或核酸序列。<br>例如:<br>5-mers 表示长度为 5 的子字符串，<br>7-mers 表示长度为 7 的子字符串。</p><h3 id="最常见的-K-mers-问题">最常见的 K-mers 问题</h3><p>我们将寻找 <em><strong>短保守序列(short conserved sequences)</strong></em> 的问题框定如下：</p><p>给定氨基酸或核酸的输入序列，找出出现频率最高的 <em>K-mer</em>。</p><p>举个例子，我们有以下数据，</p><p><strong>序列</strong>:  <br><code>ACGTTGCATGTCGCATGATGCATGAGAGCT</code></p><p><em><strong>K-mers</strong></em>:  <br>k = 4</p><p><strong>预期结果</strong>:  <br>输入序列中最常出现的 4-mer。</p><p><strong>例子</strong>:  <br>可以使用 <strong>滑窗技术(<em>sliding window technique</em>)</strong> 来找到所有的 <em>K-mers</em>。</p><p>让我们记下所有的 <em>k-mers</em>，</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ACGT | CGTT | GTTG | TTGC | TGCA | GCAT | CATG | ATGT | TGTC </span><br><span class="line">GTCG | TCGC | CGCA | GCAT | CATG | ATGA | TGAT | GATG | ATGC </span><br><span class="line">TGCA | GCAT | CATG | ATGA | TGAG | GAGA | AGAG | GAGC | AGCT </span><br></pre></td></tr></tbody></table></figure><p>在这个例子中，我们看到 4-mers <code>CATG</code> 和 <code>GCAT</code> 是最常出现的 4-mers，它们各出现 3 次。</p><h3 id="允许K-mers中的不匹配">允许K-mers中的不匹配</h3><p>然而，从生物学实验中，我们发现保守序列有可能发生微小的变化。因此，我们需要扩展上述问题来处理不匹配的情况。</p><p>例如，<code>ATCCGAT</code> 和 <code>ATCGGAA</code> 有 2 个不匹配，一个在第 4 位，另一个在第 7 位。</p><p>让我们看看如何定义找到最常见的 k-mers 并允许不匹配的问题。</p><p><strong>序列</strong>:  <br><code>ACGTTGCATGTCGCATGATGCATGAGAGCT</code></p><p><em><strong>K-mers</strong></em>:  <br>K = 4，d = 1</p><p><strong>预期结果</strong>:  <br>最常见的 4-mer，每个 K-mean 允许 1 个不匹配。</p><p><strong>例子</strong>: <br>采用了与上一个问题相同的示例序列。因此，所有可能的 4-mer 的列表不变。它们如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ACGT | CGTT | GTTG | TTGC | TGCA | GCAT | CATG | ATGT | TGTC </span><br><span class="line">GTCG | TCGC | CGCA | GCAT | CATG | ATGA | TGAT | GATG | ATGC </span><br><span class="line">TGCA | GCAT | CATG | ATGA | TGAG | GAGA | AGAG | GAGC | AGCT </span><br></pre></td></tr></tbody></table></figure><p>但是，最终结果会发生变化，因为现在我们必须考虑允许 1 次不匹配的所有可能性。</p><p>如果我们以 <em>GATG</em> 为例，上面的序列中有 5 个 <em>k-mers</em> 与 <em>GATG</em> 匹配，允许一个不匹配，即 G<strong>T</strong>TG、<strong>C</strong>ATG、<strong>C</strong>ATG、GATG 和<strong>C</strong>ATG。</p><p>同样，<em>ATGC</em> 和 <em>ATGT</em> 也有 5 个匹配的 <em>k-mer</em>。</p><p>因此，我们对于允许 1 个不匹配的最常见 k-mer 的结果是 <em>GATG</em>、<em>ATGC</em>（匹配 <strong>T</strong>TGC、ATG<strong>T</strong>、ATG<strong>A</strong>、ATGC、ATG<strong>A</strong>）和 <em>ATGT</em>（匹配 A<strong>C</strong>GT、ATGT、ATG<strong>A</strong>、ATG<strong>C</strong>、ATG<strong>A</strong>）。</p><h2 id="K-mers-问题的分步算法">K-mers 问题的分步算法</h2><p>以下是解决上述问题的简单程序：</p><ul><li>创建原始字符串中所有 <em>K-mers</em> 的列表 <strong>L</strong></li><li>对于原始字符串中的每个 <em>K-mer</em> <strong>X</strong><ul><li>考虑原始字符串中的每个 <em>K-mer</em> <strong>Y</strong><ul><li>计算 <strong>X</strong> 和 <strong>Y</strong> 之间的不匹配数 <strong>m</strong></li><li>如果 <strong>m &lt;= d</strong>，则将 <strong>X</strong> 的分数加 1</li></ul></li></ul></li><li>结果 <strong>=</strong> 得分最高的 <em>K-mer</em> <strong>X</strong></li></ul><p><strong>计算效率</strong><br><br>如果字符串的原始长度为 <strong>L</strong>，则算法进行 <em>L<sup>2</sup>K</em> 计算。</p><blockquote><p>注意: <strong>L</strong> 有时可能非常大，比如数百万甚至数十亿（人类 DNA 包含大约 <em>3-4 billion nucleic acids</em>）。</p></blockquote><p><strong>正确性</strong><br><br>上述算法仅在 <em>K-mer</em> 在DNA序列中至少正确出现一次（没有任何不匹配）时有效。虽然这不是必须的，但实际上通常是这样。</p><p>生物信息学中的许多算法都是如此，因此，算法并不是一直都能给出最佳结果，但在实践中，<em><strong>it works quite well ~~</strong></em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在这篇文章中，我们将介绍&lt;strong&gt;保守序列的概念&lt;/strong&gt;，并描述它们的&lt;strong&gt;生物学意义&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然后，我们将看到如何将寻找保守序列的问题&lt;strong&gt;简化为&lt;/strong&gt;在给定序列中找到最常见 &lt;em&gt;K-mer&lt;/</summary>
      
    
    
    
    <category term="生物信息学" scheme="http://lxz9.com/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6/"/>
    
    
    <category term="Bioinformatics" scheme="http://lxz9.com/tags/Bioinformatics/"/>
    
  </entry>
  
  <entry>
    <title>R语言基础画图教程合集(长文总结)</title>
    <link href="http://lxz9.com/2021/12/14/R/"/>
    <id>http://lxz9.com/2021/12/14/R/</id>
    <published>2021-12-14T10:00:00.000Z</published>
    <updated>2021-12-21T14:32:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>这一部分会简单分享一些R语言画图的小技巧，后续相应的代码以及测试数据文件都已经上传到百度网盘，可以在**公众号(生信技术)**留言回复“ <strong>R语言</strong> ”获取。</p><h1 id="R包安装">R包安装</h1><p>需要安装 ggplot2, qqman, gplots, pheatmap, scales, reshape2, RColorBrewer 和 plotrix（使用 <code>install.packages()</code>, 如 <code>install.packages('ggplot2')</code></p><p>下面是后续需要用到的一些R包，如果需要新下载后面文章会继续介绍。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line">library(qqman)</span><br><span class="line">library(gplots)</span><br><span class="line">library(pheatmap)</span><br><span class="line">library(scales)</span><br><span class="line">library(reshape2)</span><br><span class="line">library(RColorBrewer)</span><br><span class="line">library(plyr)</span><br><span class="line">library(plotrix)</span><br><span class="line">library(ggpubr) <span class="comment">#用于带统计检验的箱线图</span></span><br></pre></td></tr></tbody></table></figure><h1 id="加载数据">加载数据</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Read the input files</span></span><br><span class="line"><span class="comment"># “header=T” means that the data has a title, and sep="\t" is used as the separator</span></span><br><span class="line">data &lt;-read.table(<span class="string">"box_plots_mtcars.txt"</span>,header=<span class="built_in">T</span>,sep=<span class="string">"\t"</span>)</span><br><span class="line"><span class="comment"># The function c(,,) means create the vector type data </span></span><br><span class="line">df &lt;- data[, <span class="built_in">c</span>(<span class="string">"mpg"</span>, <span class="string">"cyl"</span>, <span class="string">"wt"</span>)]</span><br><span class="line"></span><br><span class="line">df2 &lt;-read.table(<span class="string">"histogram_plots.txt"</span>,header=<span class="built_in">T</span>,sep=<span class="string">"\t"</span>)</span><br><span class="line"></span><br><span class="line">df3 &lt;- read.table(<span class="string">"volcano_plots.txt"</span>, header=<span class="built_in">T</span>)</span><br><span class="line"></span><br><span class="line">df4 &lt;- read.table(<span class="string">"manhattan_plots_gwasResults.txt"</span>,header=<span class="built_in">T</span>,sep=<span class="string">"\t"</span>)</span><br><span class="line"></span><br><span class="line">df5 &lt;-read.table(<span class="string">"heatmaps.txt"</span>,header=<span class="built_in">T</span>,sep=<span class="string">"\t"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Covert data into matrix format</span></span><br><span class="line"><span class="comment"># nrow(df5) and ncol(df5) return the number of rows and columns of matrix df5 respectively.</span></span><br><span class="line">dm &lt;- data.matrix(df5[<span class="number">1</span>:nrow(df5),<span class="number">2</span>:ncol(df5)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the row names</span></span><br><span class="line">row.names(dm) &lt;- df5[,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">df6 &lt;- read.table(<span class="string">"ballon_plots_GO.txt"</span>, header=<span class="built_in">T</span>, sep=<span class="string">"\t"</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="保存并查看图片">保存并查看图片</h1><p>如果要保存绘图，使用 <code>pdf()</code> + <code>dev.off()</code> 或 <code>ggsave()</code>。<br>第二个是特定于 ggplot2 包的（即，如果 plot 的代码以 ggplot 开头，那么可以使用第二个）。</p><p>让我们看一个例子：</p><ul><li><code>pdf() + dev.off()</code></li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Begin to plot</span></span><br><span class="line"><span class="comment"># Output as pdf</span></span><br><span class="line">pdf(<span class="string">"1.1.Basic_boxplot.pdf"</span>, height = <span class="number">3</span>, width = <span class="number">3</span>)</span><br><span class="line"><span class="comment"># Mapping the X and Y </span></span><br><span class="line"><span class="comment"># Components are constructed by using "+"</span></span><br><span class="line">ggplot(df, aes(x=cyl, y=mpg))+ </span><br><span class="line"><span class="comment"># draw the boxplot and fill it with gray</span></span><br><span class="line">  geom_boxplot(fill=<span class="string">"gray"</span>)+</span><br><span class="line"><span class="comment"># Use the labs function to set the title and modify x and y</span></span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl"</span>,x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>)+</span><br><span class="line"><span class="comment"># Set the theme style</span></span><br><span class="line">  theme_classic()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save the plot</span></span><br><span class="line">dev.off()</span><br></pre></td></tr></tbody></table></figure><ul><li><code>ggsave()</code></li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Begin to plot</span></span><br><span class="line">p &lt;- ggplot(df, aes(x=cyl, y=mpg)) + </span><br><span class="line">  geom_boxplot(fill=<span class="string">"gray"</span>)+</span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl"</span>,x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>)+</span><br><span class="line">  theme_classic()</span><br><span class="line"><span class="comment"># Sava as pdf</span></span><br><span class="line">ggsave(<span class="string">"1.1.Basic_boxplot.pdf"</span>, plot=p, height = <span class="number">3</span>, width = <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="R包导出高质量可编辑图形">R包导出高质量可编辑图形</h1><p>下面总结了一些输出高清可编辑图片的方式，更好的适用于科研投稿的高质量图片要求</p><ol><li><p>SCI常见格式</p></li><li><p>矢量图和位图</p></li><li><p>ggsave函数(ggplot2包)</p></li><li><p>Cairo包</p></li><li><p>export包</p></li></ol><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#高质量图形的导出</span></span><br><span class="line"><span class="comment">#内置图形导出函数</span></span><br><span class="line">png(<span class="string">'P1.png'</span>,height = <span class="number">1200</span>,width = <span class="number">1200</span>,res=<span class="number">300</span>) <span class="comment">#投稿一般要求res分辨率300以上</span></span><br><span class="line">ggplot(dsamp,aes(carat,price,fill= cut))+</span><br><span class="line">  geom_point(size __3.shane =<span class="number">21.</span> color= <span class="string">'gray30'</span>)+</span><br><span class="line">  theme_test()+</span><br><span class="line">  scale_fill_npg()+</span><br><span class="line">  theme(legend.position =<span class="string">'none'</span>)</span><br><span class="line">dev.off()</span><br><span class="line"></span><br><span class="line"><span class="comment">###ggsave函数</span></span><br><span class="line">ggplot(dsamp,aes(carat,price,fill= cut))+</span><br><span class="line">  geom_point(size = <span class="number">3</span>,shape =<span class="number">21</span>, color =<span class="string">'gray30'</span>)+</span><br><span class="line">  theme_test()+</span><br><span class="line">  scale_fill_npg()+</span><br><span class="line">  theme(legend.position = <span class="string">'none'</span>)</span><br><span class="line">ggsave(<span class="string">'p2.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###cairo包</span></span><br><span class="line">install.packages(<span class="string">'Cairo'</span>)</span><br><span class="line">library(Cairo)</span><br><span class="line">CairoPNG(<span class="string">'P1.png'</span>,height = <span class="number">1200</span>,width = <span class="number">1200</span>,res=<span class="number">300</span>)</span><br><span class="line">ggplot(dsamp,aes(carat,price,fill= cut))+</span><br><span class="line">  geom_point(size = <span class="number">3</span>,shape =<span class="number">21</span>, color =<span class="string">'gray30'</span>)+</span><br><span class="line">  theme_test()+</span><br><span class="line">  scale_fill_npg()+</span><br><span class="line">  theme(legend.position = <span class="string">'none'</span>)</span><br><span class="line">dev.off()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CairoPDF(<span class="string">'p1.pdf'</span>,height=<span class="number">6</span>,width =<span class="number">6</span>)</span><br><span class="line">ggplot(dsamp,aes(carat,price,fill= cut))+</span><br><span class="line">  geom_point(size = <span class="number">3</span>,shape =<span class="number">21</span>, color=<span class="string">'gray30'</span>)+</span><br><span class="line">  theme_test()+</span><br><span class="line">  scale_fill_npg()+</span><br><span class="line">  theme(legend.position = <span class="string">'none'</span>)</span><br><span class="line">dev.off()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###利用rstudio导出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##export包</span></span><br><span class="line">install. packages(<span class="string">'export'</span>)</span><br><span class="line">library(export)</span><br><span class="line">p &lt;- ggplot(dsamp,aes(carat,price,fill= cut))+</span><br><span class="line">  geom_point(size =<span class="number">3</span>,shape =<span class="number">21</span>, color=<span class="string">'gray30'</span>)+</span><br><span class="line">  theme_test()+</span><br><span class="line">  scale_fill_npg()+</span><br><span class="line">  theme(legend. position = <span class="string">'none'</span>)</span><br><span class="line">graph2ppt(p)</span><br></pre></td></tr></tbody></table></figure><h1 id="箱线图">箱线图</h1><h2 id="基本箱线图制作">基本箱线图制作</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; df$cyl &lt;- as.factor(df$cyl)</span><br><span class="line"></span><br><span class="line">&gt; head(df)</span><br><span class="line">                   mpg cyl    wt</span><br><span class="line">Mazda RX4         <span class="number">21.0</span>   <span class="number">6</span> <span class="number">2.620</span></span><br><span class="line">Mazda RX4 Wag     <span class="number">21.0</span>   <span class="number">6</span> <span class="number">2.875</span></span><br><span class="line">Datsun <span class="number">710</span>        <span class="number">22.8</span>   <span class="number">4</span> <span class="number">2.320</span></span><br><span class="line">Hornet <span class="number">4</span> Drive    <span class="number">21.4</span>   <span class="number">6</span> <span class="number">3.215</span></span><br><span class="line">Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span> <span class="number">3.440</span></span><br><span class="line">Valiant           <span class="number">18.1</span>   <span class="number">6</span> <span class="number">3.460</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df, aes(x=cyl, y=mpg)) + </span><br><span class="line">  geom_boxplot(fill=<span class="string">"gray"</span>)+</span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl(Test data)"</span>,x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>)+</span><br><span class="line">  theme_classic()</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p1.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/oho0S0.png" alt=""></p><h2 id="按组更改连续颜色">按组更改连续颜色</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df, aes(x=cyl, y=mpg, fill=cyl)) + </span><br><span class="line">  geom_boxplot()+</span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl (Test data)"</span>,x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>) +</span><br><span class="line">  scale_fill_brewer(palette=<span class="string">"Blues"</span>) + </span><br><span class="line">  theme_bw()</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p2.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohoaYn.png" alt=""></p><h2 id="分组箱线图">分组箱线图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Read the data table</span></span><br><span class="line">data=read.csv(<span class="string">"boxplot_example.csv"</span>)</span><br><span class="line"><span class="comment">###################</span></span><br><span class="line"><span class="comment">#I.Prepare the data</span></span><br><span class="line"><span class="comment">#1.Normalize the data, etc</span></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">12</span>:<span class="number">17</span>){</span><br><span class="line">    data[,i]=<span class="built_in">log</span>(data[,i]+<span class="number">1e-3</span>) <span class="comment"># log some expression values</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">9</span>:<span class="number">17</span>) {</span><br><span class="line">    maxValue=<span class="built_in">max</span>(data[,i])  <span class="comment">#scale the data into 0-1</span></span><br><span class="line">    minValue=<span class="built_in">min</span>(data[,i])</span><br><span class="line">    <span class="built_in">range</span>=maxValue-minValue</span><br><span class="line">    data[,i]=(data[,i]-minValue)/<span class="built_in">range</span></span><br><span class="line">}</span><br><span class="line">data$X8.Identity=data$X8.Identity/<span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.Make the new matrix for boxplot: cleaning the data table</span></span><br><span class="line">library(<span class="string">"reshape"</span>)</span><br><span class="line">m=melt(data[,<span class="built_in">c</span>(<span class="number">2</span>,<span class="number">7</span>:<span class="number">12</span>,<span class="number">14</span>:<span class="number">17</span>)], id=<span class="number">1</span>)<span class="comment"># remove some columns not to show and reshape the matrix into 3 columns for boxplot drawing in bwplot</span></span><br><span class="line">colnames(m)=<span class="built_in">c</span>(<span class="string">"Type"</span>,<span class="string">"Feature"</span>,<span class="string">"Normalized_Value"</span>)  <span class="comment">#define the new column names</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.Clean the names of each type and each feature</span></span><br><span class="line"><span class="comment">#Merge sub-types of different elements</span></span><br><span class="line">m[,<span class="number">1</span>]=sub (<span class="string">"ncRNA_selected"</span>,<span class="string">"RNAI"</span>, m[,<span class="number">1</span>])</span><br><span class="line">m[,<span class="number">1</span>]=sub (<span class="string">"ncRNA_3019"</span>,<span class="string">"RNAII"</span>, m[,<span class="number">1</span>])</span><br><span class="line">m[,<span class="number">1</span>]=sub (<span class="string">"exon_CCDS"</span>,<span class="string">"CDS"</span>, m[,<span class="number">1</span>])</span><br><span class="line">m[,<span class="number">1</span>]=sub (<span class="string">"five_prime_UTR"</span>,<span class="string">"UTR"</span>, m[,<span class="number">1</span>])</span><br><span class="line">m[,<span class="number">1</span>]=sub (<span class="string">"three_prime_UTR"</span>,<span class="string">"UTR"</span>, m[,<span class="number">1</span>])</span><br><span class="line">m[,<span class="number">1</span>]=sub (<span class="string">"ancestral_repeat"</span>,<span class="string">"AP"</span>, m[,<span class="number">1</span>])</span><br><span class="line"><span class="comment">#Rename the feature</span></span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X7.GC'</span>,<span class="string">'01.GC Content'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X8.Identity'</span>,<span class="string">'02.DNA Conservation'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X9.z_score'</span>,<span class="string">'03.RNA Struc. Free Energy'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X10.SCI'</span>,<span class="string">'04.RNA Struc. Cons.'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X11.tblastx_score'</span>,<span class="string">'05.Protein Conservation'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X12.polyA_RNAseq_MAX'</span>,<span class="string">'06.PolyA+ RNA-seq'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X14.small_RNAseq_MAX'</span>,<span class="string">'07.Small RNA-seq'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X15.Array_totalRNA_MAX'</span>,<span class="string">'08.Total RNA Array'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X16.Array_polyA_MAX'</span>,<span class="string">'09.PolyA+ RNA Array'</span>,m[,<span class="number">2</span>])</span><br><span class="line">m[,<span class="number">2</span>]=sub(<span class="string">'X17.Array_nonpolyA_MAX'</span>,<span class="string">'10.PolyA- RNA Array'</span>,m[,<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line"><span class="comment">#Making Boxplot</span></span><br><span class="line">library(<span class="string">"lattice"</span>)</span><br><span class="line">png(<span class="string">"p3.png"</span>,width=<span class="number">1500</span>,height=<span class="number">500</span>) <span class="comment"># pdf is recommended for most cases, or png for figure with huge amount of data points</span></span><br><span class="line"><span class="comment">#pdf("p3.pdf") </span></span><br><span class="line">attach(m)</span><br><span class="line">bwplot(Normalized_Value ~ Type|Feature,fill=<span class="built_in">c</span>(<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"yellow"</span>,<span class="string">"blue"</span>,<span class="string">"light blue"</span>),layout=<span class="built_in">c</span>(<span class="number">10</span>,<span class="number">1</span>))</span><br><span class="line">dev.off()</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohotoj.png" alt=""></p><h2 id="带统计检验的箱线图">带统计检验的箱线图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">data(iris)</span><br><span class="line">print(levels(iris$Species))</span><br><span class="line">comparisons &lt;- <span class="built_in">list</span>(<span class="built_in">c</span>(<span class="string">"versicolor"</span>,<span class="string">"setosa"</span>),<span class="built_in">c</span>(<span class="string">"virginica"</span>,<span class="string">"versicolor"</span>),<span class="built_in">c</span>(<span class="string">"virginica"</span>,<span class="string">"setosa"</span>))</span><br><span class="line">ggplot(iris,aes(x=Species,y=Sepal.Length,fill=Species))+geom_boxplot(alpha = <span class="number">1</span>, size = <span class="number">1</span>, position = position_dodge(<span class="number">1.1</span>),outlier.size=<span class="number">0</span>,outlier.alpha = <span class="number">0</span>)+</span><br><span class="line">  geom_point(size = <span class="number">1</span>, position = position_jitterdodge(dodge.width=<span class="number">0.3</span>,jitter.width = <span class="number">0.3</span>))+</span><br><span class="line">  scale_fill_brewer(palette=<span class="string">"Blues"</span>) +</span><br><span class="line">  theme_bw()+</span><br><span class="line">  theme(<span class="comment">#legend.position="right",</span></span><br><span class="line">    legend.position=<span class="string">"right"</span>,</span><br><span class="line">    panel.grid=element_blank(),</span><br><span class="line">    panel.border=element_blank(),</span><br><span class="line">    axis.line = element_line(size=<span class="number">1</span>, colour = <span class="string">"black"</span>),</span><br><span class="line">    legend.title = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>,family = <span class="string">"Arial"</span>, size=<span class="number">10</span>),</span><br><span class="line">    legend.text= element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>,family = <span class="string">"Arial"</span>, size=<span class="number">10</span>),</span><br><span class="line">    plot.title = element_text(hjust = <span class="number">0.5</span>,size=<span class="number">10</span>,face=<span class="string">"bold"</span>),</span><br><span class="line">    axis.text.x = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>, size=<span class="number">10</span>,angle = <span class="number">45</span>,hjust = <span class="number">1</span>),</span><br><span class="line">    axis.text.y = element_text(face=<span class="string">"bold"</span>,  color=<span class="string">"black"</span>, size=<span class="number">10</span>),</span><br><span class="line">    axis.title.x = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>, size=<span class="number">10</span>),</span><br><span class="line">    axis.title.y = element_text(face=<span class="string">"bold"</span>,color=<span class="string">"black"</span>, size=<span class="number">10</span>))+</span><br><span class="line">stat_compare_means(comparisons = comparisons,</span><br><span class="line">                   method = <span class="string">"wilcox.test"</span>,</span><br><span class="line">                   method.args = <span class="built_in">list</span>(alternative = <span class="string">"greater"</span>),</span><br><span class="line">                   label = <span class="string">"p.signif"</span></span><br><span class="line">)+labs(x=<span class="string">""</span>,title=<span class="string">"Boxplot and statistical test"</span>, face=<span class="string">"bold"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p4.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohoDyT.png" alt=""></p><h1 id="小提琴图">小提琴图</h1><h2 id="基本小提琴图制作">基本小提琴图制作</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; df$cyl &lt;- as.factor(df$cyl)</span><br><span class="line"></span><br><span class="line">&gt; head(df)</span><br><span class="line">                   mpg cyl    wt</span><br><span class="line">Mazda RX4         <span class="number">21.0</span>   <span class="number">6</span> <span class="number">2.620</span></span><br><span class="line">Mazda RX4 Wag     <span class="number">21.0</span>   <span class="number">6</span> <span class="number">2.875</span></span><br><span class="line">Datsun <span class="number">710</span>        <span class="number">22.8</span>   <span class="number">4</span> <span class="number">2.320</span></span><br><span class="line">Hornet <span class="number">4</span> Drive    <span class="number">21.4</span>   <span class="number">6</span> <span class="number">3.215</span></span><br><span class="line">Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span> <span class="number">3.440</span></span><br><span class="line">Valiant           <span class="number">18.1</span>   <span class="number">6</span> <span class="number">3.460</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df, aes(x=cyl, y=mpg)) +</span><br><span class="line"> geom_violin(trim=<span class="literal">FALSE</span>) +</span><br><span class="line"> labs(title=<span class="string">"Plot of mpg per cyl (Test data)"</span>, x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p5.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohoJeg.png" alt=""></p><h2 id="在小提琴图上添加汇总统计">在小提琴图上添加汇总统计</h2><h3 id="添加中位数和四分位数">添加中位数和四分位数</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df, aes(x=cyl, y=mpg)) + </span><br><span class="line">  geom_violin(trim=<span class="literal">FALSE</span>) +</span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl (Test data)"</span>, x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>) +</span><br><span class="line">  stat_summary(fun.y=mean, geom=<span class="string">"point"</span>, shape=<span class="number">23</span>, size=<span class="number">2</span>, color=<span class="string">"red"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p6.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohoYwQ.png" alt=""></p><p>或者</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> ggplot(df, aes(x=cyl, y=mpg)) + </span><br><span class="line">   geom_violin(trim=<span class="literal">FALSE</span>) +</span><br><span class="line">   labs(title=<span class="string">"Plot of mpg per cyl (Test data)"</span>, x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>) +</span><br><span class="line">   geom_boxplot(width=<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p7.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://imgtu.com/i/oho8OS" alt=""></p><h3 id="添加均值和标准差">添加均值和标准差</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df, aes(x=cyl, y=mpg)) + </span><br><span class="line">  geom_violin(trim=<span class="literal">FALSE</span>) +</span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl (Test data)"</span>, x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>) +</span><br><span class="line">  stat_summary(fun.data=<span class="string">"mean_sdl"</span>, fun.args = <span class="built_in">list</span>(mult = <span class="number">1</span>), geom=<span class="string">"crossbar"</span>, width=<span class="number">0.1</span> )</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p8.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/oho3y8.png" alt=""></p><p>或者</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df, aes(x=cyl, y=mpg)) + </span><br><span class="line">  geom_violin(trim=<span class="literal">FALSE</span>) +</span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl (Test data)"</span>, x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>) +</span><br><span class="line">  stat_summary(fun.data=mean_sdl, fun.args = <span class="built_in">list</span>(mult = <span class="number">1</span>), geom=<span class="string">"pointrange"</span>, color=<span class="string">"red"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p9.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/oho1Qf.png" alt=""></p><h3 id="更改小提琴图填充颜色">更改小提琴图填充颜色</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df, aes(x=cyl, y=mpg, fill=cyl)) + </span><br><span class="line">  geom_violin(trim=<span class="literal">FALSE</span>) +</span><br><span class="line">  geom_boxplot(width=<span class="number">0.1</span>, fill=<span class="string">"white"</span>) +</span><br><span class="line">  labs(title=<span class="string">"Plot of mpg per cyl"</span>, x=<span class="string">"Cyl"</span>, y = <span class="string">"Mpg"</span>) +</span><br><span class="line">  scale_fill_brewer(palette=<span class="string">"Reds"</span>) + </span><br><span class="line">  theme_classic()</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p10.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/oholSP.png" alt=""></p><h1 id="直方图">直方图</h1><p>本R 教程介绍了如何使用 <em><strong>ggplot2</strong></em> 包创建直方图。</p><p>使用函数<code>geom_histogram()</code></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2 &lt;-read.table(<span class="string">"histogram_plots.txt"</span>,header=<span class="built_in">T</span>,sep=<span class="string">"\t"</span>)</span><br><span class="line"><span class="comment"># 测试数据文件可在公众号回复关键词( R语言 )获取</span></span><br></pre></td></tr></tbody></table></figure><h2 id="基础直方图制作">基础直方图制作</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(df2)</span><br><span class="line">  sex weight</span><br><span class="line">1   <span class="built_in">F</span>     <span class="number">49</span></span><br><span class="line">2   <span class="built_in">F</span>     <span class="number">56</span></span><br><span class="line">3   <span class="built_in">F</span>     <span class="number">60</span></span><br><span class="line">4   <span class="built_in">F</span>     <span class="number">43</span></span><br><span class="line">5   <span class="built_in">F</span>     <span class="number">57</span></span><br><span class="line">6   <span class="built_in">F</span>     <span class="number">58</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># 基础直方图</span></span><br><span class="line">ggplot(df2, aes(x=weight)) + geom_histogram()</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p11-1.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 改变bins的宽度</span></span><br><span class="line">ggplot(df2, aes(x=weight)) + </span><br><span class="line">  geom_histogram(binwidth=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p11-2.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 改变颜色</span></span><br><span class="line">ggplot(df2, aes(x=weight)) + </span><br><span class="line">  geom_histogram(color=<span class="string">"black"</span>, fill=<span class="string">"white"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p11-3.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oX94YT.png" alt="p11-1，2，3"></p><h2 id="在直方图上添加平均线和密度图">在直方图上添加平均线和密度图</h2><p>使用函数<code>geom_vline</code>可以为平均值添加一条线。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加平均线</span></span><br><span class="line">ggplot(df2, aes(x=weight)) + </span><br><span class="line">  geom_histogram(binwidth=<span class="number">1</span>, color=<span class="string">"black"</span>, fill=<span class="string">"white"</span>) +</span><br><span class="line">  geom_vline(aes(xintercept=mean(weight)),</span><br><span class="line">            color=<span class="string">"red"</span>, linetype=<span class="string">"dashed"</span>, size=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p12-1.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加密度图</span></span><br><span class="line">ggplot(df2, aes(x=weight)) + </span><br><span class="line"> geom_histogram(aes(y=..density..), colour=<span class="string">"black"</span>, fill=<span class="string">"white"</span>)+</span><br><span class="line"> geom_density(alpha=<span class="number">.2</span>, fill=<span class="string">"#87CEEB"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p12-2.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oX9hkV.png" alt="p12-1,2"></p><h2 id="更改直方图填充颜色和线的类型">更改直方图填充颜色和线的类型</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 改变线的颜色和填充颜色</span></span><br><span class="line">ggplot(df2, aes(x=weight))+</span><br><span class="line">  geom_histogram(color=<span class="string">"darkblue"</span>, fill=<span class="string">"lightblue"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-1.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变线的类型</span></span><br><span class="line"></span><br><span class="line">ggplot(df2, aes(x=weight))+</span><br><span class="line">  geom_histogram(color=<span class="string">"black"</span>, fill=<span class="string">"lightblue"</span>,</span><br><span class="line">                 linetype=<span class="string">"dashed"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-2.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oX9WT0.png" alt="p13-1,2"></p><h2 id="按组更改直方图颜色">按组更改直方图颜色</h2><h3 id="计算每组的平均值：">计算每组的平均值：</h3><p><strong>plyr包</strong>用于计算每组的平均weight：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">library(plyr)</span><br><span class="line">mu &lt;- ddply(df2, <span class="string">"sex"</span>, summarise, grp.mean=mean(weight))</span><br><span class="line">head(mu)</span><br><span class="line"></span><br><span class="line">  sex grp.mean</span><br><span class="line">1   <span class="built_in">F</span>    <span class="number">54.70</span></span><br><span class="line">2   M    <span class="number">65.36</span></span><br></pre></td></tr></tbody></table></figure><h3 id="更改线条颜色">更改线条颜色</h3><p>直方图绘制的线条颜色可以通过变量sex的水平自动控制。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按组更改直方图的线和填充颜色</span></span><br><span class="line">ggplot(df2, aes(x=weight, color=sex)) +</span><br><span class="line">  geom_histogram(fill=<span class="string">"white"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-3.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 重叠直方图</span></span><br><span class="line">ggplot(df2, aes(x=weight, color=sex)) +</span><br><span class="line">  geom_histogram(fill=<span class="string">"white"</span>, alpha=<span class="number">0.5</span>, position=<span class="string">"identity"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-4.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oX9Rwq.png" alt="p13-3,4"></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 交错直方图</span></span><br><span class="line">ggplot(df2, aes(x=weight, color=sex)) +</span><br><span class="line">  geom_histogram(fill=<span class="string">"white"</span>, position=<span class="string">"dodge"</span>)+</span><br><span class="line">  theme(legend.position=<span class="string">"top"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-5.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加平均线</span></span><br><span class="line">p &lt;- ggplot(df2, aes(x=weight, color=sex)) +</span><br><span class="line">  geom_histogram(fill=<span class="string">"white"</span>, position=<span class="string">"dodge"</span>)+</span><br><span class="line">  geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),</span><br><span class="line">             linetype=<span class="string">"dashed"</span>)+</span><br><span class="line">  theme(legend.position=<span class="string">"top"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-6.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oX9WT0.png" alt="p13-5,6"></p><p>也可以使用以下函数手动更改直方图绘制线条颜色：</p><p><code>scale_color_manual()</code> : 使用自定义颜色<br><code>scale_color_brewer()</code>：使用来自 <em>RColorBrewer</em> 包的调色板<br><code>scale_color_grey()</code>：使用灰色调色板</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用自定义调色板</span></span><br><span class="line">p+scale_color_manual(values=<span class="built_in">c</span>(<span class="string">"#87CEEB"</span>, <span class="string">"#9ACD32"</span>, <span class="string">"#F4A460"</span>))</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-7.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用brewer调色板</span></span><br><span class="line">p+scale_color_brewer(palette=<span class="string">"Dark2"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-8.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用灰色</span></span><br><span class="line">p + scale_color_grey() + theme_classic() +</span><br><span class="line">  theme(legend.position=<span class="string">"top"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-9.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oX92mn.png" alt="p13-7,8,9"></p><h3 id="更改填充颜色">更改填充颜色</h3><p>直方图的填充颜色可以由sex自动控制：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按组更改直方图并填充颜色</span></span><br><span class="line">ggplot(df2, aes(x=weight, fill=sex, color=sex)) +</span><br><span class="line">  geom_histogram(position=<span class="string">"identity"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-10.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用半透明填充</span></span><br><span class="line">ggplot(df2, aes(x=weight, fill=sex, color=sex)) +</span><br><span class="line">  geom_histogram(position=<span class="string">"identity"</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p13-11.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oX96yj.png" alt="p13-10,11"></p><h1 id="密度图">密度图</h1><p>本R 教程介绍了如何使用 <strong>ggplot2包</strong> 创建密度图。</p><p>使用函数<code>geom_density()</code></p><h2 id="准备数据">准备数据</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">set.seed(<span class="number">1234</span>)</span><br><span class="line">df &lt;- data.frame(</span><br><span class="line">  sex=factor(<span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"F"</span>, <span class="string">"M"</span>), each=<span class="number">200</span>)),</span><br><span class="line">  weight=<span class="built_in">round</span>(<span class="built_in">c</span>(rnorm(<span class="number">200</span>, mean=<span class="number">55</span>, sd=<span class="number">5</span>),</span><br><span class="line">                 rnorm(<span class="number">200</span>, mean=<span class="number">65</span>, sd=<span class="number">5</span>)))</span><br><span class="line">  )</span><br><span class="line">head(df)</span><br><span class="line"></span><br><span class="line"><span class="comment">##   sex weight</span></span><br><span class="line"><span class="comment">## 1   F     49</span></span><br><span class="line"><span class="comment">## 2   F     56</span></span><br><span class="line"><span class="comment">## 3   F     60</span></span><br><span class="line"><span class="comment">## 4   F     43</span></span><br><span class="line"><span class="comment">## 5   F     57</span></span><br><span class="line"><span class="comment">## 6   F     58</span></span><br></pre></td></tr></tbody></table></figure><h2 id="基本密度图">基本密度图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基本密度图</span></span><br><span class="line">ggplot(df, aes(x=weight)) + </span><br><span class="line">  geom_density()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加平均线</span></span><br><span class="line">ggplot(df, aes(x=weight)) + </span><br><span class="line">  geom_density() + </span><br><span class="line">  geom_vline(aes(xintercept=mean(weight)),</span><br><span class="line">            color=<span class="string">"red"</span>, linetype=<span class="string">"dashed"</span>, size=<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX9dTP.png" alt=""></p><h2 id="更改密度图线类型和颜色">更改密度图线类型和颜色</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 改变密度图线的类型以及填充颜色</span></span><br><span class="line">ggplot(df, aes(x=weight))+</span><br><span class="line">  geom_density(color=<span class="string">"darkblue"</span>, fill=<span class="string">"lightblue"</span>)</span><br><span class="line">ggsave(<span class="string">'m3.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 改变线的类型</span></span><br><span class="line">ggplot(df, aes(x=weight))+</span><br><span class="line">  geom_density(linetype=<span class="string">"dashed"</span>)</span><br><span class="line">ggsave(<span class="string">'m4.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX9awt.png" alt=""></p><h2 id="按组更改密度图颜色">按组更改密度图颜色</h2><h3 id="计算每组的平均值">计算每组的平均值</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">library(plyr)</span><br><span class="line">mean &lt;- ddply(df, <span class="string">"sex"</span>, summarise, grp.mean=mean(weight))</span><br><span class="line">head(mean)</span><br><span class="line"></span><br><span class="line"><span class="comment">##   sex grp.mean</span></span><br><span class="line"><span class="comment">## 1   F    54.70</span></span><br><span class="line"><span class="comment">## 2   M    65.36</span></span><br></pre></td></tr></tbody></table></figure><h3 id="更改线条颜色-2">更改线条颜色</h3><p>密度图线的颜色可以通过 <strong>sex</strong> 自动控制：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据分组改变密度图线的颜色</span></span><br><span class="line">ggplot(df, aes(x=weight, color=sex)) +</span><br><span class="line">  geom_density()</span><br><span class="line">ggsave(<span class="string">'m5.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 添加平均线</span></span><br><span class="line">test &lt;- ggplot(df, aes(x=weight, color=sex)) +</span><br><span class="line">  geom_density()+</span><br><span class="line">  geom_vline(data=mean, aes(xintercept=grp.mean, color=sex),</span><br><span class="line">             linetype=<span class="string">"dashed"</span>)</span><br><span class="line"></span><br><span class="line">test</span><br><span class="line">ggsave(<span class="string">'m6.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX9UeI.png" alt=""></p><p>也可以使用以下函数手动更改密度图线颜色：</p><p><code>scale_color_manual()</code> : 使用自定义颜色<br><br><code>scale_color_brewer()</code>：使用RColorBrewer包的调色板<br><br><code>scale_color_grey()</code>：使用灰色调色板<br></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用自定义颜色</span></span><br><span class="line">test + scale_color_manual(values=<span class="built_in">c</span>(<span class="string">"#1E90FF"</span>, <span class="string">"#FF69B4"</span>))</span><br><span class="line">ggsave(<span class="string">'m7.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用 brewer 调色板</span></span><br><span class="line">test + scale_color_brewer(palette=<span class="string">"Set2"</span>)</span><br><span class="line">ggsave(<span class="string">'m8.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用灰色调色板</span></span><br><span class="line">test + scale_color_grey() + theme_classic()</span><br><span class="line">ggsave(<span class="string">'m9.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX9GSe.png" alt=""></p><h3 id="更改填充颜色-2">更改填充颜色</h3><p>密度图填充颜色可以由 <strong>sex</strong> 自动控制</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据分组改变密度图填充颜色</span></span><br><span class="line">ggplot(df, aes(x=weight, fill=sex)) +</span><br><span class="line">  geom_density()</span><br><span class="line">ggsave(<span class="string">'m10.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用半透明填充</span></span><br><span class="line">test2&lt;-ggplot(df, aes(x=weight, fill=sex)) +</span><br><span class="line">  geom_density(alpha=<span class="number">0.3</span>)</span><br><span class="line">test2</span><br><span class="line">ggsave(<span class="string">'m11.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 添加均值线</span></span><br><span class="line">test2+geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),</span><br><span class="line">             linetype=<span class="string">"dashed"</span>)</span><br><span class="line">ggsave(<span class="string">'m12.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX93WD.png" alt=""></p><p>手动更改密度图填充颜色：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用自定义颜色</span></span><br><span class="line">test2 + scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">"#1E90FF"</span>, <span class="string">"#FF69B4"</span>))</span><br><span class="line">ggsave(<span class="string">'m13.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用 brewer 调色板</span></span><br><span class="line">test2 + scale_fill_brewer(palette=<span class="string">"Set2"</span>)</span><br><span class="line">ggsave(<span class="string">'m14.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 使用灰色调色板</span></span><br><span class="line">test2 + scale_fill_grey() + theme_classic()</span><br><span class="line">ggsave(<span class="string">'m15.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX9JQH.png" alt=""></p><h3 id="更改图例位置">更改图例位置</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">test2 + theme(legend.position=<span class="string">"top"</span>)</span><br><span class="line">ggsave(<span class="string">'m16.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line">test2 + theme(legend.position=<span class="string">"bottom"</span>)</span><br><span class="line">ggsave(<span class="string">'m17.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line">test2 + theme(legend.position=<span class="string">"none"</span>) <span class="comment"># Remove legend</span></span><br><span class="line">ggsave(<span class="string">'m18.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX9tOA.png" alt=""></p><h2 id="结合直方图和密度图">结合直方图和密度图</h2><p>下面是直方图结合密度图的组合图</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 结合直方图和密度图</span></span><br><span class="line">ggplot(df, aes(x=weight)) + </span><br><span class="line"> geom_histogram(aes(y=..density..), colour=<span class="string">"darkblue"</span>, fill=<span class="string">"white"</span>)+</span><br><span class="line"> geom_density(alpha=<span class="number">.2</span>, fill=<span class="string">"#00BFFF"</span>) </span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'m19.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 分组</span></span><br><span class="line">ggplot(df, aes(x=weight, color=sex, fill=sex)) + </span><br><span class="line"> geom_histogram(aes(y=..density..), alpha=<span class="number">0.5</span>, </span><br><span class="line">                position=<span class="string">"identity"</span>)+</span><br><span class="line"> geom_density(alpha=<span class="number">.2</span>) </span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'m20.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://s4.ax1x.com/2021/12/13/oX9Yyd.png" alt=""></p><h1 id="点图">点图</h1><p>本R 教程介绍了如何使用 <strong>ggplot2包</strong> 创建点图。</p><p>使用函数<code>geom_dotplot()</code>。</p><h2 id="准备数据-2">准备数据</h2><p>使用 ToothGrowth数据集：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)</span><br><span class="line">head(ToothGrowth)</span><br><span class="line"></span><br><span class="line"><span class="comment">##    len supp dose</span></span><br><span class="line"><span class="comment">## 1  4.2   VC  0.5</span></span><br><span class="line"><span class="comment">## 2 11.5   VC  0.5</span></span><br><span class="line"><span class="comment">## 3  7.3   VC  0.5</span></span><br><span class="line"><span class="comment">## 4  5.8   VC  0.5</span></span><br><span class="line"><span class="comment">## 5  6.4   VC  0.5</span></span><br><span class="line"><span class="comment">## 6 10.0   VC  0.5</span></span><br></pre></td></tr></tbody></table></figure><h2 id="基本点图">基本点图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># 基本点图</span></span><br><span class="line">p&lt;-ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line">p</span><br><span class="line">ggsave(<span class="string">'d1.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改点大小和堆栈比率</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>,</span><br><span class="line">               stackratio=<span class="number">1.5</span>, dotsize=<span class="number">1.2</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'d2.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 旋转点图</span></span><br><span class="line">p + coord_flip()</span><br><span class="line">ggsave(<span class="string">'d3.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfqMQ.png" alt=""></p><p>自定义选择想要显示的项目，比如只显示 <em>0.5</em> 和 <em>2</em> 的点图结果</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p + scale_x_discrete(limits=<span class="built_in">c</span>(<span class="string">"0.5"</span>, <span class="string">"2"</span>))</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'d4.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfjZn.png" alt=""></p><h2 id="在点图上添加汇总统计">在点图上添加汇总统计</h2><p>函数<code>stat_summary()</code>可用于向点图添加均值/中值点等</p><h3 id="带箱线图和小提琴图的点图">带箱线图和小提琴图的点图</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加基本的箱线图</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">  geom_boxplot()+</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line">ggsave(<span class="string">'d5.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加带V形切迹的箱线图（Notched boxplot）</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">  geom_boxplot(notch = <span class="literal">TRUE</span>)+</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line">ggsave(<span class="string">'d6.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加小提琴图</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">  geom_violin(trim = <span class="literal">FALSE</span>)+</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line">ggsave(<span class="string">'d7.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfHxg.png" alt=""></p><h3 id="添加均值和标准差-2">添加均值和标准差</h3><p>使用函数 <em><strong>mean_sdl</strong></em> 。 <em><strong>mean_sdl</strong></em> 计算平均值加上或减去一个<strong>常数</strong>乘以<strong>标准偏差</strong>。</p><p>在下面的R代码中，常数是使用参数 <em><strong>mult(mult=1)</strong></em> 指定的。默认情况下，<em><strong>mult=2</strong></em> 。</p><p>平均值 +/- SD 可以添加为 <em>crossbar</em> 或 <em>pointrange</em> ：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">p &lt;- ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">    geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p + stat_summary(fun.data=<span class="string">"mean_sdl"</span>, fun.args = <span class="built_in">list</span>(mult=<span class="number">1</span>), </span><br><span class="line">                 geom=<span class="string">"crossbar"</span>, width=<span class="number">0.5</span>)</span><br><span class="line">ggsave(<span class="string">'d8.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">p + stat_summary(fun.data=mean_sdl, fun.args = <span class="built_in">list</span>(mult=<span class="number">1</span>), </span><br><span class="line">                 geom=<span class="string">"pointrange"</span>, color=<span class="string">"red"</span>)</span><br><span class="line">ggsave(<span class="string">'d9.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXf7RS.png" alt=""></p><blockquote><p>还可以定义一个自定义函数来生成如下汇总统计信息。</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成汇总统计数据的函数（平均值和 +/- sd）</span></span><br><span class="line">data_summary &lt;- <span class="keyword">function</span>(x) {</span><br><span class="line">   m &lt;- mean(x)</span><br><span class="line">   ymin &lt;- m-sd(x)</span><br><span class="line">   ymax &lt;- m+sd(x)</span><br><span class="line">   <span class="built_in">return</span>(<span class="built_in">c</span>(y=m,ymin=ymin,ymax=ymax))</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>使用自定义汇总函数：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p + stat_summary(fun.data=data_summary, color=<span class="string">"pink"</span>)</span><br><span class="line">ggsave(<span class="string">'d10.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfOqs.png" alt=""></p><h3 id="按组更改点图颜色">按组更改点图颜色</h3><p>这一步和之前的直方图以及密度图所用的方法是一样的，这里不再赘述了，可以查看我之前的教程内容。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用单一填充颜色</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">    geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>, fill=<span class="string">"#8A2BE2"</span>)</span><br><span class="line">ggsave(<span class="string">'d11.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按组更改点图颜色</span></span><br><span class="line">p&lt;-ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose)) +</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line">p</span><br><span class="line">ggsave(<span class="string">'d12.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfTG8.png" alt=""></p><p>使用以下函数手动更改点图颜色：</p><p><code>scale_fill_manual()</code> : 使用自定义颜色<br><br><code>scale_fill_brewer()</code> ：使用来自RColorBrewer包的调色板<br><br><code>scale_fill_grey()</code> ：使用灰色调色板<br></p><blockquote><p>补充一下 <em>RColorBrewer</em> 包所支持的颜色类型名称</p></blockquote><p><br><img src="https://s4.ax1x.com/2021/12/13/oX4emj.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用自定义颜色</span></span><br><span class="line">p+scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">"#2e2be2"</span>, <span class="string">"#8a2be2"</span>, <span class="string">"#e22bdf"</span>))</span><br><span class="line">ggsave(<span class="string">'d13.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用brewer调色板</span></span><br><span class="line">p+scale_fill_brewer(palette=<span class="string">"Dark2"</span>)</span><br><span class="line">ggsave(<span class="string">'d14.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用灰色调色板</span></span><br><span class="line">p + scale_fill_grey() + theme_classic()</span><br><span class="line">ggsave(<span class="string">'d15.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfoPf.png" alt=""></p><h3 id="更改图例位置-2">更改图例位置</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p + theme(legend.position=<span class="string">"top"</span>)</span><br><span class="line">ggsave(<span class="string">'d16.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line">p + theme(legend.position=<span class="string">"bottom"</span>)</span><br><span class="line">ggsave(<span class="string">'d17.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line">p + theme(legend.position=<span class="string">"none"</span>) <span class="comment"># 删除图例</span></span><br><span class="line">ggsave(<span class="string">'d18.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXf5IP.png" alt=""></p><h3 id="更改图例中项目的顺序">更改图例中项目的顺序</h3><p>函数 <em><strong>scale_x_discrete</strong></em> 可将顺序更改为“2”、“0.5”、“1”：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p + scale_x_discrete(limits=<span class="built_in">c</span>(<span class="string">"2"</span>, <span class="string">"0.5"</span>, <span class="string">"1"</span>))</span><br><span class="line">ggsave(<span class="string">'d19.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfLrj.png" alt=""></p><h2 id="多组点图">多组点图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按组更改点图颜色</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) +</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line">ggsave(<span class="string">'d20.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 更改位置：同一组点图之间的间隔</span></span><br><span class="line">p&lt;-ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) +</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>, </span><br><span class="line">               position=position_dodge(<span class="number">0.6</span>))</span><br><span class="line">p</span><br><span class="line">ggsave(<span class="string">'d21.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfWqA.png" alt=""></p><h3 id="更改点图颜色并添加箱线图：">更改点图颜色并添加箱线图：</h3><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改颜色</span></span><br><span class="line">p+scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">"#8a2be2"</span>, <span class="string">"#dfe22b"</span>))</span><br><span class="line">ggsave(<span class="string">'d22.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 添加箱线图</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) +</span><br><span class="line">  geom_boxplot(fill=<span class="string">"white"</span>)+</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)</span><br><span class="line">ggsave(<span class="string">'d23.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 改变位置</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) +</span><br><span class="line">  geom_boxplot(position=position_dodge(<span class="number">0.8</span>))+</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>, </span><br><span class="line">               position=position_dodge(<span class="number">0.8</span>))</span><br><span class="line">ggsave(<span class="string">'d24.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfhVI.png" alt=""></p><h2 id="自定义点图">自定义点图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础点图</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=dose, y=len)) + </span><br><span class="line">  geom_boxplot()+</span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)+</span><br><span class="line">  labs(title=<span class="string">"Plot of length  by dose"</span>,x=<span class="string">"Dose (mg)"</span>, y = <span class="string">"Length"</span>)+</span><br><span class="line">  theme_classic()</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'d25.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 按组更改颜色</span></span><br><span class="line">dp &lt;-ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose)) + </span><br><span class="line">  geom_dotplot(binaxis=<span class="string">'y'</span>, stackdir=<span class="string">'center'</span>)+</span><br><span class="line">  labs(title=<span class="string">"Plot of length  by dose"</span>,x=<span class="string">"Dose (mg)"</span>, y = <span class="string">"Length"</span>)</span><br><span class="line">dp + theme_classic()</span><br><span class="line">ggsave(<span class="string">'d26.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXfRrd.png" alt=""></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连续颜色</span></span><br><span class="line">dp + scale_fill_brewer(palette=<span class="string">"OrRd"</span>) + theme_classic()</span><br><span class="line">ggsave(<span class="string">'d27.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 离散颜色</span></span><br><span class="line">dp + scale_fill_brewer(palette=<span class="string">"Paired"</span>) + theme_minimal()</span><br><span class="line">ggsave(<span class="string">'d28.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 渐变色</span></span><br><span class="line">dp + scale_fill_brewer(palette=<span class="string">"PuOr"</span>) + theme_minimal()</span><br><span class="line">ggsave(<span class="string">'d29.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/13/oXf4at.png" alt=""></p><h1 id="散点图">散点图</h1><p>本文介绍如何使用<em>ggplot2</em>包创建<strong>散点图</strong>。使用函数·<code>geom_point()</code>。</p><h2 id="准备数据-3">准备数据</h2><p>以下示例中使用了<strong>mtcars数据集</strong></p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将 cyl 列从数值型(numeric)转换为因子变量(factor variable)</span></span><br><span class="line">mtcars$cyl &lt;- as.factor(mtcars$cyl)</span><br><span class="line">head(mtcars)</span><br></pre></td></tr></tbody></table></figure><h2 id="基本散点图">基本散点图</h2><p>使用下面的 R 代码创建简单的散点图。</p><p>可以使用函数<code>geom_point()</code>更改点的颜色、大小和形状，如下所示：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geom_point(size, color, shape)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line"><span class="comment"># 基本散点图</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()</span><br><span class="line">ggsave(<span class="string">'s01.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变点的形状和大小</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) +</span><br><span class="line">  geom_point(size=<span class="number">2</span>, shape=<span class="number">23</span>)</span><br><span class="line">ggsave(<span class="string">'s02.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPV2j.png" alt=""></p><blockquote><p>点的大小可以由连续变量的值控制，如下例所示。</p></blockquote><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 改变点的大小</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + </span><br><span class="line">  geom_point(aes(size=qsec))</span><br><span class="line">ggsave(<span class="string">'s03.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQP8G4.png" alt=""></p><h2 id="在散点图中标记点">在散点图中标记点</h2><p>可以使用函数<code>geom_text()</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) +</span><br><span class="line">  geom_point() + </span><br><span class="line">  geom_text(label=rownames(mtcars))</span><br><span class="line">ggsave(<span class="string">'s04.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPGRJ.png" alt=""></p><h2 id="添加回归线">添加回归线</h2><p>以下函数可用于向散点图添加回归线：</p><p><code>geom_smooth()</code><br><code>stat_smooth()</code><br><br><code>geom_abline()</code></p><p>本节仅介绍<code>geom_smooth()</code>函数。</p><p>一个简化的格式是：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geom_smooth(method=<span class="string">"auto"</span>, se=<span class="literal">TRUE</span>, fullrange=<span class="literal">FALSE</span>, level=<span class="number">0.95</span>)</span><br></pre></td></tr></tbody></table></figure><p><strong>方法</strong></p><p>要使用的平滑方法。可能的值为 <em>lm、glm、gam、loess、rlm</em></p><ul><li><strong>method = “loess”</strong>：这是少量观察的默认值。它计算平滑的局部回归。您可以使用 R 代码 <strong>?loess</strong> 阅读有关loess 的更多信息。</li><li><strong>method =“lm”</strong>：它适合线性模型。请注意，也可以将公式表示为 <strong>formula = y ~ poly(x, 3)</strong> 以指定 3 次多项式。</li><li><strong>se</strong>：逻辑值。如果为 TRUE，则置信区间显示在平滑附近。</li><li><strong>fullrange</strong>：逻辑值。如果为 TRUE，则拟合跨越绘图的整个范围</li><li><strong>level</strong>：要使用的置信区间水平。默认值为 0.95</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加回归线</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + </span><br><span class="line">  geom_point()+</span><br><span class="line">  geom_smooth(method=lm)</span><br><span class="line">ggsave(<span class="string">'s05.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"><span class="comment"># 去除置信区间</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + </span><br><span class="line">  geom_point()+</span><br><span class="line">  geom_smooth(method=lm, se=<span class="literal">FALSE</span>)</span><br><span class="line">ggsave(<span class="string">'s06.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Loess method</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + </span><br><span class="line">  geom_point()+</span><br><span class="line">  geom_smooth()</span><br><span class="line">ggsave(<span class="string">'s07.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPmMn.png" alt=""></p><h2 id="更改点和线的外观">更改点和线的外观</h2><p>下面介绍如何更改：</p><ul><li>回归线的线型和颜色</li><li>置信区间的填充颜色</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改线型和颜色</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + </span><br><span class="line">  geom_point(shape=<span class="number">18</span>, color=<span class="string">"blue"</span>)+</span><br><span class="line">  geom_smooth(method=lm, se=<span class="literal">FALSE</span>, linetype=<span class="string">"dashed"</span>,</span><br><span class="line">             color=<span class="string">"#FF0000"</span>)</span><br><span class="line">ggsave(<span class="string">'s08.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改置信区间填充颜色</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + </span><br><span class="line">  geom_point(shape=<span class="number">18</span>, color=<span class="string">"blue"</span>)+</span><br><span class="line">  geom_smooth(method=lm,  linetype=<span class="string">"dashed"</span>,</span><br><span class="line">             color=<span class="string">"darkred"</span>, fill=<span class="string">"#87CEFA"</span>)</span><br><span class="line">ggsave(<span class="string">'s09.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPZxs.png" alt=""></p><blockquote><p>默认情况下，置信带使用透明颜色。可以通过使用参数alpha来改变：<code>geom_smooth(fill="blue", alpha=1)</code></p></blockquote><h2 id="多组散点图">多组散点图</h2><p>本节介绍如何自动和手动更改点颜色和形状。</p><h3 id="自动更改点颜色-形状-大小">自动更改点颜色/形状/大小</h3><p>在下面的 R 代码中，点的形状、颜色和大小由因子变量cyl的级别控制：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 cyl 的级别更改点形状</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, shape=cyl)) +</span><br><span class="line">  geom_point()</span><br><span class="line">ggsave(<span class="string">'s10.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改点的形状和颜色</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, shape=cyl, color=cyl)) +</span><br><span class="line">  geom_point()</span><br><span class="line">ggsave(<span class="string">'s11.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改点的形状、颜色和大小</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, shape=cyl, color=cyl, size=cyl)) +</span><br><span class="line">  geom_point()</span><br><span class="line">ggsave(<span class="string">'s12.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPnrq.png" alt=""></p><h4 id="添加回归线-2">添加回归线</h4><p>可以按如下方式添加回归线：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加回归线</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl)) +</span><br><span class="line">  geom_point() + </span><br><span class="line">  geom_smooth(method=lm)</span><br><span class="line">ggsave(<span class="string">'s13.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除置信区间,延长回归线</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl)) +</span><br><span class="line">  geom_point() + </span><br><span class="line">  geom_smooth(method=lm, se=<span class="literal">FALSE</span>, fullrange=<span class="literal">TRUE</span>)</span><br><span class="line">ggsave(<span class="string">'s14.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPEGQ.png" alt=""></p><blockquote><p>还可以使用美观的<code>linetype = cyl</code>更改回归线的线型。</p></blockquote><p>置信带的填充颜色可以更改如下：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl)) +</span><br><span class="line">  geom_point() + </span><br><span class="line">  geom_smooth(method=lm, aes(fill=cyl))</span><br><span class="line">ggsave(<span class="string">'s15.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h3 id="手动更改点颜色-形状-大小">手动更改点颜色/形状/大小</h3><p>使用了以下功能：</p><ul><li><code>scale_shape_manual()</code>用于点形状</li><li><code>scale_color_manual()</code>用于点颜色</li><li><code>scale_size_manual()</code>用于点大小</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 手动更改点的形状和颜色</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl)) +</span><br><span class="line">  geom_point() + </span><br><span class="line">  geom_smooth(method=lm, se=<span class="literal">FALSE</span>, fullrange=<span class="literal">TRUE</span>)+</span><br><span class="line">  scale_shape_manual(values=<span class="built_in">c</span>(<span class="number">3</span>, <span class="number">16</span>, <span class="number">17</span>))+ </span><br><span class="line">  scale_color_manual(values=<span class="built_in">c</span>(<span class="string">'#FFA07A'</span>,<span class="string">'#87CEFA'</span>, <span class="string">'#BA55D3'</span>))+</span><br><span class="line">  theme(legend.position=<span class="string">"top"</span>)</span><br><span class="line">ggsave(<span class="string">'s16.png'</span>,height = <span class="number">12</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动更改点的尺寸</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl))+</span><br><span class="line">  geom_point(aes(size=cyl)) + </span><br><span class="line">  geom_smooth(method=lm, se=<span class="literal">FALSE</span>, fullrange=<span class="literal">TRUE</span>)+</span><br><span class="line">  scale_shape_manual(values=<span class="built_in">c</span>(<span class="number">3</span>, <span class="number">16</span>, <span class="number">17</span>))+ </span><br><span class="line">  scale_color_manual(values=<span class="built_in">c</span>(<span class="string">'#FFA07A'</span>,<span class="string">'#87CEFA'</span>, <span class="string">'#BA55D3'</span>))+</span><br><span class="line">  scale_size_manual(values=<span class="built_in">c</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))+</span><br><span class="line">  theme(legend.position=<span class="string">"top"</span>)</span><br><span class="line">ggsave(<span class="string">'s17.png'</span>,height = <span class="number">12</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPMZV.png" alt=""></p><p>也可以使用以下功能手动更改点和线颜色：</p><ul><li><code>scale_color_brewer()</code>：使用来自RColorBrewer包的调色板</li><li><code>scale_color_grey()</code>：使用灰色调色板</li></ul><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">p &lt;- ggplot(mtcars, aes(x=wt, y=mpg, color=cyl, shape=cyl)) +</span><br><span class="line">  geom_point() + </span><br><span class="line">  geom_smooth(method=lm, se=<span class="literal">FALSE</span>, fullrange=<span class="literal">TRUE</span>)+</span><br><span class="line">  theme_classic()</span><br><span class="line"><span class="comment"># Use brewer color palettes</span></span><br><span class="line">p+scale_color_brewer(palette=<span class="string">"Dark2"</span>)</span><br><span class="line">ggsave(<span class="string">'s18.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use grey scale</span></span><br><span class="line">p + scale_color_grey()</span><br><span class="line">ggsave(<span class="string">'s19.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPuq0.png" alt=""></p><h2 id="将联合分布图添加到散点图">将联合分布图添加到散点图</h2><p>可以使用函数<code>geom_rug()</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geom_rug(sides =<span class="string">"bl"</span>)</span><br></pre></td></tr></tbody></table></figure><p><strong>side</strong>：一个字符串，用于控制出现在哪一边。允许的值是一个字符串，其中包含 <em>trbl</em> 中的任何一个，用于顶部、右侧、底部和左侧。</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加联合分布图(marginal rugs)</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) +</span><br><span class="line">  geom_point() + geom_rug()</span><br><span class="line">ggsave(<span class="string">'s20.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改颜色</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg, color=cyl)) +</span><br><span class="line">  geom_point() + geom_rug()</span><br><span class="line">ggsave(<span class="string">'s21.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用可靠的数据添加联合分布图</span></span><br><span class="line">ggplot(faithful, aes(x=eruptions, y=waiting)) +</span><br><span class="line">  geom_point() + geom_rug()</span><br><span class="line">ggsave(<span class="string">'s22.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPQaT.png" alt=""></p><h2 id="具有-2D-密度评估的散点图">具有 2D 密度评估的散点图</h2><p>可以使用函数<code>geom_density_2d()</code>或<code>stat_density_2d()</code>：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 具有二维密度估计的散点图</span></span><br><span class="line">sp &lt;- ggplot(faithful, aes(x=eruptions, y=waiting)) +</span><br><span class="line">  geom_point()</span><br><span class="line">sp + geom_density_2d()</span><br><span class="line">ggsave(<span class="string">'s23.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 渐变色</span></span><br><span class="line">sp + stat_density_2d(aes(fill = ..level..), geom=<span class="string">"polygon"</span>)</span><br><span class="line">ggsave(<span class="string">'s24.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改渐变颜色</span></span><br><span class="line">sp + stat_density_2d(aes(fill = ..level..), geom=<span class="string">"polygon"</span>)+</span><br><span class="line">  scale_fill_gradient(low=<span class="string">"blue"</span>, high=<span class="string">"red"</span>)</span><br><span class="line">ggsave(<span class="string">'s25.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQPlIU.png" alt=""></p><h2 id="带椭圆的散点图">带椭圆的散点图</h2><p>函数<code>stat_ellipse()</code>可以如下使用：</p><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一个椭圆环绕所有点</span></span><br><span class="line">ggplot(faithful, aes(waiting, eruptions))+</span><br><span class="line">  geom_point()+</span><br><span class="line">  stat_ellipse()</span><br><span class="line">ggsave(<span class="string">'s26.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 椭圆分组</span></span><br><span class="line">p &lt;- ggplot(faithful, aes(waiting, eruptions, color = eruptions &gt; <span class="number">3</span>))+</span><br><span class="line">  geom_point()</span><br><span class="line">p + stat_ellipse()</span><br><span class="line">ggsave(<span class="string">'s27.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改椭圆的类型：可能的值为“t”、“norm”、“euclid”</span></span><br><span class="line">p + stat_ellipse(type = <span class="string">"t"</span>)</span><br><span class="line">ggsave(<span class="string">'s28.png'</span>,height = <span class="number">10</span>,width = <span class="number">12</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s4.ax1x.com/2021/12/21/TQP3iF.png" alt=""></p><h1 id="多重相关图">多重相关图</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data(iris)</span><br><span class="line">library(Hmisc)</span><br><span class="line">library(corrplot)</span><br><span class="line">res2 &lt;- rcorr(as.matrix(iris[<span class="built_in">c</span>(<span class="string">"Sepal.Width"</span>,<span class="string">"Petal.Length"</span>,<span class="string">"Petal.Width"</span>)]))</span><br><span class="line">corrplot(corr = res2$r,tl.col=<span class="string">"black"</span>,type=<span class="string">"lower"</span>, order=<span class="string">"original"</span>,tl.pos = <span class="string">"d"</span>,tl.cex=<span class="number">1.0</span>,</span><br><span class="line">         p.mat = res2$P, sig.level = <span class="number">0.05</span>,insig = <span class="string">"blank"</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohIjLF.png" alt=""></p><h1 id="火山图">火山图</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(df3)</span><br><span class="line">     Gene log2FoldChange    pvalue      padj</span><br><span class="line">1    DOK6         <span class="number">0.5100</span> <span class="number">1.861e-08</span> <span class="number">0.0003053</span></span><br><span class="line">2    TBX5        -<span class="number">2.1290</span> <span class="number">5.655e-08</span> <span class="number">0.0004191</span></span><br><span class="line">3 SLC32A1         <span class="number">0.9003</span> <span class="number">7.664e-08</span> <span class="number">0.0004191</span></span><br><span class="line">4  IFITM1        -<span class="number">1.6870</span> <span class="number">3.735e-06</span> <span class="number">0.0068090</span></span><br><span class="line">5   NUP93         <span class="number">0.3659</span> <span class="number">3.373e-06</span> <span class="number">0.0068090</span></span><br><span class="line">6 EMILIN2         <span class="number">1.5340</span> <span class="number">2.976e-06</span> <span class="number">0.0068090</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">df3$threshold &lt;- as.factor(ifelse(df3$padj &lt; <span class="number">0.05</span> &amp; <span class="built_in">abs</span>(df3$log2FoldChange) &gt;=<span class="number">1</span>,ifelse(df3$log2FoldChange &gt; <span class="number">1</span> ,<span class="string">'Up'</span>,<span class="string">'Down'</span>),<span class="string">'Not'</span>))</span><br><span class="line">ggplot(data=df3, aes(x=log2FoldChange, y =-log10(padj), color=threshold,fill=threshold)) +</span><br><span class="line">  scale_color_manual(values=<span class="built_in">c</span>(<span class="string">"blue"</span>, <span class="string">"grey"</span>,<span class="string">"red"</span>))+</span><br><span class="line">  geom_point(size=<span class="number">1</span>) +</span><br><span class="line">  xlim(<span class="built_in">c</span>(-<span class="number">3</span>, <span class="number">3</span>)) +</span><br><span class="line">  theme_bw(base_size = <span class="number">12</span>, base_family = <span class="string">"Times"</span>) +</span><br><span class="line">  geom_vline(xintercept=<span class="built_in">c</span>(-<span class="number">1</span>,<span class="number">1</span>),lty=<span class="number">4</span>,col=<span class="string">"grey"</span>,lwd=<span class="number">0.6</span>)+</span><br><span class="line">  geom_hline(yintercept = -log10(<span class="number">0.05</span>),lty=<span class="number">4</span>,col=<span class="string">"grey"</span>,lwd=<span class="number">0.6</span>)+</span><br><span class="line">  theme(legend.position=<span class="string">"right"</span>,</span><br><span class="line">  panel.grid=element_blank(),</span><br><span class="line">        legend.title = element_blank(),</span><br><span class="line">        legend.text= element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>,family = <span class="string">"Times"</span>, size=<span class="number">8</span>),</span><br><span class="line">        plot.title = element_text(hjust = <span class="number">0.5</span>),</span><br><span class="line">        axis.text.x = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>, size=<span class="number">12</span>),</span><br><span class="line">        axis.text.y = element_text(face=<span class="string">"bold"</span>,  color=<span class="string">"black"</span>, size=<span class="number">12</span>),</span><br><span class="line">        axis.title.x = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>, size=<span class="number">12</span>),</span><br><span class="line">        axis.title.y = element_text(face=<span class="string">"bold"</span>,color=<span class="string">"black"</span>, size=<span class="number">12</span>))+</span><br><span class="line">  labs(x=<span class="string">"log2FoldChange"</span>,y=<span class="string">"-log10 (adjusted p-value)"</span>,title=<span class="string">"Volcano plot of DEG"</span>, face=<span class="string">"bold"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p26.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohIxZ4.png" alt=""></p><h1 id="曼哈顿图">曼哈顿图</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(df4)</span><br><span class="line">  SNP CHR BP         P</span><br><span class="line">1 rs1   <span class="number">1</span>  <span class="number">1</span> <span class="number">0.9148060</span></span><br><span class="line">2 rs2   <span class="number">1</span>  <span class="number">2</span> <span class="number">0.9370754</span></span><br><span class="line">3 rs3   <span class="number">1</span>  <span class="number">3</span> <span class="number">0.2861395</span></span><br><span class="line">4 rs4   <span class="number">1</span>  <span class="number">4</span> <span class="number">0.8304476</span></span><br><span class="line">5 rs5   <span class="number">1</span>  <span class="number">5</span> <span class="number">0.6417455</span></span><br><span class="line">6 rs6   <span class="number">1</span>  <span class="number">6</span> <span class="number">0.5190959</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">manhattan(df4, main = <span class="string">"GWAS results"</span>, ylim = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">8</span>),</span><br><span class="line">    cex = <span class="number">0.5</span>, cex.axis=<span class="number">0.8</span>, col=<span class="built_in">c</span>(<span class="string">"dodgerblue4"</span>,<span class="string">"deepskyblue"</span>),</span><br><span class="line">          <span class="comment">#suggestiveline = F, genomewideline = F, #remove the suggestive and genome-wide significance lines</span></span><br><span class="line">          chrlabs = <span class="built_in">as.character</span>(<span class="built_in">c</span>(<span class="number">1</span>:<span class="number">22</span>)))</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohoSo9.png" alt=""></p><h1 id="热图">热图</h1><h2 id="使用ggplots包heatmap-2-函数绘制热图">使用ggplots包heatmap.2()函数绘制热图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(dm)</span><br><span class="line">      Control1      Tumor2 Control3     Tumor4 Control5     Tumor1 Control2</span><br><span class="line">Gene1 <span class="number">3.646058</span> -<span class="number">0.98990248</span> <span class="number">2.210404</span> -<span class="number">0.2063050</span> <span class="number">2.859744</span>  <span class="number">1.3304284</span> <span class="number">2.690376</span></span><br><span class="line">Gene2 <span class="number">4.271172</span> -<span class="number">1.16217765</span> <span class="number">2.734119</span> -<span class="number">2.4782173</span> <span class="number">3.752013</span>  <span class="number">0.0255639</span> <span class="number">4.471795</span></span><br><span class="line">Gene3 <span class="number">3.530448</span>  <span class="number">1.11451101</span> <span class="number">1.635485</span> -<span class="number">0.4241215</span> <span class="number">3.701427</span>  <span class="number">1.2263312</span> <span class="number">3.588787</span></span><br><span class="line">Gene4 <span class="number">3.061122</span> -<span class="number">1.18791027</span> <span class="number">4.331229</span>  <span class="number">0.8733314</span> <span class="number">2.349352</span>  <span class="number">0.4825479</span> <span class="number">1.854433</span></span><br><span class="line">Gene5 <span class="number">1.956817</span>  <span class="number">0.25431042</span> <span class="number">1.984438</span>  <span class="number">1.2713845</span> <span class="number">1.685917</span>  <span class="number">1.4554739</span> <span class="number">2.445830</span></span><br><span class="line">Gene6 <span class="number">2.000919</span>  <span class="number">0.06015972</span> <span class="number">4.480901</span>  <span class="number">0.9780682</span> <span class="number">3.063475</span> -<span class="number">0.4222994</span> <span class="number">3.585366</span></span><br><span class="line">          Tumor3 Control4     Tumor5</span><br><span class="line">Gene1  <span class="number">0.6135943</span> <span class="number">2.470413</span>  <span class="number">0.5158246</span></span><br><span class="line">Gene2  <span class="number">1.6516242</span> <span class="number">2.735508</span> -<span class="number">0.5837784</span></span><br><span class="line">Gene3 -<span class="number">0.6349656</span> <span class="number">1.999844</span>  <span class="number">0.1417349</span></span><br><span class="line">Gene4 -<span class="number">1.2237684</span> <span class="number">1.154377</span> -<span class="number">0.9301261</span></span><br><span class="line">Gene5  <span class="number">0.3316909</span> <span class="number">2.715163</span>  <span class="number">0.1866400</span></span><br><span class="line">Gene6  <span class="number">1.0689000</span> <span class="number">2.563422</span>  <span class="number">1.3465830</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##为了以红色绘制高表达式值，在热图中使用colorRampPalette而不是heatmap.2</span></span><br><span class="line"><span class="comment">##colorRampPalette是RColorBrewer包中的一个函数</span></span><br><span class="line">cr &lt;- colorRampPalette(<span class="built_in">c</span>(<span class="string">"red"</span>,<span class="string">"white"</span>,<span class="string">"blue"</span>))</span><br><span class="line">heatmap.2(dm,</span><br><span class="line">          scale=<span class="string">"row"</span>, <span class="comment">#scale the rows, scale each gene's expression value</span></span><br><span class="line">          key=<span class="built_in">T</span>, keysize=<span class="number">1.1</span>, </span><br><span class="line">          cexCol=<span class="number">0.9</span>,cexRow=<span class="number">0.8</span>,</span><br><span class="line">          col=cr(<span class="number">1000</span>),</span><br><span class="line">          ColSideColors=<span class="built_in">c</span>(<span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"red"</span>,<span class="string">"blue"</span>),<span class="number">5</span>)),</span><br><span class="line">          density.info=<span class="string">"none"</span>,trace=<span class="string">"none"</span>,</span><br><span class="line">          <span class="comment">#dendrogram='none', #如果要删除树状图解除此注释</span></span><br><span class="line">          Colv = <span class="built_in">T</span>,Rowv = <span class="built_in">T</span>) <span class="comment">#按行和列进行聚类</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohIXsU.png" alt=""></p><h2 id="使用pheatmap包的pheatmap函数绘制热图">使用pheatmap包的pheatmap函数绘制热图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##add column and row annotations</span></span><br><span class="line">annotation_col = data.frame(CellType = factor(<span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"Control"</span>, <span class="string">"Tumor"</span>), <span class="number">5</span>)), Time = <span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line">rownames(annotation_col) = colnames(dm)</span><br><span class="line">annotation_row = data.frame(GeneClass = factor(<span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"Path1"</span>, <span class="string">"Path2"</span>, <span class="string">"Path3"</span>), <span class="built_in">c</span>(<span class="number">10</span>, <span class="number">4</span>, <span class="number">6</span>))))</span><br><span class="line">rownames(annotation_row) = paste(<span class="string">"Gene"</span>, <span class="number">1</span>:<span class="number">20</span>, sep = <span class="string">""</span>)</span><br><span class="line"><span class="comment">##set colors of each group</span></span><br><span class="line">ann_colors = <span class="built_in">list</span>(Time = <span class="built_in">c</span>(<span class="string">"white"</span>, <span class="string">"springgreen4"</span>), </span><br><span class="line">                  CellType = <span class="built_in">c</span>(Control = <span class="string">"#6B8E23"</span>, Tumor = <span class="string">"#DA70D6"</span>),</span><br><span class="line">                  GeneClass = <span class="built_in">c</span>(Path1 = <span class="string">"#85e5e5"</span>, Path2 = <span class="string">"#afeeee"</span>, Path3 = <span class="string">"#d9f7f7"</span>))</span><br><span class="line"><span class="comment">##draw the heatmap</span></span><br><span class="line">pheatmap(dm, </span><br><span class="line">         cutree_col = <span class="number">2</span>, cutree_row = <span class="number">3</span>, <span class="comment">#break up the heatmap by clusters you define</span></span><br><span class="line">         cluster_rows=<span class="literal">TRUE</span>, show_rownames=<span class="literal">TRUE</span>, cluster_cols=<span class="literal">TRUE</span>, <span class="comment">#by default, pheatmap clusters by both row and col</span></span><br><span class="line">         annotation_col = annotation_col, annotation_row = annotation_row,annotation_colors = ann_colors)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/o490pT.jpg" alt=""></p><h2 id="使用ggplot2软件包绘制热图">使用ggplot2软件包绘制热图</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##9.3.1.cluster by row and col</span></span><br><span class="line"><span class="comment">##cluster and re-order rows</span></span><br><span class="line">rowclust = hclust(dist(dm))</span><br><span class="line">reordered = dm[rowclust$order,]</span><br><span class="line"><span class="comment">##cluster and re-order columns</span></span><br><span class="line">colclust = hclust(dist(t(dm)))</span><br><span class="line"><span class="comment">##9.3.2.scale each row value in [0,1]</span></span><br><span class="line">dm.reordered = reordered[, colclust$order]</span><br><span class="line">dm.reordered=apply(dm.reordered,<span class="number">1</span>,rescale) <span class="comment">#rescale is a function in the scales package</span></span><br><span class="line">dm.reordered=t(dm.reordered) <span class="comment">#transposed matrix</span></span><br><span class="line"><span class="comment">##9.3.3.save col and row names before changing the matrix format</span></span><br><span class="line">col_name=colnames(dm.reordered) </span><br><span class="line">row_name=rownames(dm.reordered) </span><br><span class="line"><span class="comment">##9.3.4.change data format for geom_title </span></span><br><span class="line">colnames(dm.reordered)=<span class="number">1</span>:ncol(dm.reordered)</span><br><span class="line">rownames(dm.reordered)=<span class="number">1</span>:nrow(dm.reordered)</span><br><span class="line">dm.reordered=melt(dm.reordered) <span class="comment">#melt is a function in the reshape2 package</span></span><br><span class="line">head(dm.reordered)</span><br><span class="line"><span class="comment">##9.3.5.draw the heatmap</span></span><br><span class="line">ggplot(dm.reordered, aes(Var2, Var1)) + </span><br><span class="line">  geom_tile(aes(fill = value), color = <span class="string">"white"</span>) + </span><br><span class="line">  scale_fill_gradient(low = <span class="string">"white"</span>, high = <span class="string">"steelblue"</span>) +</span><br><span class="line">  theme_grey(base_size = <span class="number">6</span>) + </span><br><span class="line">  labs(x = <span class="string">""</span>, y = <span class="string">""</span>) + </span><br><span class="line">  scale_x_continuous(expand = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>),labels=col_name,breaks=<span class="number">1</span>:<span class="built_in">length</span>(col_name)) + </span><br><span class="line">  scale_y_continuous(expand = <span class="built_in">c</span>(<span class="number">0</span>, <span class="number">0</span>),labels=row_name,breaks=<span class="number">1</span>:<span class="built_in">length</span>(row_name))</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p30.png'</span>,height = <span class="number">10</span>,width = <span class="number">15</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohI7in.png" alt=""></p><h1 id="气球图">气球图</h1><h2 id="基础气球图制作">基础气球图制作</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(df6)</span><br><span class="line">                   Biological.process Fold.enrichment X.log10.Pvalue. col</span><br><span class="line">1    Small molecule metabolic process             <span class="number">1.0</span>              <span class="number">16</span>   <span class="number">1</span></span><br><span class="line">2   Single-organism catabolic process             <span class="number">1.5</span>              <span class="number">12</span>   <span class="number">1</span></span><br><span class="line">3           Oxoacid metabolic process             <span class="number">2.0</span>              <span class="number">23</span>   <span class="number">1</span></span><br><span class="line">4 Small molecule biosynthetic process             <span class="number">2.5</span>               <span class="number">6</span>   <span class="number">1</span></span><br><span class="line">5   Carboxylic acid metabolic process             <span class="number">2.7</span>              <span class="number">24</span>   <span class="number">1</span></span><br><span class="line">6      Organic acid metabolic process</span><br></pre></td></tr></tbody></table></figure><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df6, aes(x=Fold.enrichment, y=Biological.process)) +</span><br><span class="line">  geom_point(aes(size = X.log10.Pvalue.)) +</span><br><span class="line">  scale_x_continuous(limits=<span class="built_in">c</span>(<span class="number">0</span>,<span class="number">7</span>),breaks=<span class="number">0</span>:<span class="number">7</span>) +</span><br><span class="line">  scale_size(breaks=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>,<span class="number">25</span>)) +</span><br><span class="line">  theme_light() +</span><br><span class="line">  theme(panel.border=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'black'</span>, size=<span class="number">1</span>),</span><br><span class="line">        plot.title = element_text(color=<span class="string">"black"</span>, size=<span class="number">12</span>, hjust=<span class="number">0.5</span>, face=<span class="string">"bold"</span>, lineheight=<span class="number">1</span>),</span><br><span class="line">        axis.title.x = element_text(color=<span class="string">"black"</span>, size=<span class="number">8</span>, face=<span class="string">"bold"</span>),</span><br><span class="line">        axis.title.y = element_text(color=<span class="string">"black"</span>, size=<span class="number">10</span>, vjust=<span class="number">1.5</span>, face=<span class="string">"bold"</span>),</span><br><span class="line">        axis.text.x = element_text(size=<span class="number">10</span>,color=<span class="string">"black"</span>,face=<span class="string">"bold"</span>),</span><br><span class="line">        axis.text.y = element_text(size=<span class="number">10</span>,color=<span class="string">"black"</span>,face=<span class="string">"bold"</span>),</span><br><span class="line">        legend.text = element_text(color=<span class="string">"black"</span>, size=<span class="number">10</span>, hjust=-<span class="number">2</span>),</span><br><span class="line">        legend.position=<span class="string">"bottom"</span>) +</span><br><span class="line">  labs(x=<span class="string">"Fold Enrichment"</span>,y=<span class="string">"Biological Process"</span>,size=<span class="string">"-log10(Pvalue)"</span>, title=<span class="string">"GO Enrichment (Test data)"</span>,face=<span class="string">"bold"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p31.png'</span>,height = <span class="number">10</span>,width = <span class="number">15</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohIbR0.png" alt=""></p><h2 id="改变点的颜色">改变点的颜色</h2><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ggplot(df6, aes(x=col, y=Biological.process,color=X.log10.Pvalue.)) +</span><br><span class="line">  geom_point(aes(size = Fold.enrichment)) +</span><br><span class="line">  scale_x_discrete(limits=<span class="built_in">c</span>(<span class="string">"1"</span>)) +</span><br><span class="line">  scale_size(breaks=<span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>)) +</span><br><span class="line">  scale_color_gradient(low=<span class="string">"#fcbba1"</span>, high=<span class="string">"#a50f15"</span>) +</span><br><span class="line">  theme_classic() +</span><br><span class="line">  theme(panel.border=element_rect(fill=<span class="string">'transparent'</span>, color=<span class="string">'black'</span>, size=<span class="number">1</span>),</span><br><span class="line">        plot.title = element_text(color=<span class="string">"black"</span>, size=<span class="number">12</span>, hjust=<span class="number">0.5</span>, face=<span class="string">"bold"</span>, lineheight=<span class="number">1</span>),</span><br><span class="line">        axis.title.x = element_blank(),</span><br><span class="line">        axis.title.y = element_text(color=<span class="string">"black"</span>, size=<span class="number">10</span>, face=<span class="string">"bold"</span>),</span><br><span class="line">        axis.text.x = element_blank(),</span><br><span class="line">        axis.ticks = element_blank(),</span><br><span class="line">        axis.text.y = element_text(size=<span class="number">10</span>,color=<span class="string">"black"</span>,face=<span class="string">"bold"</span>),</span><br><span class="line">        legend.text = element_text(color=<span class="string">"black"</span>, size=<span class="number">8</span>)) +</span><br><span class="line">  labs(y=<span class="string">"Biological Process"</span>,size=<span class="string">"Fold Enrichment"</span>, color=<span class="string">"-Log10(Pvalue)"</span>,title=<span class="string">"GO Enrichment (Test data)"</span>,face=<span class="string">"bold"</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p32.png'</span>,height = <span class="number">10</span>,width = <span class="number">16</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohIqzV.png" alt=""></p><h1 id="组合条形图">组合条形图</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">library(reshape2)</span><br><span class="line"><span class="comment">#build example matrix</span></span><br><span class="line">mat &lt;- as.data.frame(<span class="built_in">list</span>(<span class="built_in">c</span>(<span class="number">100</span>,<span class="number">10</span>,<span class="number">1</span>),<span class="built_in">c</span>(<span class="number">3</span>,<span class="number">6</span>,<span class="number">100</span>)))</span><br><span class="line">colnames(mat) &lt;- <span class="built_in">c</span>(<span class="string">"a"</span>,<span class="string">"b"</span>)</span><br><span class="line">rownames(mat) &lt;- <span class="built_in">c</span>(<span class="string">"gene1"</span>,<span class="string">"gene2"</span>,<span class="string">"gene3"</span>)</span><br><span class="line">plot &lt;- melt(mat)</span><br><span class="line">plot$gene &lt;- <span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"gene1"</span>,<span class="string">"gene2"</span>,<span class="string">"gene3"</span>),ncol(mat))</span><br><span class="line">colnames(plot) &lt;- <span class="built_in">c</span>(<span class="string">"sample"</span>,<span class="string">"value"</span>,<span class="string">"gene"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#barplot</span></span><br><span class="line">library(ggpubr)</span><br><span class="line">plot_a &lt;- plot[plot$sample==<span class="string">"a"</span>,]</span><br><span class="line">plot_b &lt;- plot[plot$sample==<span class="string">"b"</span>,]</span><br><span class="line">barplot_theme &lt;- <span class="keyword">function</span>(){</span><br><span class="line">  theme(</span><br><span class="line">    plot.margin = unit(x=<span class="built_in">c</span>(<span class="number">10</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">5</span>),units=<span class="string">"pt"</span>),</span><br><span class="line">    legend.position=<span class="string">"null"</span>,</span><br><span class="line">    panel.grid=element_blank(),</span><br><span class="line">    panel.border=element_blank(),</span><br><span class="line">    axis.line.y = element_line(color = <span class="string">"black"</span>,size = <span class="number">1.5</span>),</span><br><span class="line">    axis.ticks.y = element_line(color = <span class="string">"black"</span>,size = <span class="number">1.5</span>),</span><br><span class="line">    axis.ticks.x = element_blank(),</span><br><span class="line">    legend.title = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>,family = <span class="string">"Arial"</span>, size=<span class="number">20</span>),</span><br><span class="line">    legend.text= element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>,family = <span class="string">"Arial"</span>, size=<span class="number">20</span>),</span><br><span class="line">    plot.title = element_text(hjust = <span class="number">0.5</span>,size=<span class="number">24</span>,face=<span class="string">"bold"</span>),</span><br><span class="line">    axis.text.x = element_blank(),</span><br><span class="line">    <span class="comment">#axis.text.x = element_text(face="bold", color="black", size=20, angle = 90,hjust = 0,vjust = 0.5),</span></span><br><span class="line">    axis.text.y = element_text(face=<span class="string">"bold"</span>,  color=<span class="string">"black"</span>, size=<span class="number">18</span>, angle = <span class="number">90</span>,hjust=<span class="number">0.5</span>),</span><br><span class="line">    axis.title.x = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>, size=<span class="number">24</span>),</span><br><span class="line">    axis.title.y = element_text(face=<span class="string">"bold"</span>,color=<span class="string">"black"</span>, size=<span class="number">24</span>))</span><br><span class="line">}</span><br><span class="line">p_a &lt;- ggplot(plot_a,aes(x=gene,y=value,fill=sample))+geom_bar(stat = <span class="string">"identity"</span>,color = <span class="string">"black"</span>,size = <span class="number">1.2</span>)+</span><br><span class="line">  theme_bw()+</span><br><span class="line">  xlab(<span class="string">""</span>)+</span><br><span class="line">  ylab(<span class="string">"value: a"</span>)+</span><br><span class="line">  barplot_theme()+</span><br><span class="line">  scale_fill_manual(values=<span class="built_in">c</span>(<span class="string">"blue"</span>))</span><br><span class="line"></span><br><span class="line">p_b &lt;- ggplot(plot_b,aes(x=gene,y=value,fill=sample))+geom_bar(stat = <span class="string">"identity"</span>,color = <span class="string">"black"</span>, size= <span class="number">1.2</span>)+</span><br><span class="line">  theme_bw()+</span><br><span class="line">  scale_y_reverse()+</span><br><span class="line">  xlab(<span class="string">""</span>)+</span><br><span class="line">  ylab(<span class="string">"value: b"</span>)+</span><br><span class="line">  barplot_theme()+</span><br><span class="line">  scale_fill_manual(values = <span class="built_in">c</span>(<span class="string">"red"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#plot combination</span></span><br><span class="line">ggarrange(p_a, p_b,</span><br><span class="line">          ncol = <span class="number">1</span>, nrow = <span class="number">2</span>,heights = <span class="number">5</span>,align = <span class="built_in">c</span>(<span class="string">"v"</span>))</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p33.png'</span>,height = <span class="number">10</span>,width = <span class="number">10</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/o49xgS.png" alt=""></p><h1 id="堆积条形图">堆积条形图</h1><figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#build example matrix</span></span><br><span class="line">fraction &lt;- as.data.frame(<span class="built_in">list</span>(<span class="built_in">c</span>(<span class="number">0.2</span>,<span class="number">0.3</span>,<span class="number">0.5</span>),<span class="built_in">c</span>(<span class="number">0.1</span>,<span class="number">0.7</span>,<span class="number">0.2</span>),<span class="built_in">c</span>(<span class="number">0.8</span>,<span class="number">0.1</span>,<span class="number">0.1</span>)))</span><br><span class="line">colnames(fraction) &lt;- <span class="built_in">c</span>(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>)</span><br><span class="line">rownames(fraction) &lt;- <span class="built_in">c</span>(<span class="string">"componentA"</span>,<span class="string">"componentB"</span>,<span class="string">"componentC"</span>)</span><br><span class="line">fraction</span><br><span class="line">stackplot &lt;- melt(fraction)</span><br><span class="line">stackplot$component &lt;- <span class="built_in">rep</span>(<span class="built_in">c</span>(<span class="string">"componentA"</span>,<span class="string">"componentB"</span>,<span class="string">"componentC"</span>),ncol(fraction))</span><br><span class="line">colnames(stackplot) &lt;- <span class="built_in">c</span>(<span class="string">"sample"</span>,<span class="string">"fraction"</span>,<span class="string">"component"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#stackplot</span></span><br><span class="line">ggplot(stackplot,aes(x=sample,y=fraction*<span class="number">100</span>,fill = component)) + geom_bar(stat = <span class="string">"identity"</span>, width=<span class="number">0.5</span>, col=<span class="string">'black'</span>) +</span><br><span class="line">  theme_bw()+</span><br><span class="line">  theme(<span class="comment">#legend.position="bottom",</span></span><br><span class="line">    legend.position=<span class="string">"right"</span>,</span><br><span class="line">    panel.grid=element_blank(),</span><br><span class="line">    legend.title = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>,family = <span class="string">"Arial"</span>, size=<span class="number">20</span>),</span><br><span class="line">    legend.text= element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>,family = <span class="string">"Arial"</span>, size=<span class="number">20</span>),</span><br><span class="line">    plot.title = element_text(hjust = <span class="number">0.5</span>,size=<span class="number">24</span>,face=<span class="string">"bold"</span>),</span><br><span class="line">    axis.text.x = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>, size=<span class="number">20</span>,angle = <span class="number">90</span>,hjust = <span class="number">1</span>,vjust =<span class="number">0.5</span>),</span><br><span class="line">    axis.text.y = element_text(face=<span class="string">"bold"</span>,  color=<span class="string">"black"</span>, size=<span class="number">20</span>),</span><br><span class="line">    axis.title.x = element_text(face=<span class="string">"bold"</span>, color=<span class="string">"black"</span>, size=<span class="number">24</span>),</span><br><span class="line">    axis.title.y = element_text(face=<span class="string">"bold"</span>,color=<span class="string">"black"</span>, size=<span class="number">24</span>))+</span><br><span class="line">  ylab(<span class="string">"Fraction(%)"</span>)+</span><br><span class="line">  xlab(<span class="string">""</span>)+</span><br><span class="line">  <span class="comment">#geom_vline(aes(xintercept=6.5))+</span></span><br><span class="line">  scale_y_continuous(breaks = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">25</span>,<span class="number">50</span>,<span class="number">75</span>,<span class="number">100</span>),labels = <span class="built_in">c</span>(<span class="string">"0"</span>,<span class="string">"25"</span>,<span class="string">"50"</span>,<span class="string">"75"</span>,<span class="string">"100"</span>),expand = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">0</span>),limits = <span class="built_in">c</span>(<span class="number">0</span>,<span class="number">103</span>))</span><br><span class="line">scale_fill_aaas(alpha = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ggsave(<span class="string">'p34.png'</span>,height = <span class="number">12</span>,width = <span class="number">15</span>,units = <span class="string">'cm'</span>,dpi = <span class="number">300</span>)</span><br></pre></td></tr></tbody></table></figure><p><br><img src="https://s1.ax1x.com/2021/12/09/ohIHGq.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;这一部分会简单分享一些R语言画图的小技巧，后续相应的代码以及测试数据文件都已经上传到百度网盘，可以在**公众号(生信技术)**留言回复“ &lt;strong&gt;R语言&lt;/strong&gt; ”获取。&lt;/p&gt;
&lt;h1 id=&quot;R包安装&quot;&gt;R包安装</summary>
      
    
    
    
    <category term="R语言" scheme="http://lxz9.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="R语言" scheme="http://lxz9.com/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>使用同源建模预测蛋白质结构</title>
    <link href="http://lxz9.com/2021/12/01/Protein_structure_prediction/"/>
    <id>http://lxz9.com/2021/12/01/Protein_structure_prediction/</id>
    <published>2021-12-01T15:00:00.000Z</published>
    <updated>2021-12-02T01:16:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是蛋白质？">什么是蛋白质？</h1><p>蛋白质是大的生物分子，负责执行生物体细胞内的大部分功能，包括对刺激作出反应、作为其他反应的催化剂、将分子从一个地方运输到另一个地方以及执行细胞信号传导。就像 DNA 序列一样，蛋白质序列是一串分子，但与 DNA 序列不同的是，有20种不同的称为氨基酸的分子构成了蛋白质序列。</p><h1 id="蛋白质结构">蛋白质结构</h1><p>每个1D 蛋白质序列串都折叠成3D 结构。这些 3D 蛋白质结构决定了蛋白质如何响应各种环境以及它与哪些其他分子相互作用，因此对于蛋白质执行其功能的能力至关重要。蛋白质的 3D 结构是通过提供蛋白质中每个原子在3D 空间中的坐标 (xyz)来描述的。</p><p><img src="https://z3.ax1x.com/2021/12/01/oJX6qH.jpg" alt=""></p><h1 id="确定蛋白质结构">确定蛋白质结构</h1><p>可以使用X 射线晶体学和核磁共振 (NMR)等实验程序确定蛋白质结构。<br>然而，这些技术缓慢且繁琐，并且不能应用于所有蛋白质。因此，高通量计算方法用于从序列预测蛋白质的 3D 结构。</p><h1 id="同源建模">同源建模</h1><p>蛋白质结构预测最流行的计算方法之一是同源建模。<br><br>同源建模利用蛋白质结构的进化保守性来预测蛋白质的 3D 结构。从相同的共同祖先（同源性）进化而来的两种蛋白质往往具有相似的 3D 结构。</p><p>在同源建模中，这种蛋白质结构保守性的特性用于预测新发现的蛋白质序列的结构，这些蛋白质序列的结构无法使用传统的实验方法解析。</p><p>其主要思想是根据蛋白质序列数据库搜索未知结构的蛋白质序列，其中所有蛋白质的结构在实验上都是已知的，未知结构是根据数据库中进化上最接近或最匹配的蛋白质建模的。</p><p>在这篇文章中，我们描述了同源建模的方法，即它是如何工作的。我们还描述了如何使用 SWISS-MODEL 工具进行同源建模。</p><h1 id="同源建模方法详解">同源建模方法详解</h1><p>在本节中，我们将概述同源建模所涉及的步骤。请注意，其中许多步骤是活跃的研究领域。</p><p>前面提到过，同源性建模始于对许多蛋白质的结构及其序列的了解，这些结构已通过实验方法确定。该方法使用这些先前的知识来预测我们知道序列但还不知道 3D 结构的蛋白质的结构。</p><p>为了预测蛋白质的结构，我们将首先预测 N、C<sub>a</sub>、C<sub>b</sub>（骨架）的坐标，然后是每个氨基酸的 R 基团（侧链）的坐标。</p><p><img src="https://z3.ax1x.com/2021/12/01/oJhZDK.jpg" alt="一条链中的四个氨基酸。请注意由 N、Ca、Cb 原子组成的主链和由 R 基团组成的侧链。"></p><h2 id="一-模板识别和初始对齐">(一) 模板识别和初始对齐</h2><p>首先，我们找到进化上最接近目标的蛋白质（我们希望预测其结构的蛋白质）。</p><p>这是使用数据库搜索算法实现的，例如 BLAST（基本局部比对搜索工具），该算法执行目标序列与蛋白质序列数据库的序列比对。</p><p>PDB（蛋白质数据库）就是这样一种数据库。数据库中与我们的目标最匹配的蛋白质序列被认为是进化上最接近的，其结构将用作目标结构模型的模板。数据库搜索工具还给出了一个比对，即目标的哪些区域匹配模板的哪些区域的信息。</p><h2 id="二-对齐校正">(二) 对齐校正</h2><p>在数据库搜索期间获得的目标和模板之间的初始比对在比对的某些困难区域中可能不是最佳的。例如，初始比对可能违反某些氨基酸替换规则，例如用蛋白质核心中的疏水残基替换亲水残基。</p><p>鉴于我们已经找到了一个初始模板，我们现在可以使用更严格的对齐算法来找到更好的对齐方式。例如，我们可以在这一步使用多个序列比对算法。多序列比对可用于识别高度不同的区域，从而更好地检测插入和删除的适当位置。</p><h2 id="三-骨干生成">(三) 骨干生成</h2><p>优化目标模板比对后，生成目标的蛋白质骨架结构（N-C<sub>a</sub>-C<sub>b</sub>）。</p><p>这是通过基于对齐简单地将模板主干的坐标复制到目标来实现的。也就是说，目标蛋白质中原子的坐标与模板蛋白质中相应原子的坐标相同，如上一步的比对所述的那样。</p><p>这个过程高度依赖于模板结构的准确性，我们初始数据库中的任何错误都会导致我们预测的错误。</p><h2 id="四-循环建模">(四) 循环建模</h2><p>主干步骤不处理对齐中存在的两种类型的不匹配，即插入和删除。将这些不匹配合并到主干中是同源建模中最困难的部分。</p><p>蛋白质的二级结构由螺旋、链和环(<em>helices, strands and loops</em>)组成。由于插入和删除所暗示的构象变化不能发生在螺旋和链中，它们必须发生在环中。</p><p>建模循环有两种主要方法：基于已知和基于能量。<strong>前一种方法</strong>在已知结构的数据库中搜索与目标具有相似序列和端点的环的构象。<strong>后者</strong>通过使用力场函数和分子动力学预测具有最低结构能量的环结构，以从头开始的方式对环构象进行建模。这些方法为最多 5-8 个残基的短环提供了相当准确的结果。</p><h2 id="五-侧链建模">(五) 侧链建模</h2><p>侧链建模涉及预测连接到主链的每个 R 基团的C<sub>a</sub>-C<sub>b</sub>扭转角(<em>torsion angle</em>)的值。</p><p>结构中侧链的构象，也称为旋转异构体，取决于该扭转角的值。侧链通常使用旋转异构体库的方式建模，旋转异构体库包含各种化学邻域下所有 20 个 R 基团的优选构象。</p><h2 id="六-模型优化">(六) 模型优化</h2><p>既然蛋白质结构的所有方面都针对目标进行了建模，现在是对结构进行细微的改变以降低整体能量了。这是以迭代方式实现的。</p><p>在每次迭代中，主链构象和旋转异构体构象交替变化以降低预测结构的总能量。</p><p>模型优化也可以通过运行分子动力学模拟来执行，该模拟从当前预测的结构开始，并根据模拟对结构进行小的更改，即模拟在力作用下蛋白质的每个原子会发生什么在飞秒 <em>(10 -15)</em> 时间尺度上围绕它。</p><h2 id="七-模型验证">(七) 模型验证</h2><p>最后一步是检查预测的结构是否有错误。由于目标和模板之间的低对齐或由于模板结构中的错误，在预测的蛋白质结构中引入了错误。</p><p>对预测的结构进行检查，看看是否所有的键长、键角和扭转角都落在从实验确定的蛋白质结构中发现的特征范围内。还执行能量检查，以查看不同类型的基于结构的能量（如范德华力和静电力）是否处于预期水平。</p><h1 id="使用-SWISS-MODEL-进行同源建模">使用 SWISS-MODEL 进行同源建模</h1><p>我们将通过使用<a href="https://swissmodel.expasy.org/interactive">SWISS-MODEL</a>工具预测鸟氨酸氨甲酰转移酶 <em>Ornithine carbamoyltransferase (UniProtKB accession: P96134)</em> 中存在的蛋白质鸟氨酸氨基甲酰基转移酶的结构来详细研究同源建模程序。</p><h2 id="目标模板识别">目标模板识别</h2><p>第一步是在已知蛋白质结构的序列数据库中搜索目标序列。将登录号粘贴到窗口中，然后点击 <em>“Search For Templates”</em> 按钮</p><p><img src="https://z3.ax1x.com/2021/12/01/oJfzHU.png" alt=""></p><p><img src="https://z3.ax1x.com/2021/12/01/oJfvuV.png" alt=""></p><p>搜索结果显示了不同的蛋白质结构模板，可用于预测目标序列的蛋白质结构。这些模板根据其序列与目标蛋白质序列的对齐程度进行排序。</p><p>第一个选择的结构模板是最佳匹配（99%  identity）。第二个模板与目标序列匹配，具有 53% identity。在右侧的窗口中可以看到两个顶部匹配模板的叠加蛋白质结构。</p><p>我们将使用前两个结果为目标序列构建或预测两个结构，然后选择最佳预测结构。</p><p><img src="https://z3.ax1x.com/2021/12/01/oJh9N4.png" alt=""></p><p>建模结果如下所示。根据模型的质量对这两个预测结构进行排名。</p><p>接下来，我们将评估两个预测结构的质量，看看哪个是最好的。</p><p><img src="https://z3.ax1x.com/2021/12/01/oJhC4J.png" alt=""><br><br><br>QMEAN 是用于评估模型质量的主要措施之一。QMEAN 是一种基于蛋白质结构不同几何特性的复合评分函数，提供全局（即整个结构）和局部（即每个残基）绝对质量估计。</p><p>QMEAN 由四个单独的术语组成。还列出了全局 QMEAN 质量分数的四个单独术语。条形图中的白色区域（数值接近于零）表明该特性与在实验结构中观察到的相似。正值表示模型平均得分高于实验结构，负数表示模型平均得分低于实验结构。</p><p>对于第一个模型（使用 2ef0.1.A 作为模板构建），QMEAN 项主要落在白色区域内。</p><p><img src="https://z3.ax1x.com/2021/12/01/oJhkg1.png" alt=""></p><p>但是，对于第二个模型（使用 3gd5.1.A 作为模板构建），大多数 QMEAN 项与最优模型显著不同</p><p><img src="https://z3.ax1x.com/2021/12/01/oJhF3R.png" alt=""></p><p><img src="https://z3.ax1x.com/2021/12/01/oJhVu6.png" alt=""></p><p>因此，模板2ef0.1.A预测的结构是最优模型，可以作为我们目标序列的预测结构。</p><p><img src="https://z3.ax1x.com/2021/12/01/oJheHO.png" alt=""></p><h1 id="参考">参考</h1><ul><li><p>Swiss-MODEL <a href="https://swissmodel.expasy.org/interactive">https://swissmodel.expasy.org/interactive</a></p></li><li><p>MODELLER <a href="https://salilab.org/modeller/">https://salilab.org/modeller/</a></p></li><li><p>“Homology Modeling” by Elmar Krieger, Sander B. Nabuurs, and Gert Vriend</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是蛋白质？&quot;&gt;什么是蛋白质？&lt;/h1&gt;
&lt;p&gt;蛋白质是大的生物分子，负责执行生物体细胞内的大部分功能，包括对刺激作出反应、作为其他反应的催化剂、将分子从一个地方运输到另一个地方以及执行细胞信号传导。就像 DNA 序列一样，蛋白质序列是一串分子，但与 DNA 序</summary>
      
    
    
    
    
    <category term="同源建模" scheme="http://lxz9.com/tags/%E5%90%8C%E6%BA%90%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习教程总结</title>
    <link href="http://lxz9.com/2021/11/25/python/"/>
    <id>http://lxz9.com/2021/11/25/python/</id>
    <published>2021-11-24T16:00:00.000Z</published>
    <updated>2021-12-02T15:44:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="71de9b34827db00021ed20fc7eb8db8339e701690c89cd70f354f7f980e70a92"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="encryptAsDiary" scheme="http://lxz9.com/tags/encryptAsDiary/"/>
    
  </entry>
  
  <entry>
    <title>基因表达数据的聚类分析方法</title>
    <link href="http://lxz9.com/2021/11/23/Gene_Expression/"/>
    <id>http://lxz9.com/2021/11/23/Gene_Expression/</id>
    <published>2021-11-23T10:00:00.000Z</published>
    <updated>2021-11-26T04:28:18.746Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p><strong>基因表达(<em>gene expression</em>)</strong> 是指将来自基因的遗传信息合成功能性基因产物的过程。</p><p>基因表达产物通常是蛋白质，但是非蛋白质编码基因如转移RNA（tRNA）或小核RNA（snRNA）基因的表达产物是功能性RNA。</p><p>所有已知的生命，无论是真核生物（包括多细胞生物）、原核生物（细菌和古细菌）或病毒，都利用基因表达来合成生命的大分子。</p><p>基因编码并可用于合成蛋白质，这个过程称为基因表达。</p><p>在像人类这样的高等生物中，根据细胞类型（神经细胞或心脏细胞）、环境和疾病状况等各种因素，数以千计的基因以不同的量一起表达。</p><p>例如，不同类型的癌症在人类中引起不同的基因表达模式。可以使用微阵列( <em>Microarray</em> )技术研究不同条件下的这些不同基因的表达模式。</p><h1 id="微阵列和基因表达谱">微阵列和基因表达谱</h1><p>来自微阵列的数据可以想象为矩阵或网格，矩阵中的每个单元格对应于特定条件下的基因表达值。</p><p>如下图所示，矩阵的每一行对应一个基因 <em><strong>g<sub>i</sub></strong></em> ，每一列对应一个条件/样本 <em><strong>s<sub>i</sub></strong></em></p><p><img src="https://z3.ax1x.com/2021/11/23/opN47q.png" alt=""></p><blockquote><p>人类有大约 20,000 个表达基因，假设我们想知道它们的表达模式，即在不同类型的人类癌症下哪些基因产生更高或更低水平的蛋白质。<br><br>另外，假设已知有 20 种人类癌症，那么微阵列基因表达矩阵的结果就有 20,000 行对应基因，20 列对应于 20 种癌症。</p></blockquote><h1 id="基因表达聚类">基因表达聚类</h1><p>分析基因表达数据的第一步是<strong>在经典数据挖掘中对基因或样本进行聚类</strong>。<br>可以根据基因在所有条件下的表达模式对基因进行聚类，并且可以使用所有基因的基因表达模式对样本进行聚类。</p><p><strong>关于聚类问题</strong></p><p><strong>对于基因聚类</strong>，数据点是基因，特征是所有样本的表达值。<br>因此，在针对癌症示例的基因聚类中，将聚类 20,000 个数据点( <em>data-points</em> )，每个点具有 20 个维度。</p><p><strong>聚类基因表达数据提供了对基因共调控(co-regulation)和基因细胞功能的重要见解。</strong><br>聚集在一起的基因在所有样本中具有相似的表达模式，这可能表明这些基因的共同调控。<br>此外，来自同一簇的基因可能执行类似的细胞功能，这有助于注释新发现的基因。</p><p><strong>相反，对于样本聚类</strong>，样本是使用跨所有基因的基因表达量作为特征进行聚类的数据点。由此将聚类 20 个数据点，每个点具有 20,000 个维度。</p><p>下面，我们将讨论执行聚类的不同方法</p><ul><li>Llyod’s</li><li>K-均值聚类 ( <em>K-means clustering</em> )</li><li>层次聚类 ( <em>Hierarchical Clustering</em> )</li></ul><h1 id="邻近计算">邻近计算</h1><p><strong>邻近计算(<em>Proximity calculation</em>)</strong> <br>用于聚类的数据点之间的距离或接近度很重要，因为所有聚类算法的工作原理都是将近点聚集在一个聚类中。</p><p>使用 Pearson 相关系数中的特征计算数据点 <em>O<sub>i</sub></em> 和 <em>O<sub>j</sub></em> 之间距离的有效措施之一：</p><p>Pearson(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">O_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">O_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>) = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></msubsup><mo stretchy="false">(</mo><msub><mi>O</mi><mrow><mi>i</mi><mi>d</mi></mrow></msub><mo>−</mo><msub><mi>μ</mi><mrow><mi>o</mi><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>O</mi><mrow><mi>j</mi><mi>d</mi></mrow></msub><mo>−</mo><msub><mi>μ</mi><mrow><mi>o</mi><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><msqrt><mrow><msubsup><mo>∑</mo><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></msubsup><mo stretchy="false">(</mo><msub><mi>O</mi><mrow><mi>i</mi><mi>d</mi></mrow></msub><mo>−</mo><msub><mi>μ</mi><mrow><mi>o</mi><mi>i</mi></mrow></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt><msqrt><mrow><msubsup><mo>∑</mo><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></msubsup><mo stretchy="false">(</mo><msub><mi>O</mi><mrow><mi>j</mi><mi>d</mi></mrow></msub><mo>−</mo><msubsup><mi>μ</mi><mrow><mi>o</mi><mi>j</mi></mrow><mn>2</mn></msubsup><mo stretchy="false">)</mo></mrow></msqrt></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac {\sum_{d=1}^p(O_{id} - \mu_{oi} )(O_{jd} - \mu_{oj} )}{\sqrt {\sum_{d=1}^p(O_{id} - \mu_{oi})^2} \sqrt {\sum^p_{d=1}(O_{jd} - \mu_{oj}^2)} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.9715em;vertical-align:-0.8646em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1069em;"><span style="top:-2.4838em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0089em;"><span class="svg-align" style="top:-3.4286em;"><span class="pstrut" style="height:3.4286em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912em;"><span style="top:-2.1528em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.9837em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9809em;"><span class="pstrut" style="height:3.4286em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5429em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.5429em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4477em;"><span></span></span></span></span></span><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9589em;"><span class="svg-align" style="top:-3.4286em;"><span class="pstrut" style="height:3.4286em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912em;"><span style="top:-2.1528em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.9837em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4612em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span><span style="top:-2.9309em;"><span class="pstrut" style="height:3.4286em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5429em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.5429em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4977em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5531em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7912em;"><span style="top:-2.1528em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.9837em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8646em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h1 id="K均值聚类">K均值聚类</h1><p><strong>k均值聚类算法(<em>k-means clustering algorithm</em>)</strong> <br>是一种迭代求解的聚类分析算法。属于无监督学习算法。</p><p><strong>步骤:</strong><br>预将数据分为K组，则随机选取K个对象作为初始的聚类中心，然后计算每个对象与各个种子聚类中心之间的距离，把每个对象分配给距离它最近的聚类中心。</p><p>聚类中心以及分配给它们的对象就代表一个聚类。每分配一个样本，聚类的聚类中心会根据聚类中现有的对象被重新计算。<strong>这个过程将不断重复直到满足某个终止条件</strong>。</p><p>以下是一个二维数据。通过查看散点图，数据似乎包含 3 个不同的聚类。<br>因此，我们将任意发起 3 个聚类质心(<em>cluster centroids</em>)或聚类中心(<em>cluster centers</em>)。由于我们还没有任何聚类，这些质心(<em>centroids</em>)是空间中的任意点。</p><p><img src="https://z3.ax1x.com/2021/11/23/opNfns.png" alt=""></p><p>然后，我们计算所有点与 3 个质心的距离，并将这些点分配到它们最近的聚类。然后，我们使用聚类中分配的点重新计算质心。<br><br>聚类中心只是聚类中所有点的平均值。</p><p><img src="https://z3.ax1x.com/2021/11/23/opNRXj.png" alt=""></p><p>重新计算点与 3 个新分配的质心的距离，并将这些点重新分配到它们最近的聚类。<br>在点被重新分配到它们最近的聚类后，重新计算聚类中心。</p><p><img src="https://z3.ax1x.com/2021/11/23/opN2cQ.png" alt=""></p><p>重复上述步骤直到中心点收敛(<em>convergence</em>)，基本上不在发生变化或满足精度为止。</p><p><img src="https://z3.ax1x.com/2021/11/23/opNIA0.png" alt=""></p><h1 id="层次聚类">层次聚类</h1><p><strong>层次聚类(<em>Hierarchical Clustering</em>)</strong> <br>是一种渐进式聚类技术，它从小簇开始，逐渐将密切相关的小簇合并成更大的簇，<strong>直到只剩下一个大簇为止</strong>。</p><p>相对于 <em>K-means</em> 的最大优势之一是层次聚类不必预先定义聚类的数量。相反，可以在聚类过程完成后推断最佳聚类数。</p><p>使用以下包含 25 个数据点的二维数据仔细研究层次聚类算法</p><p><img src="https://z3.ax1x.com/2021/11/23/opNoNV.png" alt=""></p><ol><li><p>将每个点分配给它自己的单个簇，即有 25 个簇，每个簇包含 1 个点。</p></li><li><p>然后，计算每个聚类中心点。</p></li><li><p>计算所有的质心距离并将两个簇连接到一个质心最近的新簇中。重新计算新形成的簇的质心。</p></li></ol><p><img src="https://z3.ax1x.com/2021/11/23/opNThT.png" alt=""></p><p><strong>迭代 1</strong><br><br>再次计算所有的质心距离，并检测最近的两个簇并将其连接到一个新簇中。重新计算新簇的质心。</p><p><img src="https://z3.ax1x.com/2021/11/23/opNH9U.png" alt=""></p><p><strong>迭代 2</strong><br><br>重复3个步骤，计算所有的质心距离，合并2个最近的簇，重新计算新形成的簇的质心，直到只得到一个包含所有25个数据点的大簇（收敛）。</p><p><img src="https://z3.ax1x.com/2021/11/23/opNb3F.png" alt=""></p><p><strong>动图展示</strong><br></p><p><img src="https://z3.ax1x.com/2021/11/23/opNzAx.gif" alt=""><br><br><br>整个层次聚类过程可以使用如下所示的树状图进行可视化，其中分叉树的叶节点是数据点，内部节点显示执行的每个合并步骤。</p><p><img src="https://z3.ax1x.com/2021/11/23/opNqc4.png" alt=""></p><p>左侧的高度比例显示了聚类合并的<strong>距离</strong><br> <strong>最低的内部节点距离很小</strong>，表明最近的簇或点首先被合并。<br><strong>最高的内部节点距离很远</strong>，表示相距很远的点或簇以最高距离连接到一个簇中。</p><p>实际的聚类解决方案是通过在指定距离截止点处跨聚类树状图绘制一条水平线来获得的。</p><p>簇数等于水平切割线遇到的交点数。 <br>例如，在距离截止值(<em>distance cutoff</em>)=60 处绘制的红色水平线为 25 个数据点定义了 3 个clusters。</p><h2 id="例子">例子</h2><p>一个例子显示了通过基因表达数据的层次聚类识别的不同类型的弥漫型B大细胞淋巴瘤(<em>diffuse large B-cell lymphoma</em>)。</p><p>根据确定的不同类型，我们对癌症预期如何发展的估计会有所不同，并且还可能导致处方治疗的差异。</p><p><img src="https://z3.ax1x.com/2021/11/23/opNXu9.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;基因表达(&lt;em&gt;gene expression&lt;/em&gt;)&lt;/strong&gt; 是指将来自基因的遗传信息合成功能性基因产物的过程。&lt;/p&gt;
&lt;p&gt;基因表达产物通常是蛋白质，但是非蛋白质编码基因如转移RNA（tRNA）或</summary>
      
    
    
    
    <category term="进化树" scheme="http://lxz9.com/categories/%E8%BF%9B%E5%8C%96%E6%A0%91/"/>
    
    
    <category term="Evolutionary Tree Construction" scheme="http://lxz9.com/tags/Evolutionary-Tree-Construction/"/>
    
  </entry>
  
  <entry>
    <title>进化树构建之邻接法(Neighbor-Joining)的介绍</title>
    <link href="http://lxz9.com/2021/11/22/Evolutionary_Tree_Construction/"/>
    <id>http://lxz9.com/2021/11/22/Evolutionary_Tree_Construction/</id>
    <published>2021-11-22T12:59:59.000Z</published>
    <updated>2021-11-23T08:22:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进化树构建">进化树构建</h1><p>进化树构建的问题是推断可能产生给定基因序列数据的进化树的拓扑结构和分支长度。推断树中叶节点的数量应等于给定数据中基因序列的数量。</p><h1 id="Neighbor-Joining-Algorithm">Neighbor-Joining Algorithm</h1><p>Neighbor-Joining (NJ)树推理方法最初是由 Saitou 和 Nei 于 1987 年编写的。</p><p>它属于一类基于距离的方法用于构建进化树。 NJ 方法采用给定序列之间的成对进化距离矩阵来构建进化树。Neighbor-Joining是一种<em><strong>bottom-up</strong></em> 的聚类方法，常被用于系统发育树 (phylogenetic tree) 的构建当中。</p><p>成对距离通常从序列比对算法中获得，例如 <em>Smith-Waterman</em> 和 <em>BLAST</em> ，它们将每个基因序列与每个其他基因序列进行比对。比对得分可用作序列之间进化距离的估计。</p><p>可用于计算距离的程序包括：用于 <em>DNA MSA</em> 的 <em>DNADIST</em> 和用于 <em>Protein MSA</em> 的 <em>PROTDIST</em> 。这些程序是 <a href="http://evolution.genetics.washington.edu/phylip.html">PHYLIP</a> 包的一部分。</p><p>我们得到的输出是一棵树以及分支长度</p><p>01</p><blockquote><p>使用基于23种遗传信息的邻接法构建的18个人类群体的遗传距离图。 由日本国立遗传学研究所教授 <em>Saitou Naruya</em> 于 2002 年制作。</p></blockquote><p>在每个阶段，树的两个最近的节点被选择并定义为我们树中的“邻居( <em>neighbors</em> )”。 邻居被定义为一对 <em>OTU(Operational taxonomic units)</em> ，它们有一个节点连接它们，其中 OTU为分类单元，换句话说是树的节点。 操作次数与 <em>n<sup>3</sup></em> 成正比，其中 <em>n</em> 是序列数。</p><h1 id="例子">例子</h1><p>使用 <em>Neighbor Joining Algorithm</em> 构建一个进化树。 我们将使用 <em><strong>n=6</strong></em> 个分类群的假设距离矩阵。</p><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th></tr></thead><tbody><tr><td>B</td><td>5</td><td></td><td></td><td></td><td></td></tr><tr><td>C</td><td>4</td><td>7</td><td></td><td></td><td></td></tr><tr><td>D</td><td>7</td><td>10</td><td>7</td><td></td><td></td></tr><tr><td>E</td><td>6</td><td>9</td><td>6</td><td>5</td><td></td></tr><tr><td>F</td><td>8</td><td>11</td><td>8</td><td>9</td><td>8</td></tr></tbody></table><ol><li><strong>计算每个分类群与所有其他分类群的净分化距离r</strong></li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r(i) = total distance of taxa i from all other taxa's </span><br><span class="line">     = d(i, 1) + d(i, 2) + ... d(i, n)</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th></tr></thead><tbody><tr><td>B</td><td>5</td><td></td><td></td><td></td><td></td></tr><tr><td>C</td><td>4</td><td>7</td><td></td><td></td><td></td></tr><tr><td>D</td><td><strong>7</strong></td><td><strong>10</strong></td><td><strong>7</strong></td><td></td><td></td></tr><tr><td>E</td><td>6</td><td>9</td><td>6</td><td><strong>5</strong></td><td></td></tr><tr><td>F</td><td>8</td><td>11</td><td>8</td><td><strong>9</strong></td><td>8</td></tr></tbody></table><blockquote><p>eg: <code>r(D) = 7 + 10 + 7 + 5 + 9 = 41</code></p></blockquote><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r(A) = 5 + 4 + 7 + 6 + 8 = 30</span><br><span class="line">r(B) = 5 + 7 + 10 + 9 + 11 = 42</span><br><span class="line">r(C) = 4 + 7 + 7 + 6 + 8 = 32</span><br><span class="line">r(D) = 7 + 10 + 7 + 5 + 9 = 41 </span><br><span class="line">r(E) = 6 + 9 + 6 + 5 + 8 = 34</span><br><span class="line">r(F) = 8 + 11 + 8 + 9 + 8 = 44 </span><br></pre></td></tr></tbody></table></figure><ol start="2"><li><strong>使用以下公式为每对分类群计算新的距离矩阵 (M)：</strong></li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">M(i,j) = d(i,j) – (r(i) + r(j))/(n - 2)</span><br></pre></td></tr></tbody></table></figure><ul><li>M(A, B) 的计算示例</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">M(A,B) = d(A,B) – (r(A) + r(B))/(n - 2)</span><br><span class="line">       = 5 - (30 + 42)/(6-2)</span><br><span class="line">       = -13</span><br></pre></td></tr></tbody></table></figure><p>计算完的结果如下图</p><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th></tr></thead><tbody><tr><td>B</td><td>-13</td><td></td><td></td><td></td><td></td></tr><tr><td>C</td><td>-11.5</td><td>-11.5</td><td></td><td></td><td></td></tr><tr><td>D</td><td>-10</td><td>-10</td><td></td><td></td><td></td></tr><tr><td>E</td><td>-10</td><td>-10</td><td>-10.5</td><td>-13</td><td></td></tr><tr><td>F</td><td>-10.5</td><td>-10.5</td><td>-11</td><td>-11.5</td><td>-11.5</td></tr></tbody></table><ol start="3"><li><strong>使用这个新矩阵找到最接近的分类群 <em>i, j</em> 。考虑最小距离并将 <em>u</em> 指定为该对的连接节点。然后使用公式计算分支长度</strong></li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">S(i,u) = d(i,j)/2 + (r(i)-r(j))/2(n-2)</span><br><span class="line">S(j,u) = d(i,j) - S(i,u)</span><br></pre></td></tr></tbody></table></figure><p>例子： 根据矩阵 M，最接近的分类群对是：AB = -13。从 U 到 A 和 U 到 B 的距离计算如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">S(A,U) = d(A,B)/2 + (r(A)-r(B))/2(n-2)</span><br><span class="line">       = 5/2 + (30-42)/2(6-2)</span><br><span class="line">       = 1</span><br><span class="line">S(B,U) = d(A,B) - S(A,U)</span><br><span class="line">       = 5 - 1</span><br><span class="line">       = 4</span><br><span class="line"> </span><br><span class="line">where, d(A,B) = 5, r(A) = 30, r(B) = 42 and n = 6.</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>计算从 U 到所有其他分类群的新距离。 u 和分类群 k 之间的距离 d(u, k) 由下式给出</li></ol><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d(u,k) = [d(i,k) + d(j,k) - d(i,j)]/2</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">d(U,C) = [d(A,C) + d(B,C) - d(A,B)]/2</span><br><span class="line">       = [4+7-5]/2 = 3</span><br><span class="line"> </span><br><span class="line">d(U,D) = [d(A,D]+d(B,D) - d(A,B)]/2</span><br><span class="line">       = [4+7-5]/2 = 6</span><br><span class="line"> </span><br><span class="line">d(U,E) = [d(A, E) + d(B,E) - d(A,B)]/2</span><br><span class="line">       = [6+9-5]/2 = 5</span><br><span class="line"> </span><br><span class="line">d(U,F) = [(d(A,F) + d(B,F) - d(A,B)]/2</span><br><span class="line">       = [8+11-5]/2 = 7 </span><br></pre></td></tr></tbody></table></figure><p>其他距离保持原样。因此，新的矩阵距离矩阵将是：</p><table><thead><tr><th></th><th>U</th><th>C</th><th>D</th><th>E</th></tr></thead><tbody><tr><td>C</td><td>3</td><td></td><td></td><td></td></tr><tr><td>D</td><td>6</td><td>7</td><td></td><td></td></tr><tr><td>E</td><td>5</td><td>6</td><td>5</td><td></td></tr><tr><td>F</td><td>7</td><td>8</td><td>9</td><td>8</td></tr></tbody></table><p>在每一轮中使用新的距离矩阵重复步骤 1 到 4。 在递归地完成每一步之后，得到最终结果：</p><p><img src="https://z3.ax1x.com/2021/11/23/opHbTA.png" alt=""></p><h1 id="优缺点">优缺点</h1><p><strong>好处：</strong></p><ul><li><p>它的计算速度很快，因此可用于大型数据集。</p></li><li><p>它不假设所有谱系都以相同的速度进化，即分子钟假设。</p></li><li><p>它不要求也不假定距离数据是超度量或可加的。</p></li></ul><p><strong>缺点：</strong></p><p>它通常为某些分支分配负长度。<br>尽管一些实现尝试了“最小进化法( <em>minimal evolution</em> )”，但缺乏明确的最优性标准。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;进化树构建&quot;&gt;进化树构建&lt;/h1&gt;
&lt;p&gt;进化树构建的问题是推断可能产生给定基因序列数据的进化树的拓扑结构和分支长度。推断树中叶节点的数量应等于给定数据中基因序列的数量。&lt;/p&gt;
&lt;h1 id=&quot;Neighbor-Joining-Algorithm&quot;&gt;Neighb</summary>
      
    
    
    
    <category term="进化树" scheme="http://lxz9.com/categories/%E8%BF%9B%E5%8C%96%E6%A0%91/"/>
    
    
    <category term="Evolutionary Tree Construction" scheme="http://lxz9.com/tags/Evolutionary-Tree-Construction/"/>
    
  </entry>
  
  <entry>
    <title>进化树相关概念和基本类型的介绍</title>
    <link href="http://lxz9.com/2021/11/20/Evolutionary_tree/"/>
    <id>http://lxz9.com/2021/11/20/Evolutionary_tree/</id>
    <published>2021-11-20T12:59:59.000Z</published>
    <updated>2021-11-20T13:35:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>来自形态、生化和基因序列数据的证据表明，地球上的所有生物都具有遗传相关性，生物的谱系关系可以用一棵巨大的进化树、生命之树或进化树来表示。</p><p>进化树是一种图，其中正在研究的序列表示为叶节点(<em>leaf nodes</em>)，内部节点和分支描述序列之间的进化关系。 在大多数情况下，DNA 序列是来自不同生物体(<em>organisms</em>)的基因序列，可能代表生物体的实际进化。</p><h1 id="进化树">进化树</h1><p>分别来自人类、黑猩猩、小鼠和鱼类物种的 4 个基因序列 <em><strong>Human1</strong></em> 、 <em><strong>Chimpanzee1</strong></em> 、 <em><strong>Mouse1</strong></em> 和 <em><strong>Fish1</strong></em> 。</p><p>我们还将假设这些是在各自物种中将葡萄糖转化为能量的同源或等效基因(<em>homologous/equivalent genes</em>)。 4个基因的假设进化树可以从下图看出</p><p><img src="https://z3.ax1x.com/2021/11/20/IOCllT.png" alt=""></p><p>这棵树显示了来自四个物种的现代或现存基因是如何相互进化的。 树显示有一个共同的祖先基因（树的根）分裂或进化成2个不同的基因； 一个是当今的 <em><strong>Fish1</strong></em> 基因，另一个是小鼠、黑猩猩和人类的共同祖先基因。 然后，小鼠、黑猩猩和人类的共同祖先基因进化成今天的 <em><strong>Mouse1</strong></em> 基因以及 <em><strong>Human1</strong></em> 和 <em><strong>Chimpanzee1</strong></em> 的共同祖先基因。 最终， <em><strong>Human1</strong></em> 和 <em><strong>Chimpanzee1</strong></em> 的共同祖先基因进化成今天的 <em><strong>Human1</strong></em> 和 <em><strong>Chimpanzee1</strong></em> 基因。</p><p>分支长度显示了 4 个基因相对于彼此的相对进化。 例如， <em><strong>Human1</strong></em> 序列在从共同祖先序列中分离出来后，进化程度是黑猩猩序列的两倍。 基因序列之间的进化距离是从一个序列到另一个序列的分支长度的总和。</p><p>比如 <em><strong>Fish1</strong></em> 和 <em><strong>Human1</strong></em> 基因的进化距离为</p><p><em><strong>distance(Fish1, Human1) = 3+1+1+2 = 7</strong></em></p><h1 id="物种进化与基因进化">物种进化与基因进化</h1><p>该进化树仅显示<strong>基因之间的进化关系</strong>，可能代表也可能不代表包含这些基因的物种之间的进化关系。</p><p>如果这些基因确实代表了这 4 个物种的进化关系，那么我们就可以说黑猩猩是人类的近亲，老鼠比鱼更接近人类，因为鱼比老鼠更早地与人类发生了分歧。</p><h1 id="有根和无根的树">有根和无根的树</h1><p>上面显示的树被称为有根树，因为所有基因的共同祖先的位置是完全已知的（在 <em><strong>Fish1</strong></em> 和其余序列之间）。</p><p>树的另一个版本称为无根树，如下所示</p><p><img src="https://z3.ax1x.com/2021/11/20/IOCKf0.png" alt=""></p><p><strong>无根树只显示基因的相对关系，并没有确切的起源点或最古老的共同祖先的位置。</strong></p><h1 id="进化树类型">进化树类型</h1><p><strong>标记树与未标记树(<em>Labeled vs unlabeled trees</em>)</strong> ：</p><p>标记树分配给每个叶分支具有特定的值，而未标记树则没有。</p><p><strong>缩放与未缩放的树(<em>Scaled vs unscaled trees</em>)</strong> ：</p><p>缩放树的边缘长度与特定单位成比例绘制，例如：进化时间。 未缩放的则没有。</p><p><strong>分叉树与多分叉树(<em>Bifurcating vs multifurcating trees</em>)</strong> ：</p><p>分叉树的每个内部节点恰好有两个子节点。 多分叉树有两个以上子节点。</p><p><img src="https://z3.ax1x.com/2021/11/20/IOC16U.png" alt=""></p><blockquote><p>根标记扩展分支进化树</p></blockquote><h1 id="分子钟假说和超度量树">分子钟假说和超度量树</h1><p><strong>分子钟假说(<em>Molecular clock hypothesis</em>)</strong></p><p>假设进化速度在所有独立谱系中都是恒定的，并且树中所有现代序列(<em>present-day sequences</em>)的分支长度与这些序列在时间上的分歧程度成正比。让我们用前面涉及 4 个基因的相同例子来看看这一点。</p><p><img src="https://z3.ax1x.com/2021/11/20/IOCuYq.png" alt=""></p><p>根据有根的树， <em><strong>Fish1</strong></em> 序列最早与其他三个序列分离或发散，比如 300 万年前。这意味着 <em><strong>Fish1</strong></em> 序列已经独立进化了 300 万年。然后，在 <em><strong>Fish1</strong></em> 分化一百万年后， <em><strong>Mouse1</strong></em> 序列形成（比如 200 万年前），在 <em><strong>Mouse1</strong></em> 形成一百万年后， <em><strong>Human1</strong></em> 和 <em><strong>Chimpanzee1</strong></em> 基因再次进化，它们已经进化了 100 万年。</p><p>根据分子钟假说，由于 <em><strong>Fish1</strong></em> 基因进化的时间最长，它<strong>应该具有树中最长的分支长度</strong>，而 <em><strong>Human1</strong></em> 和 <em><strong>Mouse1</strong></em> <strong>应该具有相等且最短的分支</strong>，因为它们进化的时间<strong>最短</strong>。就好像每个基因在形成时就启动了一个分子钟，所有的时钟都以相同的速度滴答作响，因此它们的分支长度对应于这些时钟滴答的时间。<strong>分子钟假设产生了一种称为超量树的进化树</strong>。</p><p><strong>超度量(<em>Ultrametric</em>)树</strong>的两个重要属性是：</p><ul><li><p>最近发散序列的分支长度相等。 <em><strong>Human1</strong></em> 和 <em><strong>Chimpanzee1</strong></em> 基因的分支长度相等，因为它们已经进化了一百万年</p></li><li><p>从根（根节点）到所有基因（叶节点）的路径长度相等，因为所有基因的最大进化总周期相等。在我们的例子中，所有四个基因都已经进化了 300 万年。</p></li></ul><h1 id="结论">结论</h1><p>在本教程中，我们介绍了进化树的概念及其各种类型。在接下来的教程中，我们将考虑<strong>使用特定算法从基因测序数据构建进化树</strong>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;来自形态、生化和基因序列数据的证据表明，地球上的所有生物都具有遗传相关性，生物的谱系关系可以用一棵巨大的进化树、生命之树或进化树来表示。&lt;/p&gt;
&lt;p&gt;进化树是一种图，其中正在研究的序列表示为叶节点(&lt;em&gt;leaf nodes&lt;/e</summary>
      
    
    
    
    <category term="比较基因组学" scheme="http://lxz9.com/categories/%E6%AF%94%E8%BE%83%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"/>
    
    
    <category term="OrthoFinder" scheme="http://lxz9.com/tags/OrthoFinder/"/>
    
  </entry>
  
  <entry>
    <title>OrthoFinder 进行直系同源基因分析教程</title>
    <link href="http://lxz9.com/2021/11/19/OrthoFinder/"/>
    <id>http://lxz9.com/2021/11/19/OrthoFinder/</id>
    <published>2021-11-18T16:00:00.000Z</published>
    <updated>2021-11-19T01:11:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍">介绍</h1><p>OrthoFinder 是<strong>一个快速、准确和全面的比较基因组学平台</strong>。 它找到正交群(orthogroups)和直系同源(orthologs)，推断所有正交群的有根基因树，并识别这些基因树中的所有基因复制事件。它还为被分析的物种推断出一个有根的物种树，并将基因复制事件从基因树映射到物种树的分支。<br>OrthoFinder 还为比较基因组分析提供全面的统计数据。 OrthoFinder 使用简单，运行它所需的只是一组 FASTA 格式的蛋白质序列文件（每个物种一个）。</p><p>总的来说，它将要分析的物种的蛋白质组作为输入，并从这些蛋白质组中：</p><ul><li>推断目标物种的正交群</li><li>推断出一组完整的有根基因树</li><li>推断有根物种树</li><li>使用基因树推断基因之间的所有直系同源关系</li><li>推断基因复制事件并将它们交叉引用到基因和物种树上的相应节点</li><li>为目标物种提供比较基因组学统计数据</li></ul><p>除了大规模分析外，它还可以用于在实验研究之前仔细检查各个直系同源关系。<br><img src="https://z3.ax1x.com/2021/11/18/I7efaj.png" alt=""></p><h1 id="安装">安装</h1><h2 id="使用Conda安装">使用Conda安装</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install orthofinder</span><br></pre></td></tr></tbody></table></figure><h2 id="本地安装">本地安装</h2><p>可以使用 <code>Bioconda</code> 安装 <code>OrthoFinder</code> 或直接从 <code>GitHub</code> 下载。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从github下载最新版本</span></span><br><span class="line">https : //github.com/davidemms/OrthoFinder/releases</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果安装了 python 以及 numpy 和 scipy 库，下载 OrthoFinder_source.tar.gz</span></span><br><span class="line"><span class="comment"># 如果没有，则下载更大的捆绑包 OrthoFinder.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在终端中， cd 到下载软件包的位置</span></span><br><span class="line"><span class="comment"># 提取文件</span></span><br><span class="line">tar xzf OrthoFinder_source.tar.gz</span><br><span class="line">tar xzf OrthoFinder.tar.gz</span><br><span class="line"><span class="comment">#测试运行 OrthoFinder</span></span><br><span class="line">python OrthoFinder_source/orthofinder.py -h</span><br><span class="line">./OrthoFinder/orthofinder -h</span><br></pre></td></tr></tbody></table></figure><h1 id="命令行选项">命令行选项</h1><h2 id="开始分析的选项">开始分析的选项</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-f &lt;dir&gt;：从 FASTA 文件目录开始分析</span><br><span class="line">-b &lt;dir&gt;：从 OrthoFinder 目录中的 BLAST 结果开始分析</span><br><span class="line">-b &lt;dir1&gt; -f &lt;dir2&gt;：从 OrthoFinder dir1 中的 BLAST 结果开始分析并添加 FASTA 文件from dir2</span><br><span class="line">-fg &lt;dir&gt;：从 orthogroups OrthoFinder 目录开始分析</span><br><span class="line">-ft &lt;dir&gt;：从 OrthoFinder 目录中的基因树开始分析</span><br></pre></td></tr></tbody></table></figure><h2 id="停止分析的选项">停止分析的选项</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-op：在为全对全序列搜索准备输入文件后停止（例如 BLAST/DIAMOND）</span><br><span class="line">-og：在推断正交群后停止</span><br><span class="line">-os：在为正交群写入序列文件后停止（需要 '-M msa'）</span><br><span class="line">-oa：停止推断多张序列比对后orthogroups（需要“-M MSA”）</span><br><span class="line">-ot：停止推断基因树orthogroups</span><br></pre></td></tr></tbody></table></figure><h2 id="控制工作流程的选项">控制工作流程的选项</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-M &lt;opt&gt;：使用 MSA 或 DendroBLAST 基因树推断，opt=msa,dendroblast [默认=dendroblast]</span><br></pre></td></tr></tbody></table></figure><h2 id="控制所用程序的选项">控制所用程序的选项</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-S &lt;opt&gt;：序列搜索程序 opt=blast,diamond,mmseqs,... 用户可扩展 [默认 = 菱形]</span><br><span class="line">-A &lt;opt&gt;：MSA 程序 opt=mafft,muscle,... 用户可扩展（需要'-M msa') [默认 = mafft]</span><br><span class="line">-T &lt;opt&gt;：树推理程序 opt=fasttree,raxml,iqtree,... 用户可扩展（需要 '-M msa'）[默认 = fasttree]</span><br></pre></td></tr></tbody></table></figure><h2 id="更多选项">更多选项</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-d：输入是 DNA 序列 -t &lt;int&gt;：用于序列搜索、MSA 和树推理的线程数 [默认为机器上的内核数]</span><br><span class="line">-a &lt;int&gt;：用于内部、RAM 密集型任务的并行分析线程数[默认值 = 1]</span><br><span class="line">-s &lt;file&gt;：用户指定的有根物种树</span><br><span class="line">-I &lt;int&gt;：MCL 膨胀参数 [默认值 = 1.5]</span><br><span class="line">-x &lt;file&gt;：以 OrthoXML 格式输出结果的信息</span><br><span class="line">-p &lt;dir&gt;：将临时 pickle 文件写入 &lt;dir&gt;</span><br><span class="line">-1：仅执行单向序列搜索</span><br><span class="line">-X：不要将物种名称添加到输出文件中的序列 ID</span><br><span class="line">-y：将 HOG 根部下方的旁系同源进化枝拆分为单独的 HOG</span><br><span class="line">-z：不修剪 MSA（列数&gt;=90% 间隙，最小对齐长度 500）</span><br><span class="line">-n &lt;txt&gt;：添加到结果目录的名称</span><br><span class="line">-o &lt;txt&gt;：非默认结果目录</span><br><span class="line">-h：打印这个帮助文本</span><br></pre></td></tr></tbody></table></figure><h1 id="分析前的准备">分析前的准备</h1><h2 id="物种的选择">物种的选择</h2><p>三个标准分析是：</p><ul><li>跨物种进化枝进行比较分析</li><li>识别一对或少数物种之间的直系同源物</li><li>研究进化史上特定点的变化</li></ul><p>在第一种情况下，只需尽可能获取进化枝中所有物种的pep序列。通常，不需要为感兴趣的进化枝包含一个外群。因为这会推迟进化历史中定义正交群（Orthogroups, Orthologs &amp; Paralogs）的点，因此最好不要，如果添加外群的话正交群将具有较低的分辨率。</p><p>在第二种情况下，最好确保有足够的物种以获得最佳结果。同样的规则适用于推断一个好的系统发育树：应该用中间物种分解长分支。需要最少 4 个物种，最佳选择6-10 个。</p><p>如果对物种树特定分支上发生的事感兴趣，那么同样应该确保良好的物种选择。理想情况下，分支下方至少有两个物种，上方最近的分支至少有两个物种，以及在外群至少有两个物种。</p><h2 id="转录组和低质量基因组">转录组和低质量基因组</h2><p>一般来说，最好使用可用的最佳注释基因组，但 OrthoFinder 对缺失基因非常稳健，因此这不是一个大问题。 转录组可能出现的一个问题是，当从每个物种大约 100,000 个转录本开始时。 这在计算上可能很费时，并且可能会导致生成大量文件，因此在这种情况下要多注意。</p><h2 id="使用哪个proteome版本">使用哪个proteome版本</h2><p>OrthoFinder 使用氨基酸序列作为蛋白质编码基因。 理想的情况是对每个基因使用单一的 <em>primary/longest transcript variant</em><br>这也将大大减少运行时间。</p><ul><li><a href="http://ensemblgenomes.org/">Ensembl</a>：使用<code>.pep.all.fa</code>文件而不是<code>.pep.abinitio.fa</code>，据我所知，这些是更好的支持基因模型（如果有问题请纠正）。通常，不是每个基因只有一个代表性的转录本，但有一个随 OrthoFinder 一起提供的脚本提取每个基因的最长转录本，推荐使用它。</li></ul><p>Ensmbl 上还有用于下载基因组的子站点：<a href="http://bacteria.ensembl.org">bacteria</a>、<a href="http://protists.ensembl.org">protists</a>、<a href="http://fungi.ensembl.org">fungi</a>、<a href="http://metazoa.ensembl.org">metazoa</a></p><ul><li><a href="https://phytozome.jgi.doe.gov">Phytozome</a>使用<code>.protein_primaryTranscriptOnly.fa</code>文件</li></ul><h2 id="物种名称">物种名称</h2><p>OrthoFinder 将使用每个蛋白质组<strong>文件名</strong>作为该物种的名称。使用这些的地方是在基因树中，其中<strong>每个基因名称都以其物种名称为前缀</strong>。这非常有助于解释需要查看的任何基因树，因为如果节点是重复或物种形成事件，它会显而易见。它还可以查看基因树中的基因是否以期望它们获得物种树知识的方式相关。</p><p>因此，使用简洁的命名风格。例如，对来自 Phytozome 的植物基因组运行 OrthoFinder 时，给文件命名为<code>A_thaliana.fa</code>和<code>O_sativa.fa</code>。</p><h2 id="基因名称">基因名称</h2><p>OrthoFinder 将通过测试每个登录行上的第一个（空格分隔的）单词是否唯一，尝试找到一组简短的、唯一的基因名称来引用每个序列。<br>如果是，那么基因将通过这些名称来识别。否则，将使用完整的登录行来指代每个基因。由于<em>the quadratic nature of orthology</em>（每个物种对一个直系同源结果文件），每个基因名称将被写出 O(n) 次，因此对于大型分析，使登录行整洁将大量节省磁盘空间以及 OrthoFinder 写出所有直系同源结果文件所花费的时间！</p><p>如果将上述脚本用于 <em>Ensembl proteomes</em>，那么文件将被正确解释，因此它们具有合适的格式，每个序列都有一个基因标识符。</p><h1 id="运行">运行</h1><h2 id="示例数据运行">示例数据运行</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OrthoFinder/orthofinder -f OrthoFinder/ExampleData</span><br></pre></td></tr></tbody></table></figure><h2 id="实际运行">实际运行</h2><p>自己的数据集的话需要将<code>OrthoFinder/ExampleData</code>替换为你的蛋白序列文件所在的文件夹位置。<br>OrthoFinder 将查找具有以下任何文件扩展名的输入 fasta 文件：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.fa</span><br><span class="line">.faa</span><br><span class="line">.fasta</span><br><span class="line">.fas</span><br><span class="line">.pep</span><br></pre></td></tr></tbody></table></figure><h1 id="结果文件解析">结果文件解析</h1><p>默认情况下，OrthoFinder 在输入目录中创建一个名为“OrthoFinder”的结果目录，并将结果放在此处。结果目录如下所示：</p><p><img src="https://z3.ax1x.com/2021/11/18/I7eOZ4.png" alt=""></p><blockquote><p>测试数据的结果文件下载</p></blockquote><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://bioinformatics.plants.ox.ac.uk/davidemms/public_data/Results_model_species.tar.gz --no-check-certificate</span><br></pre></td></tr></tbody></table></figure><h2 id="Phylogenetic-Hierarchical-Orthogroups">Phylogenetic Hierarchical Orthogroups</h2><p>从 2.4.0 版本开始，OrthoFinder 通过分析<strong>有根基因树</strong>来推断每个层级（即物种树中的每个节点）的 HOG、正交群。</p><p>这是一种比以前由 OrthoFinder 使用的基于基因相似性/图形的方法（已弃用的 Orthogroups/Orthogroups.tsv 文件）更准确的正交群推断方法。</p><p>根据 Orthobench benchmarks，这些新的正交群比 OrthoFinder2 正交群 (Orthogroups/Orthogroups.tsv) 准确 12%。通过包括外群物种，可以进一步提高准确度（在 Orthobench 上准确度提高 20%），这有助于解释有根基因树。</p><ol><li><p>N0.tsv<br>是制表符分隔的文本文件。每行包含属于单个正交群的基因。来自每个正交群的基因被组织成列，每个物种一个。额外的列给出了 HOG（分层正交群）ID 和基因树中确定 HOG 的节点（注意，这可以在包含基因的进化枝的根之上）。该文件有效地替换了使用 MCL 进行马尔可夫聚类的Orthogroups/Orthogroups.tsv 中的正交群。</p></li><li><p>N1.txt, N2.tsv, …<br>Orthogroups 从与物种树 N1、N2 等中物种进化枝对应的基因树推断出来。现在可以在分析中包含外群物种，然后使用 HOG 文件获取为物种树中所选进化枝定义的正交群。<br>（分层正群分裂：在分析基因树时，嵌套的分层组（除 N0 以外的任何 HOG，所有物种的最后一个共同祖先级别的 HOG）有时可能会丢失最早发散物种的基因，然后复制在第一个现存基因之前。即使有证据表明它们属于同一个 HOG，但两个最初的分歧进化枝将是旁系同源的。对于大多数分析，通常最好将这些进化枝分成单独的组。这可以使用选项 ’ 请求-y '.)</p></li></ol><h2 id="Species-Tree-文件夹">Species Tree 文件夹</h2><p>进化树查看软件(有很多简单列举几个我用到的)</p><ol><li><p><a href="http://dendroscope.org/">Denroscope</a>是一个树查看器，可以<a href="https://software-ab.informatik.uni-tuebingen.de/download/dendroscope3/welcome.html">下载</a>并在本地运行，如果要查看不止几棵树，它是最佳选择。</p></li><li><p><a href="https://github.com/rambaut/figtree/releases">Figtree</a> 一种用于进化生物学的进化树作图软件，主要用于生物进化系统树，并且支持多种形式的进化树，支持有颜色、名称变化等功能</p></li><li><p>从 Web 浏览器查看，例如 <a href="http://etetoolkit.org/treeview/">ETE Toolkit tree viewer</a>。</p></li></ol><p>使用其中之一，打开文件<code>Species_Tree/SpeciesTree_rooted.txt</code>。由于此文件有<em>bootstrap</em>值，<a href="http://dendroscope.org/">Denroscope</a> 需要选择 <code>Interpret as edge labels</code> 选项才能正确查看它们。物种树看起来像这样：</p><p><img src="https://z3.ax1x.com/2021/11/18/I7mkee.png" alt=""></p><p>这棵树是由 OrthoFinder 使用<a href="https://doi.org/10.1101/267914">STAG算法</a>推断出来的，并使用<a href="https://doi.org/10.1093/molbev/msx259">STRIDE算法</a>进行了生根。</p><p>如上所述，可以在此处看到果蝇位于比其他物种更长的分支上。如果知道物种树应该是什么样子，应该检查树是否符合预期。这里推断树是正确的。</p><p>如果物种树不正确，也不会影响 orthogroup 推断，但它可能会影响某些具有基因重复事件的基因树中的 <em>orthologue</em> 推断。在这种情况下，可以使用更正后的物种树（<code>-ft</code>和<code>-s</code>选项）再次运行 OrthoFinder 分析。通常运行很快，因为所有计算量大的计算（正交群和基因树的推断等）都已经完成。</p><blockquote><p>在这棵树中，支持值并非都是 100%。<br>使用默认选项，物种树推断是使用 STAG 执行的，它使用从支持每个二分的单基因座基因树派生的物种树的比例作为其支持的度量。 这是比多序列比对的标准引导程序支持更严格的措施。<br>如果改为使用<code>-M msa</code>选项，则将使用<strong>串联的多序列比对代替物种树推断</strong>，并且所有二分法的支持度值为 100%。 在这种情况下，支持值对应于从完整的多基因比对中获取的引导复制，这是完全不同的事情。 这是最常用的支持度量，对于相同的数据总是会报告更高的支持值。</p></blockquote><ol><li><p>SpeciesTree_rooted.txt<br>从所有正交群推断的 STAG 物种树，包含内部节点处的 STAG 支持值并使用 STRIDE 植根。</p></li><li><p>SpeciesTree_rooted_node_labels.txt<br>与上面相同的树，但节点被赋予标签（而不是支持值），以允许其他结果文件交叉引用物种树中的分支/节点（例如基因复制事件的位置）。</p></li></ol><h2 id="Orthologues">Orthologues</h2><p>运行 OrthoFinder 的最常见原因之一是找到感兴趣的直系同源基因</p><blockquote><p>实际的操作流程如下：</p></blockquote><ol><li>找一个感兴趣的基因比如：看看果蝇基因 <code>FBgn0005648</code> [它参与核裂解/聚腺苷酸化反应的裂解和聚腺苷酸化步骤（见<a href="http://flybase.org/reports/FBgn0005648.html">FlyBase</a>）] 的 orthologues<br>在<strong>Orthologues</strong>目录中，每个物种都有一个子目录，该子目录又包含每个成对物种比较的文件，列出该物种对之间的直向同源物。<br>打开<code>Orthologues/Orthologues_Drosophila_melanogaster/Drosophila_melanogaster__v__Homo_sapiens.tsv</code><br>该文件包含三列，<code>Orthogroup</code>、<code>Drosophila_melanogaster</code>和<code>Homo_sapiens</code>。在表中找到<code>FBgn0005648</code>，会看到该基因在正交群<strong>OG0001189</strong>中，并且它在人类中具有三个orthologues：<code>ENSG00000205022、ENSG00000100836、ENSG00000258643</code>。</li></ol><h2 id="Gene-Trees">Gene Trees</h2><p>为具有 4 个或更多序列（4 个序列是大多数树推理程序进行树推理所需的最小数量）的每个正交群推断出的有根系统发育树。</p><p>在上面发现<code>FBgn0005648</code>在人类中具有三个直系同源基因，接下来我们将查看基因树，看看是否符合这一点，看看这三个直系同源物是如何产生的。<br>打开<code>Gene_Trees/OG0001189_tree.txt</code></p><p><img src="https://z3.ax1x.com/2021/11/18/I7mZFA.png" alt=""></p><p>从图片可以看出，OrthoFinder 已自动植根 ———— 这棵树植根于<em>Drosophila</em>基因 <code>FBgn0005648</code>。这使得快速检查基因树非常方便，对于更复杂、更难解释的基因树尤其有用。</p><p>查看基因树，我们可以看到发生了两个基因复制事件，一个由脊椎动物共享，另一个由人和小鼠共享。这导致了一对三的直系同源关系，即所有三个人类基因都与一个果蝇基因密切相关。通常情况下，直系同源关系不是一对一的，了解这一点很重要（如果不想花几个月的时间对“直系同源”进行实验）</p><p>我们可以在 FlyBase 上查看这个基因的页面：<a href="http://flybase.org/reports/FBgn0005648.html">http://flybase.org/reports/FBgn0005648.html</a><br>转到<code>Orthologs</code>部分，然后查看<code>Human Orthologs</code>，会发现识别所有这三种直向同源物的方法是<strong>基于树的方法</strong> Compara、eggNOG、OrthoFinder 和 TreeFam。OrthoFinder 是唯一可以在自己的数据上运行的工具。<strong>基于评分的方法</strong>，例如 Hieranoid、Inparanoid、OMA 和 OrthoMCL，仅识别出这些直向同源物中的一个或一个。<strong>基因树对于识别和解决这些复杂的关系尤为重要</strong>。</p><blockquote><p>默认基因树没有支持值。毕竟，OrthoFinder 已经将大约 121,000 个基因分配到正交群中，并在大约 15 分钟内为这些基因推断了近 18,000 个基因树！我们将在后面的教程中讨论如何获取支持值。</p></blockquote><h2 id="Gene-Duplication-Events">Gene Duplication Events</h2><p>拥有基因树意味着 OrthoFinder 可以识别发生的所有基因复制事件。<br>OrthoFinder 在文件<code>Species_Tree/ SpeciesTree_rooted_node_labels.txt</code> 中标记物种树的节点</p><p>查看节点<code>N1</code>，脊椎动物的共同祖先（即 D. rerio、T. rubripes、X.tropicalis、H. sapiens和M. musculus）。有两个文件提供了有关基因复制事件的详细信息。我们先打开<code>Gene_Duplication_Events/SpeciesTree_Gene_Duplications_0.5_Support.txt</code></p><p><img src="https://z3.ax1x.com/2021/11/18/I7mAdH.png" alt=""></p><p>以上给出了基因复制事件的Summary。其中每个节点显示节点名称，后跟一个下划线，然后是映射到物种树中每个节点充分支持的基因复制事件的数量。<br>如果至少 50% 的后代物种保留了复制基因的两个拷贝，则基因复制事件被认为是“得到充分支持的”。</p><p>对于四足动物的共同祖先 <code>N1</code>，有 <strong>2458</strong> 个得到充分支持的基因复制事件。</p><p>我们可以在文件<code>Gene_Duplication_Events/Duplications.tsv</code> 中看到这些基因复制事件的列表。以下是文件中的几行，按它们发生的物种树节点排序：</p><p><img src="https://z3.ax1x.com/2021/11/18/I7eHMT.png" alt=""></p><p>每个基因复制事件都与物种树节点、它发生的正交群/基因树和该基因树中的节点交叉引用。</p><ol><li><p>Duplications.tsv<br>是一个制表符分隔的文本文件，它列出了通过检查每个正群基因树的每个节点识别出的所有基因复制事件。列是“Orthogroup”，“Species Tree node”（发生复制的物种树的分支，参见Species_Tree/SpeciesTree_rooted_node_labels.txt），“Gene tree node”（与基因复制事件对应的节点，参见相应的orthogroup Resolved_Gene_Trees/) 中的树；“支持”（存在复制基因的两个副本的预期物种的比例）；“类型”（“终端”：物种树终端分支上的重复，“非终端”：物种树内部分支上的重复，因此被多个物种共享，“非终端：STRIDE检查基因树的拓扑结构在复制后应该是什么）；“基因 1”（基因列表来自复制基因的一个副本），“基因 2”（基因列表来自复制基因的另一个副本。</p></li><li><p>SpeciesTree_Gene_Duplications_0.5_Support.txt<br>提供了物种树分支上的上述重复的总和。它是一个 newick 格式的文本文件。每个节点或物种名称后面的数字是在导致节点/物种的分支上发生的具有至少 50% 支持度的基因复制事件的数量。分支长度是标准分支长度，如 Species_Tree/SpeciesTree_rooted.txt 中给出的。</p></li></ol><h2 id="Resolved-Gene-Trees">Resolved Gene Trees</h2><p>Orthofinder还列出了从基因复制事件产生的两个拷贝中的每一个的后代的基因。</p><p>我们可以查看 <code>FBgn0005648</code> 直系同源物。<br>通过 <code>Resolved_Gene_Trees/OG0001189_tree.txt</code> 中的基因树。 该目录包含带有标记节点的基因树。</p><p>这些文件显示了 OrthoFinder 在推断直向同源物和基因复制事件时如何解释基因树。 它们可能与直接来自tree inference 步骤（在 Gene_Trees/ 中可用）的原始基因树略有不同。 为了获得已解析的基因树，OrthoFinder 进行了重复-丢失-合并分析，以确定对基因树的更简洁的解释。</p><p><img src="https://z3.ax1x.com/2021/11/18/I7mEod.png" alt=""></p><p>从表中可以看出，在节点 n1 处发生了基因复制事件，所有后代物种中的两个副本均 100% 保留。 查看树，第二个基因复制事件发生在节点 n10 上，如果我们回到表格中，我们可以看到这个列表以及 Danio rerio 中的终端基因复制事件：</p><p><img src="https://z3.ax1x.com/2021/11/18/I7uPVe.png" alt=""></p><p>如果对基因复制事件感兴趣，那么此表包含大量数据。 在这六个物种中，OrthoFinder 确定了 34,065 个基因重复事件，所有这些事件都与它们发生的物种树和基因树的节点交叉引用！ 这些事件也按正交群和物种树节点汇总在文件 <code>Duplications_per_Orthogroup.tsv</code> 和 <code>Duplications_per_Species_Tree_Node.tsv</code> 中，它们都在目录 <code>Comparative_Genomics_Statistics/</code> 中。</p><p>为具有 4 个或更多序列的每个正交群推断出有根的系统发育树，并使用 <code>OrthoFinder hybrid species-overlap/duplication-loss</code> coalescent模型进行解析。</p><h2 id="Comparative-Genomics-Statistics">Comparative Genomics Statistics</h2><ol><li><p>Duplications_per_Orthogroup.tsv<br>一个制表符分隔的文本文件，它给出了每个正交群中标识的重复数。此数据的主文件是 Gene_Duplication_Events/Duplications.tsv。</p></li><li><p>Duplications_per_Species_Tree_Node.tsv<br>它给出了识别为沿着物种树的每个分支发生的重复数。此数据的主文件是 Gene_Duplication_Events/Duplications.tsv。</p></li><li><p>Orthogroups_SpeciesOverlaps.tsv<br>包含作为方阵的每个物种对之间共享的正交群的数量。</p></li><li><p>OrthologuesStats_*.tsv<br>包含矩阵给出每对物种之间一对一、一对多和多对多关系中的直向同源物数量。</p></li><li><p>OrthologuesStats_one-to-one.tsv<br>是每个物种对之间一对一直向同源物的数量。</p></li><li><p>OrthologuesStats_many-to-many.tsv<br>包含每个物种对的多对多关系中的直向同源物的数量（由于物种形成后两个谱系中的基因重复事件）。条目 (i,j) 是物种 i 中与物种 j 中的基因存在多对多直系关系的基因数。</p></li><li><p>OrthologuesStats_one-to-many.tsv<br>条目 (i,j) 给出物种 i 中与物种 j 的基因处于一对多直系关系的基因数量。这里有一个示例结果文件的演练 (<a href="https://github.com/davidemms/OrthoFinder/issues/259">https://github.com/davidemms/OrthoFinder/issues/259</a>)。</p></li><li><p>OrthologuesStats_many-to-one.tsv<br>条目 (i,j) 给出物种 i 中与物种 j 中的基因处于多对一直系关系的基因数量。</p></li><li><p>OrthologuesStats_Total.tsv<br>包含任何多样性的每个物种的直向同源物对的总数。条目 (i,j) 是物种 i 中在物种 j 中具有直向同源物的基因总数。</p></li><li><p>Statistics_Overall.tsv<br>是一个制表符分隔的文本文件，其中包含有关正交群大小和分配给正交群的基因比例的一般统计信息。<br><strong>总的来说，至少 80% 的基因被分配到正交群。少于此值意味着可能会遗漏某些剩余基因实际存在的直系同源关系，物种采样不佳是造成这种情况的最可能原因。 让我们也检查每个物种的百分比。</strong></p></li><li><p>Statistics_PerSpecies.tsv<br>是一个制表符分隔的文本文件，它包含与 Statistics_Overall.csv 文件相同的信息，但针对每个单独的物种。</p></li></ol><h2 id="Orthogroups">Orthogroups</h2><p>每个正交群的 FASTA 文件给出了正交群中每个基因的氨基酸序列。</p><p>通常我们对分组物种比较感兴趣，即跨物种进化枝（而不是一对物种之间的比较）。orthogroup 对多个物种的泛化是orthogroup。就像直系同源物是一对物种的最后一个共同祖先中的单个基因的后裔一样，正交群是一组物种中的单个基因的后裔。OrthoFinder 中的每个基因树，例如上面的基因树，都对应一个正交群。如果我们希望它包含所有成对直向同源物，那么正交群基因树就是我们需要查看的树。并且即使正交群中的某些基因可以是彼此的旁系同源物，但如果我们试图去除任何基因，那么我们也将移除直系同源物。</p><p>因此，如果我们想对一组物种中的“等效”基因进行比较，我们需要对同种群中的基因进行比较。正交群位于文件<code>Orthogroups/Orthogroups.tsv</code> 中。该表每行有一个正交群，每列有一个物种，并从最大的正交群到最小的正交群排序。还有一个传统 OrthoMCL 格式的文件：<code>Orthogroups/Orthogroups.txt</code>。</p><h2 id="Single-Copy-Orthologue">Single Copy Orthologue</h2><p>与<code>Orthogroup Sequences</code>目录相同的文件，但仅限于每个物种只包含一个基因的那些orthogroups。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;介绍&quot;&gt;介绍&lt;/h1&gt;
&lt;p&gt;OrthoFinder 是&lt;strong&gt;一个快速、准确和全面的比较基因组学平台&lt;/strong&gt;。 它找到正交群(orthogroups)和直系同源(orthologs)，推断所有正交群的有根基因树，并识别这些基因树中的所有基因复制</summary>
      
    
    
    
    <category term="比较基因组学" scheme="http://lxz9.com/categories/%E6%AF%94%E8%BE%83%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"/>
    
    
    <category term="OrthoFinder" scheme="http://lxz9.com/tags/OrthoFinder/"/>
    
  </entry>
  
  <entry>
    <title>Snakemake 常用参数以及进阶用法介绍</title>
    <link href="http://lxz9.com/2021/11/12/Snakemake-2/"/>
    <id>http://lxz9.com/2021/11/12/Snakemake-2/</id>
    <published>2021-11-12T07:00:00.000Z</published>
    <updated>2021-11-12T06:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面">写在前面</h1><p>上一篇介绍了 Snakemake 入门教程 做了一个简单的示例，具体查看我的上一篇内容</p><p>下面会介绍一下 Snakemake的<strong>常用参数</strong>以及<strong>进阶的用法</strong>～</p><blockquote><p><strong>介绍之前大家可以看一个视频了解一下(时长:19min14s, 选择性观看)</strong></p></blockquote><div align="center" class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=336686061&amp;bvid=BV1nR4y1t7bz&amp;cid=440799970&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" high_quality="1" danmaku="1" allowfullscreen="true">    </iframe></div><h1 id="参数介绍">参数介绍</h1><h2 id="命令行参数">命令行参数</h2><ol><li>内核数调用</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ snakemake --cores 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定多个可用内核</span></span><br><span class="line">$ snakemake --cores 4</span><br></pre></td></tr></tbody></table></figure><p>Snakemake 执行在同一目录中 名为 <strong>Snakefile</strong> 的文件中指定的工作流（<code>Snakefile</code> 可以通过参数 <code>-s</code> 给出）。</p><ol start="2"><li>试运行</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ snakemake -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 试运行并打印试行内容</span></span><br><span class="line">$ snakemake -n -r</span><br></pre></td></tr></tbody></table></figure><p>可以进行试运行，测试工作流是否正确定义以及估计所需计算量。</p><p>Snakemake 工作流通常定义某些规则的使用线程数。 有时，覆盖工作流定义中给出的默认值可以通过使用<code>--set-threads</code>参数来完成，例如，</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ snakemake --cores 4 --set-threads myrule=2</span><br></pre></td></tr></tbody></table></figure><p>将覆盖为rule <code>myrule</code> 定义的任何线程数，并使用<code>2</code>代替。 类似地，可以覆盖规则中的其他资源定义，通过</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ snakemake --cores 4 --set-resources myrule:partition="foo"</span><br></pre></td></tr></tbody></table></figure><p>当与<a href="https://snakemake.readthedocs.io/en/stable/executing/cluster.html#cluster">集群执行</a>结合使用时，这两种机制都特别方便。</p><h2 id="处理非常大的工作流程">处理非常大的工作流程</h2><p>Snakemake 允许批量运行大型工作流。这样，一次需要评估的文件更少，因此可以更快地推断出作业 DAG</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指示仅计算规则myrule 的三批输入中的第一批</span></span><br><span class="line">$ snakemake --cores 4 --batch myrule=1/3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成第二批</span></span><br><span class="line">$ snakemake --cores 4 --batch myrule=2/3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成第三批</span></span><br><span class="line">$ snakemake --cores 4 --batch myrule=3/3</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>一些参数介绍</th><th>具体内容</th></tr></thead><tbody><tr><td>target</td><td>要建立的目标,可能是rule或文件</td></tr><tr><td>–dry-run, --dryrun, -n</td><td>不执行任何操作，并显示将要执行的操作。如果是一个非常大的工作流程，使用 –dry-run –quiet 仅打印作业 DAG 的摘要</td></tr><tr><td>–profile</td><td>Snakemake 的配置文件的名称</td></tr><tr><td>–snakefile, -s</td><td>指定Snakefile，否则是当前目录下的Snakefile</td></tr><tr><td>–cores, -c , -j</td><td>并行使用 N 个 CPU cores/jobs</td></tr><tr><td>–resources, --res</td><td>指定程序运行的内存</td></tr><tr><td>–config</td><td>设置或覆盖工作流配置对象中的值</td></tr><tr><td>–directory, -d</td><td>指定工作目录</td></tr><tr><td>–touch, -t</td><td>将某文件标记为最新，不真正更改它们</td></tr><tr><td>–force</td><td>强制执行某一条</td></tr><tr><td>–forceall</td><td>强制执行某条Rule及它的依赖</td></tr><tr><td>–report</td><td>创建包含结果和统计信息的 HTML 报告</td></tr><tr><td>–list, -l</td><td>显示给定 Snakefile 中的可用rule</td></tr><tr><td>–dag</td><td>生成整个流程的有向无环图，不进行分析</td></tr><tr><td>–quiet, -q</td><td>不输出任何进度或规则信息</td></tr><tr><td>–all-temp</td><td>将所有输出文件标记为临时文件</td></tr><tr><td>–bash-completion</td><td>文件名、规则名和参数的 bash 补全</td></tr></tbody></table><h1 id="进阶用法">进阶用法</h1><h2 id="1-指定使用的线程数">1. 指定使用的线程数</h2><p>对于某些工具，建议使用多个线程以加快计算速度。Snakemake可以通过<code>threads</code>指令了解规则所需的“threads”。在示例工作流中，为规则<code>bwa_map</code>使用多个线程：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ snakemake --cores 4 --set-threads myrule=2</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rule bwa_map:</span><br><span class="line">    <span class="built_in">input</span>:</span><br><span class="line">        <span class="string">"data/genome.fa"</span>,</span><br><span class="line">        <span class="string">"data/samples/{sample}.fastq"</span></span><br><span class="line">    output:</span><br><span class="line">        <span class="string">"mapped_reads/{sample}.bam"</span></span><br><span class="line">    threads: <span class="number">8</span></span><br><span class="line">    shell:</span><br><span class="line">        <span class="string">"bwa mem -t {threads} {input} | samtools view -Sb - &gt; {output}"</span></span><br></pre></td></tr></tbody></table></figure><p>可以使用大括号表示法（即<code>{threads}</code>）将线程数传到 shell 命令。如果没有threads指令，则默认使用 1 个线程。</p><p>执行工作流时，Snakemake 调度程序会考虑作业所需的线程数。 调度程序会确保同时运行的所有作业的线程总和不超过给定的可用 CPU 内核数。</p><p>这个数字是通过 <code>--cores</code> 命令行参数给出的，这对于实际运行工作流的 <code>snakemake</code> 调用是必需的。 例如</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ snakemake --cores 10</span><br></pre></td></tr></tbody></table></figure><p>将使用 10 个内核执行工作流。 由于rule <code>bwa_map</code> 需要 8 个线程，因此一次只能运行该rule的一项作业，</p><p>Snakemake 调度程序将尝试用其他作业（例如 <code>samtools_sort</code> ）来使剩余的内核饱和。</p><p>当提供的内核数少于线程数时，规则使用的线程数将减少到给定的内核数。</p><p>如果<code>--cores</code> 没有给出数字，则使用所有可用的核心。</p><blockquote><p>使用标志<code>--forceall</code>，可以强制完全重新执行工作流。 将此标志与 <code>--cores</code> 的不同值结合起来，并检查调度程序如何选择要并行运行的作业。</p></blockquote><p>除了非常常见的线程资源外，Snakemake 还提供了一个<strong>resources指令</strong>，可用于指定任意资源，例如内存使用或辅助计算设备（如 GPU）。与线程类似，当使用命令行参数提供该资源的可用量时，调度程序可以考虑 --resources（ <a href="https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#snakefiles-resources">参考资料</a> ）</p><h2 id="2-配置文件">2. 配置文件</h2><p>Snakemake 提供了一个<a href="https://snakemake.readthedocs.io/en/latest/snakefiles/configuration.html">配置文件机制</a>。配置文件可以用<a href="https://www.json.org/json-en.html">JSON</a>或<a href="https://yaml.org/">YAML</a>编写，并与<code>configfile</code>指令一起使用。在我们的示例工作流程中，我们添加了以下行</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configfile: "config.yaml"</span><br></pre></td></tr></tbody></table></figure><p>写到 Snakefile 的顶部</p><p>Snakemake 将加载配置文件并将其内容存储到名为 <code>config</code> 的全局可用字典中。 在我们的例子中，将 <code>config.yaml</code> 中的示例指定为</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">samples:</span><br><span class="line">    A: data/samples/A.fastq</span><br><span class="line">    B: data/samples/B.fastq</span><br></pre></td></tr></tbody></table></figure><p>现在，我们可以从 Snakefile 中删除定义 <code>SAMPLES</code> 的语句，并将规则 <code>bcftools_call</code> 更改为</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rule bcftools_call:</span></span><br><span class="line">    <span class="attr">input:</span></span><br><span class="line">        <span class="string">fa="data/genome.fa",</span></span><br><span class="line">        <span class="string">bam=expand("sorted_reads/{sample}.bam",</span> <span class="string">sample=config["samples"]),</span></span><br><span class="line">        <span class="string">bai=expand("sorted_reads/{sample}.bam.bai",</span> <span class="string">sample=config["samples"])</span></span><br><span class="line">    <span class="attr">output:</span></span><br><span class="line">        <span class="string">"calls/all.vcf"</span></span><br><span class="line">    <span class="attr">shell:</span></span><br><span class="line">        <span class="string">"samtools mpileup -g -f {input.fa} {input.bam} | "</span></span><br><span class="line">        <span class="string">"bcftools call -mv - &gt; {output}"</span></span><br></pre></td></tr></tbody></table></figure><h2 id="3-输入函数">3. 输入函数</h2><p>由于我们已经在配置文件中存储了 FASTQ 文件的路径，我们也可以在 rule <code>bwa_map</code> 来使用这些路径。这种情况与我们上面修改的规则“bcftools_call”不同。</p><p>要理解这一点，重要的是要知道 Snakemake 工作流分三个阶段执行。</p><ol><li><p>在<strong>初始化阶段</strong>，定义工作流的文件被解析并实例化所有规则。</p></li><li><p>在 <strong>DAG</strong> 阶段，通过填充通配符并将输入文件与输出文件匹配来构建所有作业的有向无环依赖图。</p></li><li><p>在<strong>调度阶段</strong>，执行作业的 DAG，根据可用资源启动作业。</p></li></ol><p>rule <code>bcftools_call</code> 的输入文件列表中的扩展函数在初始化阶段执行。</p><p>在这个阶段，我们不知道作业、通配符值和规则依赖关系。因此，在此阶段，我们无法从配置文件中确定rule <code>bwa_map</code> 的 FASTQ 路径，因为我们甚至不知道将从该rule生成哪些作业。相反，我们需要将输入文件的确定推迟到 DAG 阶段。这可以通过指定输入函数而不是输入指令内部的字符串来实现。对于规则<code>bwa_map</code>，其工作方式如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_bwa_map_input_fastqs</span>(<span class="params">wildcards</span>):</span></span><br><span class="line">    <span class="keyword">return</span> config[<span class="string">"samples"</span>][wildcards.sample]</span><br><span class="line"></span><br><span class="line">rule bwa_map:</span><br><span class="line">    <span class="built_in">input</span>:</span><br><span class="line">        <span class="string">"data/genome.fa"</span>,</span><br><span class="line">        get_bwa_map_input_fastqs</span><br><span class="line">    output:</span><br><span class="line">        <span class="string">"mapped_reads/{sample}.bam"</span></span><br><span class="line">    threads: <span class="number">8</span></span><br><span class="line">    shell:</span><br><span class="line">        <span class="string">"bwa mem -t {threads} {input} | samtools view -Sb - &gt; {output}"</span></span><br></pre></td></tr></tbody></table></figure><p>任何正常的功能都可以正常工作。 输入函数将 <code>wildcards</code> 对象作为单个参数，该对象允许通过属性（此处为 <code>wildcards.sample</code> ）访问通配符值。 它们必须返回一个字符串或一个字符串列表，这些字符串被解释为输入文件的路径（这里，我们返回在配置文件中为 示例存储的路径 ）。 一旦确定了作业的通配符值，就会评估输入函数。</p><blockquote><p>当添加新的输入文件时，Snakemake 不会自动重新运行作业，如下所示。 但是，可以使用 <code>snakemake --list-input-changes</code> 获取受此类更改影响的输出文件列表。 要触发重新运行，这一点 bash 有帮助：</p></blockquote><h3 id="示例">示例</h3><p>在 <code>data/samples</code> 文件夹中，还有一个文件 <code>C.fastq</code></p><p>将该文件添加到配置文件中，并查看当使用 <code>snakemake -n --reason --forcerun bcftools_call</code> 调用时，Snakemake 如何重新计算属于新示例的工作流部分。</p><h2 id="4-rule-参数">4. rule 参数</h2><p>有时，shell 命令不仅由<code>input</code> 和 <code>output</code> 文件以及一些静态标志组成。</p><p>特别是，可能需要根据作业的通配符值设置其他参数。 为此，Snakemake 允许使用 <code>params</code> 指令为 rule 定义任意参数。</p><p>有时，shell 命令不仅由输入和输出文件以及一些静态标志组成。 特别是，可能需要根据作业的通配符值设置其他参数。 为此，Snakemake 允许使用 <code>params</code> 指令为规则定义任意参数。</p><p>在我们的工作流程中，使用所谓的<code>read groups</code>注释对齐的<code>reads</code>是合理的，其中包含像<code>sample</code>名称这样的元数据。 我们相应地修改规则<code>bwa_map</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rule bwa_map:</span><br><span class="line">    <span class="built_in">input</span>:</span><br><span class="line">        <span class="string">"data/genome.fa"</span>,</span><br><span class="line">        <span class="keyword">lambda</span> wildcards: config[<span class="string">"samples"</span>][wildcards.sample]</span><br><span class="line">    output:</span><br><span class="line">        <span class="string">"mapped_reads/{sample}.bam"</span></span><br><span class="line">    params:</span><br><span class="line">        rg=<span class="string">r"@RG\tID:{sample}\tSM:{sample}"</span></span><br><span class="line">    threads: <span class="number">8</span></span><br><span class="line">    shell:</span><br><span class="line">        <span class="string">"bwa mem -R '{params.rg}' -t {threads} {input} | samtools view -Sb - &gt; {output}"</span></span><br></pre></td></tr></tbody></table></figure><p>与<code>input</code> 和 <code>output</code> 类似，可以从 shell 命令、基于 Python 的 <code>run</code> 块或脚本指令访问 <code>params</code></p><blockquote><p><code>params</code> 指令也可以使用第 3 步中的函数将初始化推迟到 DAG 阶段。 与 <code>input</code> 函数相比，这些函数可以选择采用额外的参数 <code>input</code>、<code>output</code>、<code>threads</code> 和 <code>resources</code>。</p></blockquote><h2 id="5-log文件记录">5. log文件记录</h2><p>在执行大型工作流时，通常希望将每个作业的日志输出存储到单独的文件中，而不是仅仅将所有日志输出打印到终端(当多个作业并行运行时，这会导致输出混乱)</p><p>为此，Snakemake 允许为rule指定日志文件。 日志文件是通过 <code>log</code> 指令定义的，处理方式与输出文件类似，但它们不受rule匹配的影响，并且在作业失败时不会被清除。 修改规则 <code>bwa_map</code> 如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">rule bwa_map:</span><br><span class="line">    <span class="built_in">input</span>:</span><br><span class="line">        <span class="string">"data/genome.fa"</span>,</span><br><span class="line">        get_bwa_map_input_fastqs</span><br><span class="line">    output:</span><br><span class="line">        <span class="string">"mapped_reads/{sample}.bam"</span></span><br><span class="line">    params:</span><br><span class="line">        rg=<span class="string">r"@RG\tID:{sample}\tSM:{sample}"</span></span><br><span class="line">    log:</span><br><span class="line">        <span class="string">"logs/bwa_mem/{sample}.log"</span></span><br><span class="line">    threads: <span class="number">8</span></span><br><span class="line">    shell:</span><br><span class="line">        <span class="string">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span><br><span class="line">        <span class="string">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span><br></pre></td></tr></tbody></table></figure><p>以上内容通过修改 shell 命令以收集 <code>bwa</code> 和 <code>samtools</code> 的 STDERR 输出，并将其通过管道传输到 <code>{log}</code> 引用的文件中。 <strong>日志文件必须包含与输出文件完全相同的通配符，以避免相同规则的不同作业之间的文件名冲突</strong>。</p><p>最佳做法是将所有日志文件存储在子目录<code>logs/</code>中，并以 rule 或工具名称为前缀。</p><h2 id="6-临时文件和受保护文件">6. 临时文件和受保护文件</h2><p>在工作流程中，为每个样本创建两个 BAM 文件，即rule <code>bwa_map</code> 和 <code>samtools_sort</code> 的输出。 在不处理示例时，底层数据通常是巨大的。 因此，生成的 BAM 文件需要大量磁盘空间，并且它们的创建需要一些时间。</p><p>为了节省磁盘空间，您可以将输出文件标记为临时文件。 一旦所有消耗作业（需要它作为输入）都已执行，Snakemake 将为您删除标记的文件。 我们将这种机制用于规则 <code>bwa_map</code> 的输出文件：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">rule bwa_map:</span><br><span class="line">    <span class="built_in">input</span>:</span><br><span class="line">        <span class="string">"data/genome.fa"</span>,</span><br><span class="line">        get_bwa_map_input_fastqs</span><br><span class="line">    output:</span><br><span class="line">        temp(<span class="string">"mapped_reads/{sample}.bam"</span>)</span><br><span class="line">    params:</span><br><span class="line">        rg=<span class="string">r"@RG\tID:{sample}\tSM:{sample}"</span></span><br><span class="line">    log:</span><br><span class="line">        <span class="string">"logs/bwa_mem/{sample}.log"</span></span><br><span class="line">    threads: <span class="number">8</span></span><br><span class="line">    shell:</span><br><span class="line">        <span class="string">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span><br><span class="line">        <span class="string">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span><br></pre></td></tr></tbody></table></figure><p>一旦执行了后续的 <code>samtools_sort</code> 作业，将导致BAM 文件被删除 。 由于通过读取映射和排序创建 BAM 文件的计算成本很高，因此保护最终的 BAM 文件免遭意外删除或修改是合理的。</p><p>修改规则 <code>samtools_sort</code> 以将其输出文件标记为 <code>protected</code>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rule samtools_sort:</span><br><span class="line">    <span class="built_in">input</span>:</span><br><span class="line">        <span class="string">"mapped_reads/{sample}.bam"</span></span><br><span class="line">    output:</span><br><span class="line">        protected(<span class="string">"sorted_reads/{sample}.bam"</span>)</span><br><span class="line">    shell:</span><br><span class="line">        <span class="string">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span><br><span class="line">        <span class="string">"-O bam {input} &gt; {output}"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 成功执行后，Snakemake 会对文件系统中的输出文件进行写保护，以免被意外覆盖或删除。</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>重新执行整个工作流程并观察 Snakemake 如何处理临时文件和受保护文件。<br>使用目标运行 <code>Snakemake mapped_reads/A.bam</code>。虽然该文件被标记为临时文件，但您会看到 <strong>Snakemake 并没有删除它</strong>，因为它被指定为目标文件。<br>尝试使用试运行选项再次重新执行整个工作流程。您将看到它失败，因为 Snakemake 无法覆盖受保护的输出文件。</p></blockquote><h1 id="总结">总结</h1><p>对于本教程，我们学习创建了一个config.yaml配置文件：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">samples:</span><br><span class="line">    A: data/samples/A.fastq</span><br><span class="line">    B: data/samples/B.fastq</span><br><span class="line"></span><br><span class="line">prior_mutation_rate: <span class="number">0.001</span></span><br></pre></td></tr></tbody></table></figure><p>有了这个，我们工作流程的最终版本Snakefile看起来像这样：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">configfile:</span> <span class="string">"config.yaml"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule all:</span></span><br><span class="line">    <span class="attr">input:</span></span><br><span class="line">        <span class="string">"plots/quals.svg"</span></span><br><span class="line"></span><br><span class="line"><span class="string">def</span> <span class="string">get_bwa_map_input_fastqs(wildcards):</span></span><br><span class="line">    <span class="string">return</span> <span class="string">config["samples"][wildcards.sample]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule bwa_map:</span></span><br><span class="line">    <span class="attr">input:</span></span><br><span class="line">        <span class="string">"data/genome.fa"</span><span class="string">,</span></span><br><span class="line">        <span class="string">get_bwa_map_input_fastqs</span></span><br><span class="line">    <span class="attr">output:</span></span><br><span class="line">        <span class="string">temp("mapped_reads/{sample}.bam")</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">        <span class="string">rg=r"@RG\tID:{sample}\tSM:{sample}"</span></span><br><span class="line">    <span class="attr">log:</span></span><br><span class="line">        <span class="string">"logs/bwa_mem/{sample}.log"</span></span><br><span class="line">    <span class="attr">threads:</span> <span class="number">8</span></span><br><span class="line">    <span class="attr">shell:</span></span><br><span class="line">        <span class="string">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span><br><span class="line">        <span class="string">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule samtools_sort:</span></span><br><span class="line">    <span class="attr">input:</span></span><br><span class="line">        <span class="string">"mapped_reads/{sample}.bam"</span></span><br><span class="line">    <span class="attr">output:</span></span><br><span class="line">        <span class="string">protected("sorted_reads/{sample}.bam")</span></span><br><span class="line">    <span class="attr">shell:</span></span><br><span class="line">        <span class="string">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span><br><span class="line">        <span class="string">"-O bam {input} &gt; {output}"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule samtools_index:</span></span><br><span class="line">    <span class="attr">input:</span></span><br><span class="line">        <span class="string">"sorted_reads/{sample}.bam"</span></span><br><span class="line">    <span class="attr">output:</span></span><br><span class="line">        <span class="string">"sorted_reads/{sample}.bam.bai"</span></span><br><span class="line">    <span class="attr">shell:</span></span><br><span class="line">        <span class="string">"samtools index {input}"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule bcftools_call:</span></span><br><span class="line">    <span class="attr">input:</span></span><br><span class="line">        <span class="string">fa="data/genome.fa",</span></span><br><span class="line">        <span class="string">bam=expand("sorted_reads/{sample}.bam",</span> <span class="string">sample=config["samples"]),</span></span><br><span class="line">        <span class="string">bai=expand("sorted_reads/{sample}.bam.bai",</span> <span class="string">sample=config["samples"])</span></span><br><span class="line">    <span class="attr">output:</span></span><br><span class="line">        <span class="string">"calls/all.vcf"</span></span><br><span class="line">    <span class="attr">params:</span></span><br><span class="line">        <span class="string">rate=config["prior_mutation_rate"]</span></span><br><span class="line">    <span class="attr">log:</span></span><br><span class="line">        <span class="string">"logs/bcftools_call/all.log"</span></span><br><span class="line">    <span class="attr">shell:</span></span><br><span class="line">        <span class="string">"(samtools mpileup -g -f {input.fa} {input.bam} | "</span></span><br><span class="line">        <span class="string">"bcftools call -mv -P {params.rate} - &gt; {output}) 2&gt; {log}"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule plot_quals:</span></span><br><span class="line">    <span class="attr">input:</span></span><br><span class="line">        <span class="string">"calls/all.vcf"</span></span><br><span class="line">    <span class="attr">output:</span></span><br><span class="line">        <span class="string">"plots/quals.svg"</span></span><br><span class="line">    <span class="attr">script:</span></span><br><span class="line">        <span class="string">"scripts/plot-quals.py"</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;写在前面&quot;&gt;写在前面&lt;/h1&gt;
&lt;p&gt;上一篇介绍了 Snakemake 入门教程 做了一个简单的示例，具体查看我的上一篇内容&lt;/p&gt;
&lt;p&gt;下面会介绍一下 Snakemake的&lt;strong&gt;常用参数&lt;/strong&gt;以及&lt;strong&gt;进阶的用法&lt;/strong</summary>
      
    
    
    
    <category term="生物信息学" scheme="http://lxz9.com/categories/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6/"/>
    
    
    <category term="snakemake" scheme="http://lxz9.com/tags/snakemake/"/>
    
  </entry>
  
</feed>
